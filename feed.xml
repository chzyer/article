<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="http://chenye.org/static/article.css"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>
<channel>
	<title>陈冶</title>
	<atom:link href="http://chenye.org/feed.xml" rel="self" type="application/rss+xml" />
	<link>chenye.org</link>
	<description>陈冶 - 一个自以为是的人在意淫</description>
	<language>zh-CN</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>GoPage</generator>
		
		<item>
		<title>实习前传</title>	
		<pubDate>2013-03-10 02:08:56 +0800 CST</pubDate>
		<link>http://chenye.org/pre-fieldwork.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<blockquote>
<p>首先想说的是这篇文章不是为了写给谁的. 只是在这个周末应该抽出一点时间出来, 对自己做一个总结. 顺便明确一下自己到底在想什么.</p>
</blockquote>

<h2>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>为什么来上海</h2>

<p>这个问题不止一个人问过我, 亲戚也好, 同事也好. 说这个的时候, 势必和七牛有关系. 那时翁老大帮我发简历之后, 实际上我第二天就收到了几个面试通知, 后来又接触了七牛的人, 起初我只是在微博上关注 <code>纯银</code> 听到过七牛, 跟老大说起, 他说七牛算是国内一流的创业公司, 用的是go, 我要是能过去倒贴也行啊. 然后电话面试到给offer, 然后就过来了. 当然以上都是背景, 要说为什么的话:</p>

<ol>
<li>我看中了七牛的技术, 七牛在云存储方面已经接近成熟, 在广州的其他公司或许见识不到如此庞大的规模, 我一直很渴望能参与到大规模一点的服务器后端开发, 在广州那些公司或许能见得到, 但在七牛就一定能见识到. 而且我对于这方面的基础相当于没有, 单单是好奇心也会驱使我过来七牛的.</li>
<li>可以认识更多的人. 在广州面试期间, 我深刻感受到其实广州做技术的圈子实际上是很小的, 甚至很多老板之间都相互认识. 七牛在上海, 我便可以顺带认识上海这边做技术的人. 虽说我由于本身性格问题主观上不太喜欢交新朋友, 但不来试试又怎么会知道呢.</li>
<li>我渴望独立. 在家自然不用说, 即使在大学, 我感觉还是缺少了什么, 或者说还是有一些东西可以依靠, 人总是懒惰的, 一有得依靠便不会亲自去做一些东西. 但如果我只身来到上海, 我将会无亲无故, 然后我会一个人租房子住, 我可以自己买菜, 煮饭吃, 洗碗. 甚至房间里面的物品摆放都可以由我自己决定, 这不是很酷吗, 就跟拿到root权限一样.</li>
</ol><blockquote>
<p>综上, 我对上海实际上是没什么情节的. 而选择七牛, 也是多方面因素的同时指向而已. 也不是说我在广州已经混不下去了...</p>
</blockquote>

<h2>
<a name="-1" class="anchor" href="#-1"><span class="mini-icon mini-icon-link"></span></a>住处</h2>

<p>来上海的第一件事肯定是要搞定住处, 这是迈向独立的基本. 来到上海后我很快便找到了心仪的, 可以说说的大概的做法:</p>

<ol>
<li>首先找到公司的地址, 在附近搜索小区, 列出目标小区, 选小区要考虑到公司的距离, 离公车站和离地铁站的距离, 还要看市场, 超市进不进.</li>
<li>上网寻找租房信息, 我上的是58, 百姓, 赶集, 其中58要多一点, 然后一个小区一个小区搜, 然后这些网站上分布这四种人, 一种是房东, 另一种是中介, 而且比较多, 还有是房客, 最后一种是伪房东. 

<ol>
<li>房东比较少, 很多房东都不会自己把租房信息放到网上(或者是不会?), 我基本没看到.</li>
<li>中介非常之多, 我之前看中 <code>张江新苑</code> , 查了下非中介的, 就4个, 中介的却一大堆.</li>
<li>房客转租这也有很多, 我在租房子的时候被迫要租一年份的. 如果我不想住但是还没到合同规定的期限的话, 押金会被房东吃掉, 所以就会有转租的现象出现</li>
<li>伪房东, 实际上我没见过, 但肯定有这种状况. 在表面中他跟你说他就是房东, 也就是没有了中介费, 这种才可怕, 和某数字一样, 表面免费, 暗地里不知道都干了什么.
&gt; 关于用不用找中介的问题, 我是这样看的: 自己找房东或房客转租, 如果能够提前去看房的话再好不过, 剩下了35%的中介费, 但是如果和我一样, 在上海没亲没故, 而且还不能提前来看房, 最好还是找中介吧. 因为中介手头里有多套房, 一间不合意可以再另外看, 初次到来人生地不熟, 有个人带路也是行的. 有些钱就是该花.</li>
</ol>
</li>
<li>来到上海后, 我把行李放到公司, 免得看房的时候拖着一个包袱. 然后去一家房东的房子看了一下, 发现不行, 就直接找中介了, 最后就找到了. 当天签完合同回公司就把行李搬过来.</li>
</ol><blockquote>
<p>感想: Thanks Internet!</p>
</blockquote>]]></content:encoded>
		</item>
		
		<item>
		<title>新博客</title>	
		<pubDate>2013-03-01 14:52:19 +0800 CST</pubDate>
		<link>http://chenye.org/new-blog.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<blockquote>
<p>最近比较上进, 抽时间完善了一下博客, 看了一下, 我的博客也有1年半了, 那我是不是应该为博客写一篇文章呢? </p>
</blockquote>

<h2>
<a name="1-" class="anchor" href="#1-"><span class="mini-icon mini-icon-link"></span></a>1. 历史</h2>

<p>我玩博客那年, 正是大一, 那时候我已经写了挺多php了, 对于会写网站的人来说, 如果没有自己的博客好像说不过去, 那时候 <code>wordpress</code> 很出名, 虽然现在貌似还挺有名的~ 然后我就自己写了个主题, 搭上 <code>wordpress</code> 就算架设好博客了, 用的是虚拟主机. </p>

<h2>
<a name="2-" class="anchor" href="#2-"><span class="mini-icon mini-icon-link"></span></a>2. 宣传</h2>

<p>然后怎么宣传是个问题, 靠搜索引擎肯定不行! 后来发现其实有很多独立博客, 围成一个博客生态圈... 想让自己的博客有人来, 那就到其他博主那里留言, 然后博主出于礼貌就会回访, 然后我每写一篇文章, 就去别人博客留言. 疯癫的时候会一个早上都在刷留言, 但是啊, 文章我还是粗略得看了, 没敢说直接回一个mark... 然后那时比较出名的是一个叫 <code>木木木木木</code> 的博客(当然现在也是). 上面在分享一些前端的代码, 我就在上面留了个言, 发表了看法. 加上我博客长得比较特别, 后来就慢慢有了一点点人气, 也认识了一些朋友.</p>

<blockquote>
<p>表面看来, 在其他独博留言除了能得到概率比较高的回访之外, 但附加的, 如果他的博客<code>PR</code>比较高, 会间接提升自己网站的排名.</p>
</blockquote>

<h2>
<a name="3-" class="anchor" href="#3-"><span class="mini-icon mini-icon-link"></span></a>3. 维护与管理</h2>

<p>博客的维护实际上没有那么难, 也就是<code>简单且麻烦</code>而已... 有种东西叫做<code>习惯的力量</code>, 当你坚持每天发表一篇文章的话, 就能吸引到一些博主乃至spider的每日光临. 我只是坚持了一个月, 然后因为兴趣转移, 在这里已经得不到什么成就感, 每天杂事又多, 就没有写文章了, 因此, 我的文章质量也提升了, 没那么多为了什么而写的文章了. 为了弥补我不经常写文章的缺陷, 我在文章内没有显示写的时间...</p>

<p><code>spam</code> 是每个独立博客都会遇到的问题, 而且这些spam还特么烦人, 还看不懂! <code>wordpress</code> 内置了一款 <code>Akismet</code> 的插件来屏蔽大部分垃圾评论. 我印象中遇到过一次, 还只针对我的一篇文章, 然后我变痛下决心进行修改, 顺便产出了第二套皮肤. 再也没有spam的骚扰了, 因为我改为ajax提交了, 原接收评论POST的PHP文件被我删了..</p>

<blockquote>
<p>其实维护也不会特别难, 垃圾回复也有现成的插件, 差的是坚持写文章的习惯!</p>
</blockquote>

<h2>
<a name="4-" class="anchor" href="#4-"><span class="mini-icon mini-icon-link"></span></a>4. 收获</h2>

<p>自从给博客安了有人评论时邮件通知, 每天一直在期待右下角弹出一个新邮件提示. 当然有时候也会收到一些类似 <code>mark</code> 的评论... 一开始满心欢喜的打开, 评论, 甚至点开连接, 去看看他的博客写了什么. 后来嘛, 我就不太爱鸟人了, 人懒了..</p>

<blockquote>
<p>博客就像玩具, 玩厌了, 就懒得鸟他了.</p>
</blockquote>

<h2>
<a name="5-" class="anchor" href="#5-"><span class="mini-icon mini-icon-link"></span></a>5. 自己的转型</h2>

<p>突然一段时间过后, 我发现我最近怎么一直在玩前端代码, 写博客主题什么的, 于是写了篇《<a href="/about-web-design.html">不该揪着前端不放了</a>》, 到现在我都赞同我以前的看法. 然后我就真的把兴趣转移到其他地方去了..我靠变得真快.我那时应该刚买了手机, 玩 <code>Android</code> 去了.</p>

<blockquote>
<p>人应该时刻明确自己的目标, 该放弃的就应该放弃</p>
</blockquote>

<h2>
<a name="6-" class="anchor" href="#6-"><span class="mini-icon mini-icon-link"></span></a>6. 重拾旧业</h2>

<p>在江湖混, 迟早是要还的. 在独立博客界混, 空间费是要交的! 转眼间一年过去了, 又要交空间费用了, 我在庆幸我竟然不为任何利益玩博客, 所以还要自己租虚拟空间... 那时就暂时放在和一朋友合租的空间上, 然后又过了一阵, 那个空间也快过期了, 然后我就把博客移到 <code>sae</code> 上面了. 也废了一番功夫, 然后我居然没有记录下来... </p>

<h2>
<a name="7-" class="anchor" href="#7-"><span class="mini-icon mini-icon-link"></span></a>7. 博客的意义</h2>

<p>中间有段时间我投简历, 找工作, 靠着比较特殊的主题, 很多老板都说博客做得不错, 当然这只是表面. 更多的是, 我通过博客, 表达了我自己的声音, 我会思考, 而写博客是深化思考的过程, 最后得出文章后会发现思考的东西比没写的时候更深一层, 这个是对于自己的好处, 对于别人, 则是一种分享, 也能透过文章了解到自己是怎样的.</p>

<h2>
<a name="8-" class="anchor" href="#8-"><span class="mini-icon mini-icon-link"></span></a>8. 革命!</h2>

<p>后来, 我想重新写个博客, 当然我不想去用富文本编辑器, 还有我受够了博客只能写plain text, 刚好我接触了github提供的markdown转码非常不错, 经过一番思索, 一个新型的博客如下:</p>

<ol>
<li>使用markdown语法写博文, 去他妈的富文本. 怎么将markdown转码成html? 当然是用github的!</li>
<li>gist写博文: 既然我不想自己弄个富文本编辑器, 那就用其他人的, 正好github的gist是一个分享代码片段的网站, 支持markdown, 于是我打算通过gist写文章, 然后在自己博客同步过来.</li>
<li>展示: 展示就由自己写, 包括前端, 抓取gist到数据库等等.</li>
<li>评论: 评论我顺便沿用gist的, 通过js引用拿到制定gist的评论列表, 巧妙得解决了ajax跨域问题, 然后再本地生成评论, 由于评论不属于博客的价值, 所以动态获取无所谓, 不被搜索引擎检索也无所谓. 评论的话需要使用github账号, 提交到我的网站之后再通过api提交到对应的gist上面.</li>
</ol><blockquote>
<p><a href="http://chenyeblog.sinaapp.com">该博客连接</a>, 当然我现在的博客不是这样的.</p>
</blockquote>

<h2>
<a name="9-" class="anchor" href="#9-"><span class="mini-icon mini-icon-link"></span></a>9. 大革命!!</h2>

<p>上面的博客用了大概持续不到2个月的时间, 12年11月底完成的. 最近我在学 <code>go</code>, 又因为 sae 绑定未备案的域名特别不稳定, 又听说了 <code>github page</code> 的各种神奇, 于是打算再用go写一遍. 蛋疼的时候又开始了.</p>

<blockquote>
<p><code>github page</code><br>
这个服务初衷是提供给一些开源程序一个主页, 支持访问html文件, css, js, 支持绑定域名. 这个除了一些动态功能, 博客的必要条件都满足了. 然后有人做了一个叫 <code>jekyll</code> 的博客程序, 可以架设在github上面, 堪称不错, 不过我没用过...</p>
</blockquote>

<p>然后我制定了一下改进计划:</p>

<ol>
<li>在本地写博文, 不再用到网站了, 因为用mac有几个很不错的markdown编辑器, 比web肯定强很多.</li>
<li>markdown的转码还是使用 <code>GitHub Flavored Markdown</code>, 和上一个不同的是, 是直接使用api进行转码, 但是由于github api对一个ip单位时间内访问次数有限制, 然后发现如果是进行了 <code>Basic Authoration</code> 则可以无限制使用了, 这样就可以了.</li>
<li>用<code>go</code>写一个转码程序, 将一个目录内全部的 markdown 文件转成 html, 当然, html 要基于模板, 这样才方便修改. 然后我用了2-3天来完成这个功能, 由于转成html需要远程获取, 所以速度比较慢, 所以缓存是必要的, 缓存之后, 本地的 markdown 文件可能随时会更新, 删除, 添加. 于是我运用了拙计的插入排序法简单搞定了...</li>
<li>文章更新时间: 本来我是想通过os来检测文件的创建时间, 然后就当作文章的写作时间, 但是我发现以前的文章就回不到以前的时间了, 于是我又写了个时间识别, 可以自己在markdown内部直接写出发表的时间, 程序检测到如果markdown是自己定义时间的就不适用os提供的创建时间了.</li>
<li>界面优化: 最近看太多类似 <code>Read it later</code> 的软件了, 阅读体验实在太好了, 而自己的博客虽说酷了点, 但是可读性实在不强. 所以这次配合markdown, 自己再借鉴这些软件的配色给自己博客也配了色, 感觉还不错, 而且针对移动端做了优化</li>
<li>评论: 评论这里靠 <code>github page</code> 解决不了, 需要我再在 sae 写一个独立的评论程序, 应该类似 <code>多说</code>, 至于为什么不用多说..我想自己多玩一下...</li>
</ol><blockquote>
<p>使用流程是: 用app写博文, 保存到一个特定的目录, 运行程序生成html, 运行脚本通过git上传到github.</p>
</blockquote>]]></content:encoded>
		</item>
		
		<item>
		<title>哪个快?</title>	
		<pubDate>2013-02-28 11:27:24 +0800 CST</pubDate>
		<link>http://chenye.org/which-fast.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>在处理一个问题, 用一个 <code>updated</code> 变量来表示是否进入了 for 循环</p>

<div class="highlight"><pre><span class="n">updated</span> <span class="p">:=</span> <span class="n">false</span>
<span class="k">for</span> <span class="n">i</span><span class="p">:=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;</span><span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="p">++</span> <span class="p">{</span>
    <span class="n">updated</span> <span class="p">=</span> <span class="n">true</span>
<span class="p">}</span>
</pre></div>

<p>然后就会有一个问题, 这样每次都赋值一次会不会太浪费资源, 于是又有了下面的写法:</p>

<div class="highlight"><pre><span class="n">updated</span> <span class="p">:=</span> <span class="n">false</span>
<span class="k">for</span> <span class="n">i</span><span class="p">:=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;</span><span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="p">++</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">!</span> <span class="n">updated</span> <span class="p">{</span>
        <span class="n">updated</span> <span class="p">=</span> <span class="n">true</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>然后是哪种做法快了呢? 无非是在比 if 的执行速度快还是赋值 <code>true</code> 比较快, 很简单, 计时</p>

<div class="highlight"><pre><span class="n">t</span> <span class="p">:=</span> <span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">()</span>
<span class="n">a</span> <span class="p">:=</span> <span class="n">false</span>
<span class="k">for</span> <span class="n">i</span><span class="p">:=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;</span><span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="p">++</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">!</span> <span class="n">a</span> <span class="p">{</span>
        <span class="n">a</span> <span class="p">=</span> <span class="n">true</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="n">_</span> <span class="p">=</span> <span class="n">a</span> <span class="c1">// 为了让go编译通过</span>
<span class="n">println</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">().</span><span class="n">UnixNano</span><span class="p">()</span> <span class="p">-</span> <span class="n">t</span><span class="p">.</span><span class="n">UnixNano</span><span class="p">())</span>
</pre></div>

<blockquote>
<p>得到用时是 864000</p>
</blockquote>

<div class="highlight"><pre><span class="n">t</span> <span class="p">:=</span> <span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">()</span>
<span class="n">a</span> <span class="p">:=</span> <span class="n">false</span>
<span class="k">for</span> <span class="n">i</span><span class="p">:=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;</span><span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="p">++</span> <span class="p">{</span>
    <span class="n">a</span> <span class="p">=</span> <span class="n">true</span>
<span class="p">}</span>
<span class="n">_</span> <span class="p">=</span> <span class="n">a</span>
<span class="n">println</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">().</span><span class="n">UnixNano</span><span class="p">()</span> <span class="p">-</span> <span class="n">t</span><span class="p">.</span><span class="n">UnixNano</span><span class="p">())</span>
</pre></div>

<blockquote>
<p>用时是446000</p>
</blockquote>]]></content:encoded>
		</item>
		
		<item>
		<title>golang并发编程 - 例子解析</title>	
		<pubDate>2013-02-26 17:43:23 +0000 UTC</pubDate>
		<link>http://chenye.org/goroutine-note.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<blockquote>
<p>最近在看《Programming in Go》, 其中关于并发编程写得很不错, 受益非浅, 其中有一些例子是需要多思考才能想明白的, 所以我打算记录下来, 强化一下思路</p>
</blockquote>

<p>《Programming in Go》在 <code>Chapter 7. Concurrent Programming</code> 里面一共用3个例子来讲述并发编程的3个模式, 第一个是 <code>filter</code> , 筛选出后缀名和文件大小文件列表, 还算简单就不说, 然后第二个是升级版, 正则版 <code>filter</code> , 不同的是他是根据正则搜索出文件的文本并且列出来. 这个例子我起初看是有点蒙的, 这样写是没错, 但是为什么要这样写, 他的设计思路是什么, 和其他方法相比他有什么优势, 这些都不清楚, 于是决定好好分析一下. 实际上这个例子实现的功能并不复杂, 所以我的文章实际上是在讨论怎么产生出和作者相似的思路.</p>

<p>如果不考虑用 goroutine 的话, 思路其实很简单:</p>

<pre><code>1. 列出文件列表, 编译正则.
2. 遍历文件, 打开并遍历每行, 如果正则能匹配, 记录下来.
3. 列出来.
</code></pre>

<p>如果用 goroutine , 就会有以下思路:</p>

<pre><code>1. 在得到文件路径数组之后, 分发任务给N个核.
2. 每个核负责打开文件,  将符合条件的那行文本写入到 `channel`
3. 主线程等待并接收`channel`的结果. 显示出来, 完毕
</code></pre>

<hr><p>** 然后下文才是重点 **</p>

<h2>
<a name="1-channel" class="anchor" href="#1-channel"><span class="mini-icon mini-icon-link"></span></a>1. channel关闭的时机</h2>

<p>在go中, channel 是不会自动关闭的, 所以需要在我们使用完之后手动去关闭, 而且如果使用for语法来遍历channel每次得到的数据, 如果channel没有关闭的话会陷入死循环. 在 goroutine 中会造成 deadlock</p>

<div class="highlight"><pre><span class="k">for</span> <span class="nx">job</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">jobs</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">job</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

<p>如果没close, 会触发dead lock. 因为for...range...会自动阻塞直到读取到数据或者channel关闭, 没close的话就会导致整个channel处于睡眠状态. channel关闭后, 就不允许写入(缓冲的数据还在, 还可以读取), 所以,  channel 关闭的时机很重要.</p>

<h2>
<a name="2-" class="anchor" href="#2-"><span class="mini-icon mini-icon-link"></span></a>2. 分发任务</h2>

<p>我所知道任务分发方法有两种:   </p>

<blockquote>
<p>第一种是固定分配, 如果说我想计算1+2+3+...+100, 然后分成4份, 也就是 <code>1+2+..+25</code>, <code>...</code>, <code>...</code>, <code>86+87+...+100</code>, 然后再将结果累加起来.</p>

<p>还有一种是抢占式的, 这里需要使用一个队列, 将所有任务写入队列, 然后开N个goroutine, 每个goroutine从队列读取任务(要确保线程安全), 处理, 完成后再继续读取任务. 不再是固定分配, 自己那份做完了就休息了, 所以看来第二种要好一点.</p>
</blockquote>

<p>采用第二种方式的话, 对应go的做法, 那就是使用一个channel, 命名为 <code>jobs</code>, 将所有的任务写入进去, 写入完毕之后关闭这个 channel, 当然, 因为是N核, 系统能同时处理的任务我们设置为N个(也就是我们使用了N个goroutine), 那么声明 <code>jobs</code> 是缓冲区长度为N的 channel. </p>

<p><code>Buffered channel</code> 和普通的 channel 的差别是他可以同时容纳多个单位数据, 当缓存的数据单位数量等于 channel 容量的时候, 再执行写入将会阻塞, 否则都是及时处理的.</p>

<h2>
<a name="3-" class="anchor" href="#3-"><span class="mini-icon mini-icon-link"></span></a>3. 结果集</h2>

<p>当我们将数据处理后, 就需要将结果收集起来. 需要注意的是, 这些操作不是在主 goroutine 执行, 所以我们需要通过 channel 传递给主 goroutine . 所以只需要在外部声明一个名为 <code>results</code> 的 channel . 然后在主 goroutine 通过 <code>for</code> 来显示, 这时候就会发现一个问题, 这个 <code>results</code> 关闭的时机问题. 正确的关闭时机是写入所有的 <code>Result</code> 之后. 但是别忘了我们同时开了多个 goroutine , 所以 <code>results</code> 应该在 <code>执行任务的 goroutine 完成信号累计到N个</code> 这个时机关闭. 所以我们再引入一个名叫 <code>done</code> 的 channel 来解决. 每个 goroutine 发送完 result 后会写入一次done, 然后我们就可以遍历 done , 遍历之后说明全部完成了, 再执行显示. </p>

<p>Result 的数据结构</p>

<div class="highlight"><pre><span class="kd">type</span> <span class="nx">Result</span> <span class="kd">struct</span> <span class="p">{</span>
    <span class="nx">filename</span> <span class="kt">string</span>
    <span class="nx">lino</span> <span class="kt">int</span>
    <span class="nx">line</span> <span class="kt">string</span>
<span class="p">}</span>
</pre></div>

<p>书中的 <code>cgrep1</code> 就是这样的</p>

<div class="highlight"><pre><span class="kd">func</span> <span class="nx">awaitCompletion</span><span class="p">(</span><span class="nx">done</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{},</span> <span class="nx">results</span> <span class="kd">chan</span> <span class="nx">Result</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">workers</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">done</span>
    <span class="p">}</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">results</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

<p>但是这样有可能造成死锁, 因为书中 <code>results</code> 缓冲区长度限定为最大1000个, 也就是超过1000个 result 的时候再打算写入 result 会等待取出 result 后才执行, done 也不会写入, 而 <code>awaitCompletion</code> 是等到所有 goroutine 都完成了才会取出 <code>results</code>, 而且当 <code>result</code> 非常大的时候因为内存的缘故也是不可能一次性取出的. 所以就需要在读取 <code>results</code> 的同时读取 <code>done</code>, 当读取 <code>done</code> 次数大于 N 后关闭 <code>results</code>, 所以, 因为要在多个 channel 中同时读取, 所以需要使用 <code>select</code>.</p>

<p>下面是书中的 <code>cgrep3</code> , 改进版:</p>

<div class="highlight"><pre><span class="kd">func</span> <span class="nx">waitAndProcessResults</span><span class="p">(</span><span class="nx">timeout</span> <span class="kt">int64</span><span class="p">,</span> <span class="nx">done</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{},</span> <span class="nx">results</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="nx">Result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">finish</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">After</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Duration</span><span class="p">(</span><span class="nx">timeout</span><span class="p">))</span>
    <span class="k">for</span> <span class="nx">working</span> <span class="o">:=</span> <span class="nx">workers</span><span class="p">;</span> <span class="nx">working</span> <span class="p">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="p">{</span>
        <span class="k">select</span> <span class="p">{</span> <span class="c1">// Blocking</span>
            <span class="k">case</span> <span class="nx">result</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">results</span><span class="p">:</span>
                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">"%s:%d:%s\n"</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">filename</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">lino</span><span class="p">,</span>
                <span class="nx">result</span><span class="p">.</span><span class="nx">line</span><span class="p">)</span>
            <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">finish</span><span class="p">:</span>
                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">"timed out"</span><span class="p">)</span>
                <span class="k">return</span> <span class="c1">// Time's up so finish with what results there were</span>
            <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">done</span><span class="p">:</span> 
                <span class="nx">working</span><span class="o">--</span>
        <span class="p">}</span> 
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">{</span>
        <span class="k">select</span> <span class="p">{</span> <span class="c1">// Nonblocking</span>
            <span class="k">case</span> <span class="nx">result</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">results</span><span class="p">:</span>
                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">"%s:%d:%s\n"</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">filename</span><span class="p">,</span> <span class="nx">result</span><span class="p">.</span><span class="nx">lino</span><span class="p">,</span>
                <span class="nx">result</span><span class="p">.</span><span class="nx">line</span><span class="p">)</span>
            <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">finish</span><span class="p">:</span>
                <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">"timed out"</span><span class="p">)</span>
                <span class="k">return</span> <span class="c1">// Time's up so finish with what results there were</span>
            <span class="k">default</span><span class="p">:</span> 
                <span class="k">return</span>
        <span class="p">}</span> 
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>看到这里, 我就有个疑问, 为什么在全部完成之后(done都接收到N个了), 还要再遍历出 <code>results</code>, 直到读取不到才算读取完成呢(我反应一向比较慢^_^)? 于是我做了个实验, 去掉了后面再次循环的部分, 发现有时会遗漏掉数据(我用4个测试文件...), 证明这段代码是有用的!!!</p>

<p>我的想法是, 他是在处理完 result, 然后写入 <code>results</code>, 写完了才发送 <code>done</code>, 也就是在收到所有的 done 之后, 所有的数据应该是已经处理完成的. 为了验证这个想法, 我写了一下代码:</p>

<div class="highlight"><pre><span class="k">for</span> <span class="nx">working</span> <span class="o">:=</span> <span class="nx">workers</span><span class="p">;</span> <span class="nx">working</span> <span class="p">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="p">{</span>
    <span class="k">select</span> <span class="p">{</span> <span class="c1">// Blocking</span>
        <span class="k">case</span> <span class="nx">result</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">results</span><span class="p">:</span>
            <span class="c1">// received result</span>
        <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">done</span><span class="p">:</span> 
            <span class="nx">working</span><span class="o">--</span>
            <span class="k">if</span> <span class="nx">working</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="p">{</span>
                <span class="nb">println</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">results</span><span class="p">))</span>
            <span class="p">}</span>
    <span class="p">}</span> 
<span class="p">}</span>
</pre></div>

<p>然后看到输出的数是大于0的, 也就是说在接收到全部 done 之后, <code>results</code> 还有数据在缓冲区中, 然后在看看发送 <code>result</code> 的代码, 突然就明白了</p>

<div class="highlight"><pre><span class="kd">func</span> <span class="nx">doJobs</span><span class="p">(</span><span class="nx">done</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kd">struct</span><span class="p">{},</span> <span class="nx">lineRx</span> <span class="o">*</span><span class="nx">regexp</span><span class="p">.</span><span class="nx">Regexp</span><span class="p">,</span> <span class="nx">jobs</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="nx">Job</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">job</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">jobs</span> <span class="p">{</span>
        <span class="nx">job</span><span class="p">.</span><span class="nx">Do</span><span class="p">(</span><span class="nx">lineRx</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="nx">done</span> <span class="o">&lt;-</span> <span class="kd">struct</span><span class="p">{}{}</span>
<span class="p">}</span>
</pre></div>

<p>我把写入和读取想当然认为一起发生了, 因为有缓冲区的缘故, doJobs在发送进 <code>results</code> 的缓冲区之后就立刻发送 <code>done</code> 了, 但是写入的数据有没有被处理, 是不知道的, 所以在接收到所有 <code>done</code> 之后, <code>results</code> 缓冲区还有数据, 需要再循环一遍.</p>

<hr><p>附我的代码一份:</p>

<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
<span class="kn">import</span> <span class="p">(</span>
    <span class="s">"fmt"</span>
    <span class="s">"os"</span>
    <span class="s">"runtime"</span>
    <span class="s">"regexp"</span>
    <span class="s">"log"</span>
    <span class="s">"bufio"</span>
<span class="p">)</span>

<span class="kd">type</span> <span class="nx">Job</span> <span class="kd">struct</span> <span class="p">{</span>
    <span class="nx">filename</span> <span class="kt">string</span>
    <span class="nx">results</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="nx">Result</span>
<span class="p">}</span>

<span class="kd">type</span> <span class="nx">Result</span> <span class="kd">struct</span> <span class="p">{</span>
    <span class="nx">filename</span> <span class="kt">string</span>
    <span class="nx">line</span> <span class="kt">string</span>
    <span class="nx">lino</span> <span class="kt">int</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">worker</span> <span class="p">=</span> <span class="nx">runtime</span><span class="p">.</span><span class="nx">NumCPU</span><span class="p">()</span>
<span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">// config cpu number</span>
    <span class="nx">runtime</span><span class="p">.</span><span class="nx">GOMAXPROCS</span><span class="p">(</span><span class="nx">worker</span><span class="p">)</span>
    <span class="nx">files</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Args</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
    <span class="nx">regex</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">Compile</span><span class="p">(</span><span class="nx">os</span><span class="p">.</span><span class="nx">Args</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
        <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="c1">// 任务列表, 并发数目为CPU个数</span>
    <span class="nx">jobs</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="nx">Job</span><span class="p">,</span> <span class="nx">worker</span><span class="p">)</span>
    <span class="c1">// 结果</span>
    <span class="nx">results</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="nx">Result</span><span class="p">,</span> <span class="nx">minimum</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">files</span><span class="p">)))</span>
    <span class="c1">// 标记完成</span>
    <span class="nx">dones</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{},</span> <span class="nx">worker</span><span class="p">)</span>

    <span class="k">go</span> <span class="nx">addJob</span><span class="p">(</span><span class="nx">files</span><span class="p">,</span> <span class="nx">jobs</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">i</span><span class="o">:=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="p">&lt;</span><span class="nx">worker</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="k">go</span> <span class="nx">doJob</span><span class="p">(</span><span class="nx">jobs</span><span class="p">,</span> <span class="nx">regex</span><span class="p">,</span> <span class="nx">dones</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="nx">awaitForCloseResult</span><span class="p">(</span><span class="nx">dones</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nx">addJob</span><span class="p">(</span><span class="nx">files</span> <span class="p">[]</span><span class="kt">string</span><span class="p">,</span> <span class="nx">jobs</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="nx">Job</span><span class="p">,</span> <span class="nx">results</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="nx">Result</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">filename</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">files</span> <span class="p">{</span>
        <span class="nx">jobs</span> <span class="o">&lt;-</span> <span class="nx">Job</span> <span class="p">{</span><span class="nx">filename</span><span class="p">,</span> <span class="nx">results</span><span class="p">}</span>
    <span class="p">}</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">jobs</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nx">doJob</span><span class="p">(</span><span class="nx">jobs</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="nx">Job</span><span class="p">,</span> <span class="nx">regex</span> <span class="o">*</span><span class="nx">regexp</span><span class="p">.</span><span class="nx">Regexp</span><span class="p">,</span> <span class="nx">dones</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kd">struct</span><span class="p">{})</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">job</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">jobs</span> <span class="p">{</span>
        <span class="nx">job</span><span class="p">.</span><span class="nx">Do</span><span class="p">(</span><span class="nx">regex</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="nx">dones</span> <span class="o">&lt;-</span> <span class="kd">struct</span><span class="p">{}{}</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nx">awaitForCloseResult</span><span class="p">(</span><span class="nx">dones</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kd">struct</span><span class="p">{},</span> <span class="nx">results</span> <span class="kd">chan</span> <span class="nx">Result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">working</span> <span class="o">:=</span> <span class="nx">worker</span>
    <span class="nx">done</span> <span class="o">:=</span> <span class="kc">false</span>
    <span class="k">for</span> <span class="p">{</span>
        <span class="k">select</span> <span class="p">{</span>
            <span class="k">case</span> <span class="nx">result</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">results</span><span class="p">:</span>
                <span class="nb">println</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
            <span class="k">case</span> <span class="o">&lt;-</span><span class="nx">dones</span><span class="p">:</span>
                <span class="nx">working</span> <span class="o">-=</span> <span class="mi">1</span>
                <span class="k">if</span> <span class="nx">working</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="p">{</span>
                    <span class="nx">done</span> <span class="p">=</span> <span class="kc">true</span>
                <span class="p">}</span>
            <span class="k">default</span><span class="p">:</span>
                <span class="k">if</span> <span class="nx">done</span> <span class="p">{</span>
                    <span class="k">return</span>
                <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">j</span> <span class="o">*</span><span class="nx">Job</span><span class="p">)</span> <span class="nx">Do</span><span class="p">(</span><span class="nx">re</span> <span class="o">*</span><span class="nx">regexp</span><span class="p">.</span><span class="nx">Regexp</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">f</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">filename</span><span class="p">)</span>
    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
        <span class="nb">println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="k">defer</span> <span class="nx">f</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>

    <span class="nx">b</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewReader</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span>
    <span class="nx">lino</span> <span class="o">:=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="p">{</span>
        <span class="nx">line</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">b</span><span class="p">.</span><span class="nx">ReadLine</span><span class="p">()</span>
        <span class="k">if</span> <span class="nx">re</span><span class="p">.</span><span class="nx">Match</span><span class="p">(</span><span class="nx">line</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">j</span><span class="p">.</span><span class="nx">results</span> <span class="o">&lt;-</span> <span class="nx">Result</span> <span class="p">{</span><span class="nx">j</span><span class="p">.</span><span class="nx">filename</span><span class="p">,</span> <span class="nb">string</span><span class="p">(</span><span class="nx">line</span><span class="p">),</span> <span class="nx">lino</span><span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
            <span class="k">break</span>
        <span class="p">}</span>
        <span class="nx">lino</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nx">minimum</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
    <span class="k">if</span> <span class="nx">a</span> <span class="p">&gt;</span> <span class="nx">b</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">b</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">a</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nb">println</span><span class="p">(</span><span class="nx">o</span> <span class="o">...</span><span class="kd">interface</span><span class="p">{})</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">o</span><span class="o">...</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>使用AndFree入门安卓开发</title>	
		<pubDate>2013-01-18 21:48:01 +0000 UTC</pubDate>
		<link>http://chenye.org/andfree-startup.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<blockquote>
<p>本文主要介绍如何通过开源安卓框架<a href="http://andfree.chenye.org">Andfree</a>来入门安卓开发.</p>
</blockquote>

<h3>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>前提条件</h3>

<hr><ol>
<li>了解java的语法</li>
<li>eclipse和ADT环境已经配置好</li>
<li>部分eclipse操作技巧</li>
</ol><h3>
<a name="-1" class="anchor" href="#-1"><span class="mini-icon mini-icon-link"></span></a>前言</h3>

<hr><p>本篇文章严重按照个人的编程顺序撰写, 毫无模块化归类可言.为了保证阅读和操作效果, 请勿跳着阅读..<br>
如果将本篇文章全部读完, 相信你已经能够胜任大部分安卓开发的任务了!</p>

<h3>
<a name="-2" class="anchor" href="#-2"><span class="mini-icon mini-icon-link"></span></a>项目配置</h3>

<hr><ol>
<li>
<p>新建一个Android工程, 工程名<code>AndFreeStartUp</code>, 包名设置为<code>org.chenye.startup</code>.
进入工程目录, 输入命令</p>

<pre><code>$ git clone git://github.com/chzyer/AndFree.git
</code></pre>

<p>这样就可以在根目录看到<code>AndFree</code>文件夹.</p>
</li>
<li><p>进入<code>eclipse</code>, 可以看到<code>AndFree</code>文件夹, 展开, 选中<code>src</code>, 右键, <code>Build Path</code>-&gt;<code>Use as Source Folder</code>, 这样便成功将AndFree引入到工程中.</p></li>
</ol><h3>
<a name="-3" class="anchor" href="#-3"><span class="mini-icon mini-icon-link"></span></a>成就榜</h3>

<hr><p>涉及的知识点如下:</p>

<ul>
<li>数据库的增删查改</li>
<li>分页处理</li>
<li>界面列表显示</li>
<li>按钮单击事件的回调函数</li>
<li>数组和哈希表的使用</li>
<li>自定义控件的制作</li>
<li>XML与JAVA的结合</li>
<li>Activity的跳转和通信</li>
<li>常用程序交互</li>
</ul><h3>
<a name="-4" class="anchor" href="#-4"><span class="mini-icon mini-icon-link"></span></a>软件内容</h3>

<hr><p>嗯嗯, 要说说我们第一个软件大概是什么东西了. 想来想去, 在覆盖知识全面和上手度相权衡, 大概就只有信息管理软件了. 所以我们的第一个软件就是TODO List吧. 软件涉及的功能如下:</p>

<ul>
<li>首页查看任务列表, 优先显示未完成的</li>
<li>未完成的任务可以打钩(完成), 已完成的可以取消完成</li>
<li>可以<code>添加/编辑</code>TODO任务, 包含的内容有:

<ul>
<li>标题</li>
<li>时间段</li>
</ul>
</li>
<li>每页显示5个, 最下方按钮按下可加载下一页</li>
<li>任务长按弹出菜单, 有以下选项:

<ul>
<li>删除, 需要对话框确认</li>
<li>编辑</li>
</ul>
</li>
</ul><h3>
<a name="-5" class="anchor" href="#-5"><span class="mini-icon mini-icon-link"></span></a>开始编程</h3>

<hr><p>编程的流程大概如下:</p>

<ol>
<li>基础知识介绍</li>
<li>设计主界面XML</li>
</ol><h3>
<a name="-6" class="anchor" href="#-6"><span class="mini-icon mini-icon-link"></span></a>基础知识介绍</h3>

<hr><ul>
<li>刚刚看到Android工程目录, 可能感觉到混乱, 如果一开始不清楚目录的作用的话将会不知如何下手, 所以我感觉有必要在最开始了解一下目录结构

<ul>
<li>
<code>src</code> 代码的目录</li>
<li>
<code>Android x.x.x</code> 这个文件夹代表了使用安卓SDK的版本, 展开里面会有个<code>android.jar</code>, 最核心的android代码都在里面(被编译成.class字节码)</li>
<li>
<code>res</code> 这里面可以存放资源/素材文件, 比如xml(布局代码, 类似html), 图片(png), 静态数据(全局共享的String).</li>
<li>
<code>gen</code> 这个文件夹和<code>res</code>相关联, <strong>这个文件是自动生成的, 不能更改</strong>, 当<code>res</code>当中的资源被修改时, 编译器会自动将<code>res</code>中的文件翻译为R.java中, 目的是可以在java代码内访问<code>res</code>中的资源</li>
<li>
<code>assets</code> 这个可以存放资源文件, 和<code>res</code>的差别是, 这里面的数据不会被R.java收录其中, 可以通过<code>AssetManager</code>访问</li>
<li>
<code>AndroidMainfest.xml</code> 这个可以理解为C语言的main, 整个项目的核心配置文件, 包含了<code>权限声明</code>, <code>Activity声明(同时还可以定义哪个可作为默认启动Activity)</code>
</li>
<li>其他的可以暂时不理</li>
</ul>
</li>
</ul><h3>
<a name="xml" class="anchor" href="#xml"><span class="mini-icon mini-icon-link"></span></a>设计主界面XML</h3>

<hr><p>新建工程之后, 可以在<code>res</code>-&gt;<code>layout</code>下好到<code>main.xml</code>, 双击打开就能看到, 先从<code>Form Widgets</code>中脱出一个<code>Button</code>, 再从<code>Composite</code>里面拖出一个<code>ScrollView</code>, 拉伸他到底部.布局的代码将会是这样</p>

<div class="highlight"><pre><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">"http://schemas.android.com/apk/res/android"</span>
    <span class="na">android:orientation=</span><span class="s">"vertical"</span>
    <span class="na">android:layout_width=</span><span class="s">"fill_parent"</span>
    <span class="na">android:layout_height=</span><span class="s">"fill_parent"</span>
    <span class="nt">&gt;</span>
    <span class="nt">&lt;Button</span> <span class="na">android:text=</span><span class="s">"添加"</span> 
        <span class="na">android:id=</span><span class="s">"@+id/button1"</span>
        <span class="na">android:layout_width=</span><span class="s">"wrap_content"</span>
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/Button&gt;</span>
    <span class="nt">&lt;ScrollView</span> <span class="na">android:id=</span><span class="s">"@+id/scrollView1"</span>
        <span class="na">android:layout_width=</span><span class="s">"match_parent"</span>
        <span class="na">android:layout_height=</span><span class="s">"match_parent"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;LinearLayout</span> <span class="na">android:id=</span><span class="s">"@+id/linearLayout1"</span> 
            <span class="na">android:layout_width=</span><span class="s">"match_parent"</span> 
            <span class="na">android:layout_height=</span><span class="s">"match_parent"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/LinearLayout&gt;</span>
    <span class="nt">&lt;/ScrollView&gt;</span>
<span class="nt">&lt;/LinearLayout&gt;</span>
</pre></div>

<p>需要注意的是<code>ScrollView</code>的<code>layout_height</code>, <code>layout_width</code>都是<code>match_parent</code>.</p>

<h3>
<a name="activity" class="anchor" href="#activity"><span class="mini-icon mini-icon-link"></span></a>新建一个Activity</h3>

<hr><h4>
<a name="java" class="anchor" href="#java"><span class="mini-icon mini-icon-link"></span></a>添加JAVA文件:</h4>

<p>这个Activity的作用是添加TODO的作用. 在<code>src</code>-&gt;<code>org.chenye.andfreestartup</code>右键, 添加一个<code>Class</code>, 名字就叫做<code>Todo</code>, 考虑到这个Activity的作用不仅仅添加, 还有编辑, 就不叫做<code>AddTodo</code>, <code>EditTodo</code>之类的名字了, Activity第一个字母按照规范是要大写.</p>

<p>新建类之后, 这时候他还不是Activity, 需要继承, 在这里, 我选择继承<code>AFActivity</code>, 这个是<code>AndFree</code>里面经过修改的Activity, 然后想加一些代码在Activity启动的时候执行, 这时候就要声明<code>onCreate</code>, 当然, 不用去背, 在空白出输入<code>oncr</code>, 然后再按<code>alt+/</code>打开自动补全, 找到<code>onCreate</code>就行了.</p>

<h4>
<a name="activity-1" class="anchor" href="#activity-1"><span class="mini-icon mini-icon-link"></span></a>声明Activity:</h4>

<p>刚才说到<code>AndroidMainfest.xml</code>是负责声明Activity的, 如果没声明的话跳转到这个Activity会触发一个Exception, 声明方法:</p>

<ol>
<li>打开<code>Androidmainfest.xml</code>, 在下面的选项卡点击<code>Application</code>, 在<code>Application Nodes</code>可以看到程序自动建立的<code>AndfreeStartupActivity</code>, 我们可以在这里建立<code>Todo</code>窗口.</li>
<li>可以校对一下我的代码</li>
</ol><div class="highlight"><pre><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">"http://schemas.android.com/apk/res/android"</span>
    <span class="na">package=</span><span class="s">"org.chenye.andfreestartup"</span>
    <span class="na">android:versionCode=</span><span class="s">"1"</span>
    <span class="na">android:versionName=</span><span class="s">"1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;uses-sdk</span> <span class="na">android:minSdkVersion=</span><span class="s">"9"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;application</span> <span class="na">android:icon=</span><span class="s">"@drawable/icon"</span> 
        <span class="na">android:label=</span><span class="s">"@string/app_name"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".AndfreeStartupActivity"</span>
            <span class="na">android:label=</span><span class="s">"@string/app_name"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;intent-filter&gt;</span>
                <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"android.intent.action.MAIN"</span> <span class="nt">/&gt;</span>
                <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.LAUNCHER"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;/intent-filter&gt;</span>
        <span class="nt">&lt;/activity&gt;</span>
        <span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">"Todo"</span><span class="nt">&gt;&lt;/activity&gt;</span>
    <span class="nt">&lt;/application&gt;</span>
<span class="nt">&lt;/manifest&gt;</span>
</pre></div>

<h4>
<a name="-7" class="anchor" href="#-7"><span class="mini-icon mini-icon-link"></span></a>界面设计:</h4>

<p>这时候Todo窗体还是一个空壳, 我们为他设计一个界面吧, 和为主窗体的操作不同的是, 这次我们要自己创建xml.<br>
嗯, 还是进入<code>res</code>-&gt;<code>layout</code>, 新建一个<code>activity_todo.xml</code>, 命名注意, 只能全部是小写字母, 并且用<code>_</code>连接起来, 至于为什么, 大概是这些都要收录进<code>R.java</code>吧.   </p>

<ol>
<li>在<code>Select the root element for the XML file:</code>那里选择<code>RelativeLayout</code>
</li>
<li>在<code>Text Fields</code>拖一个<code>Plain Text</code>到界面里, 水平居中, 并且宽度充满整个屏幕. 嗯, <code>RelativeLayout</code>有这功能.</li>
<li>再添加一个按钮, 放<code>Plain Text</code>的右下方</li>
<li>再添加一个按钮, 放<code>Plain Text</code>的左下方</li>
<li>全部代码如下</li>
</ol><div class="highlight"><pre><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;RelativeLayout</span>
    <span class="na">xmlns:android=</span><span class="s">"http://schemas.android.com/apk/res/android"</span>
    <span class="na">android:orientation=</span><span class="s">"vertical"</span>
    <span class="na">android:layout_width=</span><span class="s">"match_parent"</span>
    <span class="na">android:layout_height=</span><span class="s">"match_parent"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;EditText</span> <span class="na">android:id=</span><span class="s">"@+id/editText1"</span> 
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span> 
        <span class="na">android:layout_alignParentTop=</span><span class="s">"true"</span> 
        <span class="na">android:layout_centerHorizontal=</span><span class="s">"true"</span> 
        <span class="na">android:layout_width=</span><span class="s">"match_parent"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;requestFocus&gt;&lt;/requestFocus&gt;</span>
    <span class="nt">&lt;/EditText&gt;</span>
    <span class="nt">&lt;Button</span> <span class="na">android:id=</span><span class="s">"@+id/button1"</span> 
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span> 
        <span class="na">android:layout_width=</span><span class="s">"wrap_content"</span> 
        <span class="na">android:text=</span><span class="s">"Button"</span> 
        <span class="na">android:layout_below=</span><span class="s">"@+id/editText1"</span> 
        <span class="na">android:layout_alignParentRight=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/Button&gt;</span>
    <span class="nt">&lt;Button</span> <span class="na">android:text=</span><span class="s">"Button"</span> 
        <span class="na">android:layout_width=</span><span class="s">"wrap_content"</span>
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span>
        <span class="na">android:id=</span><span class="s">"@+id/button2"</span>
        <span class="na">android:layout_below=</span><span class="s">"@+id/editText1"</span>
        <span class="na">android:layout_alignParentLeft=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/Button&gt;</span>
<span class="nt">&lt;/RelativeLayout&gt;</span>
</pre></div>

<h4>
<a name="-8" class="anchor" href="#-8"><span class="mini-icon mini-icon-link"></span></a>界面绑定:</h4>

<p>到这里, java和xml文件都已经准备完毕, 现在是怎么将两者关联起来.实际上是很简单的. </p>

<ol>
<li>
<p>到<code>Todo.java</code>的<code>onCreate</code>方法, 添加</p>

<div class="highlight"><pre><span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_todo</span><span class="o">);</span>
</pre></div>

<p>有几个问题:</p>

<blockquote>
<h3>
<a name="setcontentview" class="anchor" href="#setcontentview"><span class="mini-icon mini-icon-link"></span></a>setContentView的作用</h3>

<p>无可厚非, 这里的作用肯定是将xml当做Activity的模板, 需要注意的是, Activity支持的一些方法<code>findViewById</code>是需要先设置<code>setContentView</code>, 原因很简单.</p>

<h3>
<a name="rlayoutactivity_todo" class="anchor" href="#rlayoutactivity_todo"><span class="mini-icon mini-icon-link"></span></a>R.layout.activity_todo是怎么来的</h3>

<p>刚刚说到<code>gen</code>的作用是将<code>res</code>中的数据收录到<code>R.java</code>中, 刚刚我们做的操作是在<code>res/layout/</code>添加<code>activity_todo.xml</code>, 当我们按下保存按钮时, 编译器会将res里面的文件夹进行编译, 还有<code>drawable-ldpi</code>, <code>drawable-hdpi</code>, 会被合并为<code>R.drawable</code>, <code>values</code>会根据里面的内容再单独编译, 比如<code>values</code>文件夹里面存在<code>strings.xml</code>, 就会编译成<code>R.strings</code>.还有一个特殊的, 编译器会自动收集<code>layout</code>里面的id, 合并相同的, 生成<code>R.id</code>.
所以, 我们能拿到<code>R.layout.activity_todo</code>, 类型是<code>int</code></p>
</blockquote>
</li>
<li>
<p>定义控件, 在Todo内添加</p>

<div class="highlight"><pre><span class="c1">//注意大小写</span>
<span class="kd">class</span> <span class="nc">Widget</span> <span class="kd">extends</span> <span class="n">WidgetList</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">AFEdit</span> <span class="n">title</span> <span class="o">=</span> <span class="n">edt</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">editText1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFButton</span> <span class="n">save</span> <span class="o">=</span> <span class="n">btn</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFButton</span> <span class="n">cancel</span> <span class="o">=</span> <span class="n">btn</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button2</span><span class="o">);</span>
<span class="o">};</span><span class="n">Widget</span> <span class="n">widget</span><span class="o">;</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">){</span>
    <span class="c1">//xxx</span>
    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_todo</span><span class="o">);</span>
    <span class="n">widget</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Widget</span><span class="o">();</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">initAll</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>

<blockquote>
<h3>
<a name="-9" class="anchor" href="#-9"><span class="mini-icon mini-icon-link"></span></a>作用:</h3>

<p>这个使用了AndFree定义控件定义方式, 将控件名称和对应的id在明显的位置声明出来.然后在<code>onCreate</code>内实例化<code>Widget</code>, 并且通过<code>widget.initAll(this)</code>初始化内部所有的控件.</p>

<h3>
<a name="-10" class="anchor" href="#-10"><span class="mini-icon mini-icon-link"></span></a>原来的定义方式是?</h3>

<p>嗯, 为了方便阅读, 使用了基于AndFree的控件定义方式, 不然, 控件的定义方式将如下</p>
</blockquote>

<div class="highlight"><pre><span class="kd">public</span> <span class="n">EditText</span> <span class="n">title</span><span class="o">;</span>
<span class="kd">public</span> <span class="n">Button</span> <span class="n">save</span><span class="o">;</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">){</span>
    <span class="c1">//xxx</span>
    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_todo</span><span class="o">);</span>
    <span class="n">title</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">editText1</span><span class="o">);</span>
    <span class="n">save</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button1</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</li>
<li>
<p>给按钮添加事件:</p>

<p>添加事件, 因为这个事件不是即时发生的, 而是在按钮按下的时候才执行, 所以我们需要用到回调. 在JAVA里面, 要达到回调的效果就要使用<code>interface</code>. 不过, 对于按钮单击, <code>android</code>提供一个<code>OnClickListener</code>的接口, 不用我们自己去定义.给按钮添加事件非常简单.</p>

<div class="highlight"><pre><span class="c1">//写法一</span>
<span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">toast</span><span class="o">(</span><span class="s">"save button pressed!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">});</span>
</pre></div>

<p>在上一点中已经实例化了widget, 并且调用了<code>initAll</code>, 所以这时候widget内部的控件都已经能够正常使用. <code>widget.save</code>对应的就是保存按钮.给他定义单击事件可以通过<code>setClick</code>设置.按钮单击后执行的事件是</p>

<div class="highlight"><pre><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">toast</span><span class="o">(</span><span class="s">"save button pressed!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<p><code>View.OnClickListener</code>是一个interface, 在这里直接实例化并且在<code>onClick</code>里面加入代码, 然后这整个interface被当做参数传进入, 当按钮被单击时, 系统会通过<code>click.onClick(v);</code>来调用单击事件(假设这个interface传进去后被变量<code>click</code>储存).</p>

<p>还有第二种写法, 将View.OnClickListener作为变量储存起来</p>

<div class="highlight"><pre><span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="n">onclick</span> <span class="o">=</span> <span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">toast</span><span class="o">(</span><span class="s">"save button pressed!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="n">onclick</span><span class="o">);</span>
</pre></div>

<p>当该Activity有多个单击事件, 但是又不想每次都声明一个interface的时候, 可以使用一个interface传递给所有的按钮. 在interface内部, 可以看到<code>onClick(View v)</code>, 这里的参数<code>v</code>是被点击控件的实例, 也就是说可以根据<code>v</code>来判断用户到底点击了哪个按钮.</p>

<div class="highlight"><pre><span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="n">onclick</span> <span class="o">=</span> <span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">toast</span><span class="o">(</span><span class="s">"save button pressed!"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">toast</span><span class="o">(</span><span class="s">"cancel button pressed!"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="n">onclick</span><span class="o">);</span>
<span class="n">widget</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="n">onclick</span><span class="o">);</span>
</pre></div>

<p>如果还想要让代码量更少一点, 可以直接让Activity去实现接口<code>View.OnClickListener</code>. 反正这个Activity我就想处理一个<code>OnClickListener</code>而已.</p>

<div class="highlight"><pre><span class="c1">//只显示必要代码</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Todo</span> <span class="kd">extends</span> <span class="n">AFActivity</span> <span class="kd">implements</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">){</span>
        <span class="c1">//代码省略</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">)){</span>
            <span class="n">toast</span><span class="o">(</span><span class="s">"save button pressed!"</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">)){</span>
            <span class="n">toast</span><span class="o">(</span><span class="s">"cancel button pressed!"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</li>
<li>
<p>初始化按钮</p>

<p>现在按钮的名字还是<code>Button</code>吧, 我们给他改名字. 使用<code>AndFree</code>封装的控件支持<code>链式表达</code>.可以让针对一个控件的初始化尽量在一行搞定, 当然如果代码过长建议还是分开比较好.</p>

<div class="highlight"><pre><span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Save"</span><span class="o">).</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="n">widget</span><span class="o">.</span><span class="na">cancel</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Cancel"</span><span class="o">).</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</pre></div>
</li>
<li>
<p>窗体跳转</p>

<p>本来这里我想说可以运行看看效果的, 但是貌似到现在为止进入的窗体是<code>AndfreeStartupActivity</code>, 怎么进入<code>Todo</code>呢, 这里就涉及到窗体跳转的问题了.到<code>AndfreeStartupActivity</code>, 首先把他从继承<code>Activity</code>改为<code>AFActivity</code>吧.</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndfreeStartupActivity</span> <span class="kd">extends</span> <span class="n">AFActvity</span> <span class="o">{</span>
<span class="o">}</span>
</pre></div>

<p>然后在<code>setContentView(R.layout.main);</code>下面加上</p>

<div class="highlight"><pre><span class="n">startActivity</span><span class="o">(</span><span class="n">Todo</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</pre></div>

<p>加上之后, 程序会在进入<code>AndfreeStartupActivity</code>后自动跳转到<code>Todo</code>窗体, 当然, 作为可选方案, 可以在<code>AndroidMainfest.xml</code>找到<code>Todo</code>的定义, 在里面加上</p>

<div class="highlight"><pre><span class="nt">&lt;intent-filter&gt;</span>
    <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"android.intent.action.MAIN"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.LAUNCHER"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/intent-filter&gt;</span>
</pre></div>

<p>这样的话程序就会出现在快捷方式里面, 而且是两个(还有AndfreeStartupActivity), 如果不要<code>AndfreeStartupActivity</code>的话, 要将<code>AndfreeStartupActivity</code>的和上面代码一样的地方<code>删除</code>.<br><strong>由于我们仅仅是调试目的, 所以我就不推荐使用这种方式更改了.</strong></p>
</li>
</ol><blockquote>
<p>Run!</p>
</blockquote>

<h4>
<a name="-11" class="anchor" href="#-11"><span class="mini-icon mini-icon-link"></span></a>数据库设计:</h4>

<p>既然我们已经将界面和交互做好了, 那么接下来就要设计todo的数据库了, 然后再把数据存入数据库里面.安卓原生对数据库的编写方式比较原始, 所以<code>AndFree</code>对数据库操作和定义进行了封装, 可以很方便的设计使用数据库.
首先我们定义一下结构:</p>

<ul>
<li><strong>todo_list</strong></li>
<li>
<code>_id</code>, 自动增长的id</li>
<li>
<code>title</code>, todo的名称</li>
<li>
<code>done</code>, 是否已完成</li>
<li>
<code>create</code>, 添加日期</li>
<li>
<code>done_date</code>, 完成的日期</li>
</ul><p>然后我们新建一个包名<code>_andfree</code>, 用来存放对<code>andfree</code>的配置信息.<code>org.chenye.andfreestartup._andfree</code>, 在里面添加一个Class, 名字为<code>dbcore</code>. 让他继承<code>AFCore</code>.根据上面的定义, 可以写出一下代码:</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">dbcore</span> <span class="kd">extends</span> <span class="n">AFCore</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">todo_list</span> <span class="kd">extends</span> <span class="n">AFTable</span><span class="o">{</span>
        <span class="c1">//请一定要有_id字段</span>
        <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">DBField</span> <span class="n">_id</span> <span class="o">=</span> <span class="n">DBField</span><span class="o">.</span><span class="na">primaryInt</span><span class="o">(</span><span class="s">"_id"</span><span class="o">);</span>
        <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">DBField</span> <span class="n">title</span> <span class="o">=</span> <span class="n">DBField</span><span class="o">.</span><span class="na">text</span><span class="o">(</span><span class="s">"title"</span><span class="o">);</span>
        <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">DBField</span> <span class="n">done</span> <span class="o">=</span> <span class="n">DBField</span><span class="o">.</span><span class="na">boolInt</span><span class="o">(</span><span class="s">"done"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">DBField</span> <span class="n">create</span> <span class="o">=</span> <span class="n">DBField</span><span class="o">.</span><span class="na">dateline</span><span class="o">(</span><span class="s">"create"</span><span class="o">);</span>
        <span class="kd">public</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">DBField</span> <span class="n">done_date</span> <span class="o">=</span> <span class="n">DBField</span><span class="o">.</span><span class="na">dateline</span><span class="o">(</span><span class="s">"done_date"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<h4>
<a name="-12" class="anchor" href="#-12"><span class="mini-icon mini-icon-link"></span></a>插入数据:</h4>

<p>这下可以回到<code>Todo</code>里面去修改<code>save</code>的代码了.<br>
将按下save的代码改为</p>

<div class="highlight"><pre><span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">save</span><span class="o">.</span><span class="na">euqalView</span><span class="o">(</span><span class="n">v</span><span class="o">)){</span>
    <span class="n">saveTodo</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>

<p>然后新建一个<code>saveTodo()</code>方法, 将数据传入数据库. 等等, 文本框的内容要怎么获得? 其实和简单</p>

<div class="highlight"><pre><span class="n">String</span> <span class="n">todoString</span> <span class="o">=</span> <span class="n">widget</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
</pre></div>

<p>然后使用<code>AndFree</code>内置的<code>Line</code>类型, 将数据以哈希表的形式储存起来.</p>

<div class="highlight"><pre><span class="c1">//声明变量</span>
<span class="n">Line</span> <span class="n">todo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Line</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</pre></div>

<p>可以看到, 在声明的时候, 将<code>todo</code>和数据库表<code>todo_list</code>关联起来了, 然后添加数据</p>

<div class="highlight"><pre><span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">todoString</span><span class="o">);</span>
<span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">,</span> <span class="n">FuncTime</span><span class="o">.</span><span class="na">time</span><span class="o">());</span>
</pre></div>

<p>这里只添加必要的信息, <code>FuncTime.time()</code>这是<code>AndFree</code>内置的辅助函数, 用于拿到时间的long值.</p>

<p>然后要将数据插入! 只是在<code>AndFree</code>里面, 不用去理到底是插入还是更新, 只要一句save命令就搞定了.那么, 有一个问题, 他是怎么判断什么时候要更新, 什么时候要插入的呢, 这个就需要开发者提供一个要确保<code>唯一</code>的字段, 但这个字段的值在这个表中已经存在, 便更新, 反之则插入. 当不提供任何字段时, 以<code>_id</code>为准, 如果已有<code>_id</code>, 就更新, 反之插入, 当然我们这次没有给他赋值<code>_id</code>, 就铁定是插入. 再举个例, 如果想让<code>title</code>不重复, 可以执行以下:</p>

<div class="highlight"><pre><span class="n">todo</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">);</span>
</pre></div>

<p>当然这个实际意义不太大, 我们只要简单的插入就行了.</p>

<div class="highlight"><pre><span class="n">todo</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</pre></div>

<p>所以, <code>saveTodo()</code>的完整代码如下:</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">saveTodo</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">todoString</span> <span class="o">=</span> <span class="n">widget</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>     
    <span class="n">Line</span> <span class="n">todo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Line</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">,</span> <span class="n">todoString</span><span class="o">);</span>
    <span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">,</span> <span class="n">FuncTime</span><span class="o">.</span><span class="na">time</span><span class="o">());</span>
    <span class="n">todo</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>

<h4>
<a name="-13" class="anchor" href="#-13"><span class="mini-icon mini-icon-link"></span></a>怎么调试?</h4>

<p>至少要有一个方法来查看是否插入成功了是不是啊...<br>
暂时用toast看吧, 将下面的代码加入到<code>todo.save()</code>下面</p>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">result</span><span class="o">();</span>
<span class="n">toast</span><span class="o">(</span><span class="n">todo_list</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</pre></div>

<p>或者简写为:</p>

<div class="highlight"><pre><span class="n">toast</span><span class="o">(</span><span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">result</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
</pre></div>

<p>添加后就可以看到数据库内容以json的格式输出了. 如果出现错误, 可以查看<code>Logcat</code></p>

<h3>
<a name="todo" class="anchor" href="#todo"><span class="mini-icon mini-icon-link"></span></a>显示Todo列表</h3>

<hr><p>终于又回到了<code>AndfreeStartupActivity</code>.记得如果取消他作为默认启动, 记得改回来啊.<br>
在这个窗口里面呢, 要解决的是展示的问题. 和连接到添加Todo的窗体
先去掉自动跳转的代码<code>startActivity(Todo.class);</code></p>

<p>关于控件的定义就不废话了</p>

<div class="highlight"><pre><span class="kd">class</span> <span class="nc">Widget</span> <span class="kd">extends</span> <span class="n">WidgetList</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">AFButton</span> <span class="n">add</span> <span class="o">=</span> <span class="n">btn</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFRlayout</span> <span class="n">list</span> <span class="o">=</span> <span class="n">llayout</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">linearLayout1</span><span class="o">);</span>
<span class="o">};</span><span class="n">Widget</span> <span class="n">widget</span><span class="o">;</span>
</pre></div>

<p>接下来是显示内容, 暂时用<code>TextView</code>来显示吧.
首先从数据库查询数据出来</p>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">result</span><span class="o">();</span>
</pre></div>

<p>这里面就可以遍历出数据(可以在调试中查看他输出json的文本), 接下来就是遍历他, 列出每一行的数据</p>

<div class="highlight"><pre><span class="c1">//在java内, 可以用for..in..来遍历一个数据</span>
<span class="k">for</span> <span class="o">(</span><span class="n">Line</span> <span class="nl">todo:</span> <span class="n">todo_list</span><span class="o">){</span>
    <span class="c1">//...</span>
    <span class="c1">//在for里面可以直接用todo来访问每一条数据</span>
<span class="o">}</span>
</pre></div>

<p>然后我们在for里面添加代码</p>

<div class="highlight"><pre><span class="n">AFText</span> <span class="n">title</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AFText</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</pre></div>

<p>动态声明一个TextView</p>

<div class="highlight"><pre><span class="n">String</span> <span class="n">todo_str</span> <span class="o">=</span> <span class="n">todo</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">);</span>
<span class="n">title</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">todo_str</span><span class="o">);</span>
</pre></div>

<p><code>todo</code>是一个<code>Line</code>类型, <code>todo.str</code>是将他哈希表里面对应键值输出为字符串, 参数支持直接提供数据库字段<code>dbcore.todo_list.title</code>.即上面的代码直接等于<code>todo.str("title")</code>.然后将数据赋值给<code>title</code>的值.</p>

<div class="highlight"><pre><span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
</pre></div>

<p>将<code>title</code>添加进<code>widget.list</code>, <code>widget.list</code>是<code>ScrollView</code>里面的<code>LinearLayout</code>.</p>

<p>所以, 综上, 代码如下:</p>

<div class="highlight"><pre><span class="k">for</span> <span class="o">(</span><span class="n">Line</span> <span class="nl">todo:</span> <span class="n">todo_list</span><span class="o">){</span>
    <span class="n">AFText</span> <span class="n">title</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AFText</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="n">String</span> <span class="n">todo_str</span> <span class="o">=</span> <span class="n">todo</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">);</span>
    <span class="n">title</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">todo_str</span><span class="o">);</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>

<blockquote>
<p>运行后, 就能看到刚才添加的数据了. </p>
</blockquote>

<h3>
<a name="todo-1" class="anchor" href="#todo-1"><span class="mini-icon mini-icon-link"></span></a>自定义TODO的项目</h3>

<hr><blockquote>
<p>刚才为了简单, 先用暂时的AFText来显示文本, 但是我们要的是一个可以勾选的Todo List, 应该怎么做呢? 这时候就可以自定义写一个控件了...</p>
</blockquote>

<p>新建一个包<code>org.chenye.andfreestartup._widget</code>, 添加一个<code>TodoItem</code>, 继承<code>ExpandWidget</code>, 然后完成<code>构造函数</code>和<code>需要实现的函数</code>, 构造函数需要完成两个, 
<code>TodoItem(Context context)</code>, <code>TodoItem(Context context, AttributeSet as)</code>. 完成后可以看到代码如下, </p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TodoItem</span> <span class="kd">extends</span> <span class="n">ExpandWidget</span><span class="o">{</span>
    <span class="kd">public</span> <span class="nf">TodoItem</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
        <span class="c1">// TODO Auto-generated constructor stub</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nf">TodoItem</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">as</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">as</span><span class="o">);</span>
        <span class="c1">// TODO Auto-generated constructor stub</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onInit</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">inXML</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// TODO Auto-generated method stub  </span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<p><code>onInit</code>会在控件初始化的时候访问, 所以这时访问的属性都会是null, 即使已经设定默认值了.<br><strong>下面的代码会触发</strong><code>NullPointerException</code>,</p>

<div class="highlight"><pre><span class="c1">//ERROR!</span>
<span class="kd">public</span> <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"a"</span><span class="o">;</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onInit</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">inXML</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">log</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
<span class="o">}</span>
</pre></div>

<blockquote>
<p>接下来我们想想对于一个TODO的项目, 应该对外支持什么接口</p>

<ul>
<li>定义TODO的内容</li>
<li>定义是否已完成</li>
<li>传入id, 以便点击后将他列为<code>已完成</code>
</li>
</ul>
</blockquote>

<p>然后, 设计了以下接口</p>

<ul>
<li><code>setDone(Boolean done)</code></li>
<li><code>setContent(String content)</code></li>
<li><code>setId(int _id)</code></li>
</ul><h4>
<a name="item" class="anchor" href="#item"><span class="mini-icon mini-icon-link"></span></a>接下来开始设计item的界面:</h4>

<p>新建一个<code>item_todo.xml</code>, 根控件使用<code>RelativeLayout</code>, 拖动一个<code>CheckBox</code>左居中, 一个<code>TextView</code>对齐<code>CheckBox</code>, <code>TextView</code>宽度右对齐屏幕右侧.将<code>CheckBox</code>的内容设置为空.代码如下:</p>

<div class="highlight"><pre><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;RelativeLayout</span>
    <span class="na">xmlns:android=</span><span class="s">"http://schemas.android.com/apk/res/android"</span>
    <span class="na">android:orientation=</span><span class="s">"vertical"</span>
    <span class="na">android:layout_width=</span><span class="s">"match_parent"</span>
    <span class="na">android:layout_height=</span><span class="s">"match_parent"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;CheckBox</span> <span class="na">android:layout_width=</span><span class="s">"wrap_content"</span>
        <span class="na">android:id=</span><span class="s">"@+id/checkBox1"</span>
        <span class="na">android:text=</span><span class="s">""</span>
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span>
        <span class="na">android:layout_centerVertical=</span><span class="s">"true"</span>
        <span class="na">android:layout_alignParentLeft=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/CheckBox&gt;</span>
    <span class="nt">&lt;TextView</span> <span class="na">android:layout_width=</span><span class="s">"wrap_content"</span>
        <span class="na">android:id=</span><span class="s">"@+id/textView1"</span>
        <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span>
        <span class="na">android:text=</span><span class="s">"TextView"</span>
        <span class="na">android:layout_centerVertical=</span><span class="s">"true"</span>
        <span class="na">android:layout_toRightOf=</span><span class="s">"@+id/checkBox1"</span>
        <span class="na">android:layout_alignParentRight=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/TextView&gt;</span>
<span class="nt">&lt;/RelativeLayout&gt;</span>
</pre></div>

<h4>
<a name="todoitemxml" class="anchor" href="#todoitemxml"><span class="mini-icon mini-icon-link"></span></a>绑定<code>TodoItem</code>的XML和控件</h4>

<p>在控件里面绑定XML和在Activity里面不太一样, 可以通过类似控件定义的方式.</p>

<div class="highlight"><pre><span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onInit</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">inXML</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">widget</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Widget</span><span class="o">();</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">initAll</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">widget</span><span class="o">.</span><span class="na">layout</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Widget</span> <span class="kd">extends</span> <span class="n">WidgetList</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">AFRlayout</span> <span class="n">layout</span> <span class="o">=</span> <span class="n">rlayout</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">item_todo</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFText</span> <span class="n">content</span> <span class="o">=</span> <span class="n">txt</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFCheck</span> <span class="n">check</span> <span class="o">=</span> <span class="n">check</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">checkBox1</span><span class="o">);</span>
<span class="o">};</span> <span class="n">Widget</span> <span class="n">widget</span><span class="o">;</span>
</pre></div>

<p>当需要引入xml的时候, 就直接把他传入<code>widget.initAll</code>的第二个参数就行了.他会作为layout进行解析, 得到的控件类型就是xml的跟类型.</p>

<h4>
<a name="-14" class="anchor" href="#-14"><span class="mini-icon mini-icon-link"></span></a>实现接口</h4>

<p>接下来就可以定义接口了</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDone</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">done</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">check</span><span class="o">.</span><span class="na">setCheck</span><span class="o">(</span><span class="n">done</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setContent</span><span class="o">(</span><span class="n">String</span> <span class="n">content</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">content</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">int</span> <span class="n">_id</span><span class="o">;</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="kt">int</span> <span class="n">id</span><span class="o">){</span>
    <span class="n">_id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>

<p>然后我们定义用户点击check后的事件处理</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TodoItem</span> <span class="kd">extends</span> <span class="n">ExpandWidget</span> <span class="kd">implements</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span> <span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onInit</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">inXML</span><span class="o">){</span>
        <span class="c1">//...</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">check</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">check</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">)){</span>
            <span class="kt">boolean</span> <span class="n">checked</span> <span class="o">=</span> <span class="n">widget</span><span class="o">.</span><span class="na">check</span><span class="o">.</span><span class="na">isChecked</span><span class="o">();</span>
            <span class="n">Line</span> <span class="n">update</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Line</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
            <span class="n">update</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">_id</span><span class="o">,</span> <span class="n">_id</span><span class="o">);</span>
            <span class="n">update</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">,</span> <span class="n">checked</span><span class="o">);</span>
            <span class="n">update</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<blockquote>
<p>嗯, 到这里, 一个自定义控件已经完成了, 再看看在<code>AndfreeStartupActivity</code>要怎么用吧</p>
</blockquote>

<h3>
<a name="-15" class="anchor" href="#-15"><span class="mini-icon mini-icon-link"></span></a>使用自定义控件</h3>

<hr><p>回到<code>AndfreeStartupActivity</code>, 这时候只需要修改for里面的内容了. 直接换成</p>

<div class="highlight"><pre><span class="n">TodoItem</span> <span class="n">ti</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TodoItem</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="n">ti</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">));</span>
<span class="n">ti</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">_id</span><span class="o">());</span>
<span class="n">ti</span><span class="o">.</span><span class="na">setDone</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">bool</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">));</span>
<span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">ti</span><span class="o">);</span>
</pre></div>

<p>这段代码只完成了3件事:</p>

<ol>
<li>声明控件, 申请内存</li>
<li>初始化, 给他传递内容</li>
<li>把他添加进父级的视图里面</li>
</ol><blockquote>
<p>到这里, 已经可以正常运行了. 验证是否成功的方法是, 给一个item打钩, 然后退出程序, 在打开, 看看是否保持打钩状态.</p>
</blockquote>

<h3>
<a name="-16" class="anchor" href="#-16"><span class="mini-icon mini-icon-link"></span></a>测试</h3>

<hr><p>多添加几个数据, 进行测试. 添加到11个todo吧. 什么? 添加按钮按了没反应? </p>

<h3>
<a name="-17" class="anchor" href="#-17"><span class="mini-icon mini-icon-link"></span></a>窗体跳转</h3>

<hr><p>给按钮添加事件相信已经明白了, 这里就不废话了</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndfreeStartupActivity</span> <span class="kd">extends</span> <span class="n">AFActivity</span> <span class="kd">implements</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//...</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">add</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">startActivity</span><span class="o">(</span><span class="n">Todo</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<h3>
<a name="2" class="anchor" href="#2"><span class="mini-icon mini-icon-link"></span></a>测试2</h3>

<hr><p>看看刚才测试1的内容吧😭</p>

<h3>
<a name="todo-2" class="anchor" href="#todo-2"><span class="mini-icon mini-icon-link"></span></a>完善添加TODO</h3>

<hr><blockquote>
<p>可能你也发现了, 当内容为空时, 也可以添加, 而且添加后也不会返回. 这时候我们就要开始完善它</p>
</blockquote>

<div class="highlight"><pre><span class="c1">//在saveTodo()第一行加入</span>
<span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">isTextEmpty</span><span class="o">())</span> <span class="o">{</span>
    <span class="n">toast</span><span class="o">(</span><span class="s">"please enter the details!"</span><span class="o">);</span>
    <span class="k">return</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>

<p>然后把调试用的toast给删了吧, 换成</p>

<div class="highlight"><pre><span class="n">finish</span><span class="o">();</span>
</pre></div>

<p>另外, <code>cancel</code>按钮按了也没用, 我们就给他加入finish的功能, 替换掉原来的代码</p>

<div class="highlight"><pre><span class="c1">//old toast("cancel button pressed!");</span>
<span class="n">finish</span><span class="o">();</span>
</pre></div>

<p>加入这里算搞定了.</p>

<h3>
<a name="-18" class="anchor" href="#-18"><span class="mini-icon mini-icon-link"></span></a>内容自动刷新</h3>

<hr><blockquote>
<p>添加回来之后会发现内容不会自动刷新. 因为我们还没有添加Activity Result.</p>

<h4>
<a name="activity-result" class="anchor" href="#activity-result"><span class="mini-icon mini-icon-link"></span></a>什么是Activity Result</h4>

<p>简单来说就是跳转到Activity的时候, 给他一个id号, 新Activity退出的时候, 会返回给原Activity刚刚提供的id和他想返回的数据(可选的)</p>

<h4>
<a name="-19" class="anchor" href="#-19"><span class="mini-icon mini-icon-link"></span></a>自动刷新的思路</h4>

<p>我们可以在添加成功后, 返回新添加成功的TODO item, 然后回到原Activity之后, 将这条数据转成View, 添加到第一行.</p>
</blockquote>

<h4>
<a name="-20" class="anchor" href="#-20"><span class="mini-icon mini-icon-link"></span></a>保存后返回数据内容</h4>

<p>回到<code>saveTodo</code>, 在执行<code>todo.save()</code>之后, 可以把todo返回回去, 将<code>finish();</code>换为如下代码</p>

<div class="highlight"><pre><span class="n">setResult</span><span class="o">(</span><span class="n">todo</span><span class="o">).</span><span class="na">finish</span><span class="o">();</span>
</pre></div>

<h3>
<a name="todo-3" class="anchor" href="#todo-3"><span class="mini-icon mini-icon-link"></span></a>跳转到<code>Todo</code>
</h3>

<hr><p>原来的<code>startActivity</code>默认是不获取result的. 当操作只有一个的时候可以这样定义一个回调函数, 换掉原来的<code>startActivity</code></p>

<div class="highlight"><pre><span class="n">startActivityForResult</span><span class="o">(</span><span class="n">Todo</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">onActivityResult</span><span class="o">(){</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">callback</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">result_ok</span><span class="o">,</span> <span class="n">Line</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span> <span class="o">!</span> <span class="n">result_ok</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="n">TodoItem</span> <span class="n">ti</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TodoItem</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">));</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">_id</span><span class="o">());</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setDone</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">bool</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">));</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addTopView</span><span class="o">(</span><span class="n">ti</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">});</span>
</pre></div>

<blockquote>
<p>这样弄好了, 是刷新了, 可是怎么只能看见一个的? 原因是<code>widget.list</code>默认是横向排列的, 我们要改变为纵向</p>
</blockquote>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//...</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">add</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">setVertical</span><span class="o">();</span> <span class="c1">// new</span>
    <span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">result</span><span class="o">();</span>
    <span class="c1">//...</span>
<span class="o">}</span>
</pre></div>

<h3>
<a name="todo-4" class="anchor" href="#todo-4"><span class="mini-icon mini-icon-link"></span></a>Todo排序</h3>

<hr><blockquote>
<p>你也应该发现了, Todo变得混乱不堪, 当我们第一次进来的时候, 是希望先看到未完成的是吧? 剩下的再按日期排列.再往回看数据库查询的时候, 可以发现数据库查询语句是想当简洁的.</p>
</blockquote>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">result</span><span class="o">();</span>
</pre></div>

<blockquote>
<p>嗯, 接下来, 就要介绍怎样通过<code>AndFree</code>使用比较常用的数据库语句.<br>
按照上面的想法, 我们需要实现</p>
</blockquote>

<div class="highlight"><pre><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">todo_list</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="o">`</span><span class="n">done</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="k">create</span><span class="o">`</span> <span class="k">DESC</span>
</pre></div>

<blockquote>
<p>等价的语句如下</p>
</blockquote>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">order</span><span class="o">(</span>
    <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">.</span><span class="na">ASC</span><span class="o">(),</span>
    <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">.</span><span class="na">DESC</span><span class="o">()</span>
<span class="o">).</span><span class="na">result</span><span class="o">();</span>
</pre></div>

<h3>
<a name="-21" class="anchor" href="#-21"><span class="mini-icon mini-icon-link"></span></a>分页</h3>

<hr><blockquote>
<p>当todo的数量特别多的时候, 在进入Activity的一刹那, 会有卡顿的感觉, 当卡顿超过3秒, 就直接面临卡死...所以, 必要的时候, 我们需要给todo做一个分页</p>
</blockquote>

<p>首先要修改一下sql, </p>

<div class="highlight"><pre><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">todo_list</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="o">`</span><span class="n">done</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="k">create</span><span class="o">`</span> <span class="k">DESC</span> <span class="k">LIMIT</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">10</span>
</pre></div>

<p>对应的代码是</p>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">order</span><span class="o">(</span>
    <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">.</span><span class="na">ASC</span><span class="o">(),</span>
    <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">.</span><span class="na">DESC</span><span class="o">()</span>
<span class="o">).</span><span class="na">limit</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">).</span><span class="na">result</span><span class="o">();</span>
</pre></div>

<p>但是仅仅这样还不够, 还需要检测总数量, 未读取数据的数量大于10个时一直显示加载更多, 反之不显示.</p>

<p>接下来我们就不得不把资料查询封装成一个函数了, </p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">showTodoList</span><span class="o">(</span><span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">){</span>
    <span class="n">Line</span> <span class="n">todo_list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">order</span><span class="o">(</span>
        <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">.</span><span class="na">ASC</span><span class="o">(),</span>
        <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">.</span><span class="na">DESC</span><span class="o">()</span>
    <span class="o">).</span><span class="na">limit</span><span class="o">(</span><span class="n">start</span><span class="o">,</span> <span class="n">limit</span><span class="o">).</span><span class="na">result</span><span class="o">();</span>
    <span class="k">for</span><span class="o">(</span><span class="n">Line</span> <span class="nl">todo:</span> <span class="n">todo_list</span><span class="o">){</span>
        <span class="n">TodoItem</span> <span class="n">ti</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TodoItem</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">));</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">_id</span><span class="o">());</span>
        <span class="n">ti</span><span class="o">.</span><span class="na">setDone</span><span class="o">(</span><span class="n">todo</span><span class="o">.</span><span class="na">bool</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">done</span><span class="o">));</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">ti</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<p>因为我们会多一个<code>加载更多的按钮</code>, 但是这个按钮是动态生成的, 所以可以按照<code>不提供Id</code>定义在<code>Widget</code>里面,</p>

<div class="highlight"><pre><span class="kd">class</span> <span class="nc">Widget</span> <span class="kd">extends</span> <span class="n">WidgetList</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">AFButton</span> <span class="n">add</span> <span class="o">=</span> <span class="n">btn</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFRlayout</span> <span class="n">list</span> <span class="o">=</span> <span class="n">llayout</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">linearLayout1</span><span class="o">);</span>
    <span class="kd">public</span> <span class="n">AFButton</span> <span class="n">more</span> <span class="o">=</span> <span class="n">btn</span><span class="o">();</span> <span class="c1">// new</span>
<span class="o">};</span><span class="n">Widget</span> <span class="n">widget</span><span class="o">;</span>
</pre></div>

<p>然后再完成一个函数来完成自动计算下一页并且调用<code>showTodoList</code></p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">autoNextPage</span><span class="o">(){</span>
    <span class="kt">int</span> <span class="n">limit</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">();</span>
    <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">removeView</span><span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">more</span><span class="o">);</span>
    <span class="n">showTodoList</span><span class="o">(</span><span class="n">start</span><span class="o">,</span> <span class="n">limit</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">count</span><span class="o">();</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">&gt;</span> <span class="n">start</span> <span class="o">+</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">more</span><span class="o">.</span><span class="na">newInstance</span><span class="o">().</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">setText</span><span class="o">(</span><span class="s">"加载更多"</span><span class="o">);</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">list</span><span class="o">.</span><span class="na">addBottomView</span><span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">more</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<p>可以看到<code>widget.more</code>使用了<code>setClick(this)</code>, 所以要对<code>onClick</code>进行判断</p>

<div class="highlight"><pre><span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">add</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">)){</span>
    <span class="c1">//...</span>
    <span class="k">return</span><span class="o">;</span>
<span class="o">}</span>
<span class="k">if</span> <span class="o">(</span><span class="n">widget</span><span class="o">.</span><span class="na">more</span><span class="o">.</span><span class="na">equalView</span><span class="o">(</span><span class="n">v</span><span class="o">))</span> <span class="o">{</span>
    <span class="n">autoNextPage</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>

<p>然后在onCreate最后去掉原来的查询代码, 换成<code>autoNextPage();</code></p>

<blockquote>
<p>这下可以多添加几个Todo, 用来测试下一页是否正常了...或者暂时降低limit的值</p>
</blockquote>

<h3>
<a name="-22" class="anchor" href="#-22"><span class="mini-icon mini-icon-link"></span></a>弹出菜单</h3>

<hr><blockquote>
<p>目前还差两个功能, 编辑和删除, 但是界面上我们已经没有空间了, 按照安卓的设计方法, 一般是可以通过长按Item弹出菜单来操作. 这一章就是要讲这一点.</p>
</blockquote>

<p>接下来的修改将都在<code>TodoItem</code>进行,
弹出菜单的代码如下</p>

<div class="highlight"><pre><span class="n">HelperDialog</span> <span class="n">hd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HelperDialog</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>
<span class="n">hd</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Edit"</span><span class="o">,</span> <span class="n">Line</span><span class="o">.</span><span class="na">Put</span><span class="o">(</span><span class="s">"index"</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
<span class="n">hd</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Delete"</span><span class="o">,</span> <span class="n">Line</span><span class="o">.</span><span class="na">Put</span><span class="o">(</span><span class="s">"index"</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
<span class="n">hd</span><span class="o">.</span><span class="na">setLineClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="n">hd</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</pre></div>

<p>这段代码的意思是, 声明一个Dialog, 给他添加项目, 每个项目带有一个<code>标签名</code>和<code>Line信息</code>, 最后统一注册一个OnLineClick, 当用户点击某个Item的时候, 可以在<code>onClick(Line data)</code>中的<code>data</code>拿到对应的Line. 所以, 当类<code>implements</code>了<code>OnLineClick</code>之后, 可以实现以下方法:</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">Line</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">integer</span><span class="o">(</span><span class="s">"index"</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">toast</span><span class="o">(</span><span class="s">"edit"</span> <span class="o">+</span> <span class="n">widget</span><span class="o">.</span><span class="na">content</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
        <span class="k">return</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">toast</span><span class="o">(</span><span class="s">"delete"</span> <span class="o">+</span> <span class="n">widget</span><span class="o">.</span><span class="na">content</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
        <span class="k">return</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<p>然后这个<code>弹出菜单</code>需要在Item长按的时候触发, 所以我们还要注册<code>widget.layout</code>的长按事件.</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TodoItem</span> <span class="kd">extends</span> <span class="n">ExpandWidget</span> <span class="kd">implements</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">,</span> <span class="n">View</span><span class="o">.</span><span class="na">OnLongClickListener</span><span class="o">,</span> <span class="n">OnClickLine</span> <span class="o">{</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onInit</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">inXML</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//xxx</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">check</span><span class="o">.</span><span class="na">setClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
        <span class="n">widget</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">setOnLongClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span> <span class="c1">// new</span>
    <span class="o">}</span>

    <span class="kt">int</span> <span class="n">EDIT</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">DELETE</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onLongClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">HelperDialog</span> <span class="n">hd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HelperDialog</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>
        <span class="n">hd</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Edit"</span><span class="o">,</span> <span class="n">Line</span><span class="o">.</span><span class="na">Put</span><span class="o">(</span><span class="s">"index"</span><span class="o">,</span> <span class="n">EDIT</span><span class="o">));</span>
        <span class="n">hd</span><span class="o">.</span><span class="na">addItem</span><span class="o">(</span><span class="s">"Delete"</span><span class="o">,</span> <span class="n">Line</span><span class="o">.</span><span class="na">Put</span><span class="o">(</span><span class="s">"index"</span><span class="o">,</span> <span class="n">DELETE</span><span class="o">));</span>
        <span class="n">hd</span><span class="o">.</span><span class="na">setLineClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
        <span class="n">hd</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>

<blockquote>
<p>为了确保代码清晰, 将index换成了变量, 同时把<code>onClick(Line data)</code>也改了吧</p>
</blockquote>

<h3>
<a name="todo-5" class="anchor" href="#todo-5"><span class="mini-icon mini-icon-link"></span></a>修改TODO</h3>

<hr><blockquote>
<p>这次我们将提供一个修改TODO内容的选项, 为了贪图方便, 就不重新建立一个Activity了, 完全可以复用<code>Todo.java</code>, 当然, 这需要做一些改动.本篇将讲解这个过程.</p>
</blockquote>

<p>思路大致如下:</p>

<ul>
<li>
<code>AndfreeStartupActivity</code>: 跳转到<code>Todo.java</code>, 并且发送当前todo item的id, 等待修改完后, 再更新这个item的值</li>
<li>
<code>Todo</code>: 检测跳转到该窗口时有没有传递id, 没有的话就是添加操作, 有的话就是修改.当保存时, 如果是修改的操作, 要返回修改成功的信息回去, 通知原Activity更新值.</li>
</ul><p>问题:</p>

<blockquote>
<p>我们对菜单的修改只停留在<code>TodoItem</code>, 不是在<code>AndfreeStartupActivity</code>, 所以不能调用<code>startActivityForResult</code>这个命令, 该怎么办?</p>
</blockquote>

<p>答案有几个, 我只说我认为还不错的. 将<code>Edit</code>执行的内容换为外界决定.也就是说对于<code>TodoItem</code>, 我们还需要设计一个接口用于定义<code>Edit</code>事件, 同时定义我们自己的interface!</p>

<ul>
<li>setOnEditClick()</li>
</ul><div class="highlight"><pre><span class="n">OnClickListener</span> <span class="n">_edit_click</span><span class="o">;</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOnEditClick</span><span class="o">(</span><span class="n">OnClickListener</span> <span class="n">click</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">_edit_click</span> <span class="o">=</span> <span class="n">click</span><span class="o">;</span>
<span class="o">}</span>
<span class="n">publuc</span> <span class="kd">interface</span> <span class="nc">OnClickListener</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">TodoItem</span> <span class="n">ti</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>

<p>这时候, 当执行<code>setOnEditClick</code>后, <code>_edit_click</code>将是对应的操作, 然后再修改刚才的<code>编辑</code>按钮执行的代码</p>

<div class="highlight"><pre><span class="c1">// old: toast("edit" + widget.content.getText());</span>
<span class="k">if</span> <span class="o">(</span><span class="n">_edit_click</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">_edit_click</span><span class="o">.</span><span class="na">onClick</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>

<p>回到<code>AndfreeStartupActivity</code>, 让他继承<code>TodoItem.OnClickListener</code>, 然后实现下面的方法:</p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">TodoItem</span> <span class="n">ti</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">startActivityForResult</span><span class="o">(</span><span class="n">Todo</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">Line</span><span class="o">.</span><span class="na">PutId</span><span class="o">(</span><span class="n">ti</span><span class="o">.</span><span class="na">getId</span><span class="o">()),</span> <span class="k">new</span> <span class="n">onActivityResult</span><span class="o">(){</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">callback</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">result_ok</span><span class="o">,</span> <span class="n">Line</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span> <span class="o">!</span> <span class="n">result_ok</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
            <span class="n">ti</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">));</span>
        <span class="o">}</span>
    <span class="o">});</span>
<span class="o">}</span>
</pre></div>

<p>这段代码可能需要解释下:</p>

<ul>
<li>
<p><code>startActivityForResult</code>, 这个应该都认识, 因为这次需要传递被按下<code>TodoItem</code>的id, 因此<code>ti.getId</code>这句可能会错误, 因为我们还没有实现它</p>

<div class="highlight"><pre><span class="c1">// in TodoItem.java</span>
<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getId</span><span class="o">(){</span>
    <span class="k">return</span> <span class="n">_id</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>

<p>实现后, <code>Line.PutId(ti.getId())</code> 等价于 <code>{'_id': ti.getId()}</code>.这部分其实是传送给<code>Todo</code>的值, 而第三个参数是得到Result后的回调函数</p>
</li>
<li>
<p>除了这个错误, 还会有<code>ti.setContent(...)</code>这句是红的, 因为<code>ti</code>这个变量本来不属于这个<code>onActivityResult</code>作用域的, 而是他<code>父作用域</code>的, 他要访问到的前提是, 这个变量要加上<code>final</code>关键字, 所以我们还要修改函数的第一行为: </p>

<div class="highlight"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="kd">final</span> <span class="n">TodoItem</span> <span class="n">ti</span><span class="o">)</span> <span class="o">{</span>
</pre></div>
</li>
</ul><h4>
<a name="todo-6" class="anchor" href="#todo-6"><span class="mini-icon mini-icon-link"></span></a>Todo的修改:</h4>

<blockquote>
<p><code>Todo</code>需要能检测是否有信息传递过来, 并且即便没信息传递过来, 也要能不产生<code>Exception</code>, 这个就是既能当<code>添加</code>, 又能当<code>修改</code>的关键.</p>
</blockquote>

<div class="highlight"><pre><span class="n">Line</span> <span class="n">_todo</span><span class="o">;</span>
<span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onLine</span><span class="o">(</span><span class="n">Line</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">_todo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">getByPrimaryKey</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">_id</span><span class="o">());</span>
<span class="o">}</span>
</pre></div>

<p><code>onLine</code>会自动判断是否有数据传过来, 当没有时, onLine是不会执行的.此时_todo就是为<code>null</code>.</p>

<p>然后在<code>onCreate</code>最后面加上初始化的代码</p>

<div class="highlight"><pre><span class="k">if</span> <span class="o">(</span><span class="n">_todo</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
<span class="n">widget</span><span class="o">.</span><span class="na">title</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">_todo</span><span class="o">.</span><span class="na">str</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">title</span><span class="o">));</span>
</pre></div>

<blockquote>
<p>保存的那部分也要修改</p>
</blockquote>

<div class="highlight"><pre><span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">create</span><span class="o">,</span> <span class="n">FuncTime</span><span class="o">.</span><span class="na">time</span><span class="o">());</span>
<span class="c1">// new</span>
<span class="k">if</span> <span class="o">(</span><span class="n">_todo</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">todo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">.</span><span class="na">_id</span><span class="o">,</span> <span class="n">_todo</span><span class="o">.</span><span class="na">_id</span><span class="o">());</span>
<span class="o">}</span>
<span class="n">todo</span><span class="o">.</span><span class="na">save</span><span class="o">();</span>
</pre></div>

<blockquote>
<p>又搞定了, 最后还剩一个删除功能...</p>
</blockquote>

<h3>
<a name="todo-7" class="anchor" href="#todo-7"><span class="mini-icon mini-icon-link"></span></a>删除Todo</h3>

<hr><p>这个在<code>TodoItem</code>便可完成, 
将</p>

<div class="highlight"><pre><span class="n">toast</span><span class="o">(</span><span class="s">"delete"</span> <span class="o">+</span> <span class="n">widget</span><span class="o">.</span><span class="na">content</span><span class="o">.</span><span class="na">getText</span><span class="o">());</span>
</pre></div>

<p>换成</p>

<div class="highlight"><pre><span class="n">HelperDialog</span><span class="o">.</span><span class="na">Alert</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="s">"确定要删除"</span><span class="o">,</span> <span class="k">new</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">which</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">new</span> <span class="n">dbcore</span><span class="o">.</span><span class="na">todo_list</span><span class="o">().</span><span class="na">delete</span><span class="o">(</span><span class="n">_id</span><span class="o">);</span>
        <span class="n">removeSelfFromParent</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">});</span>
</pre></div>

<blockquote>
<p>完</p>
</blockquote>]]></content:encoded>
		</item>
		
		<item>
		<title>装饰器和功能性python</title>	
		<pubDate>2013-01-11 14:33:22 +0000 UTC</pubDate>
		<link>http://chenye.org/decorators-and-functional-python.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>原文: <a href="http://www.brianholdefehr.com/decorators-and-functional-python">http://www.brianholdefehr.com/decorators-and-functional-python</a></p>

<p>装饰器是python的一大特色. 除了他在语言中非常实用之外, 还能够帮助我们通过一个有趣的方式来思考 -- 功能性<br>
我会从头开始解释装饰器是怎么工作的. 我们会从一些你理解装饰器所必须的话题开始. 然后, 我们再去深入得探究几个简单的装饰器的工作原理. 最后, 我们会讨论一些装饰器的高级用法, 比如传入可选性的参数, 同时使用多个装饰器等等.</p>

<p>首先, 让我们用我能想到的最简单的方法来定义Python的函数. 根据这个定义, 我们可以用简单类似的方法来定义装饰器.</p>

<pre><code>A function is a block of reusable code that performs a specific task.
</code></pre>

<p>不错, 然后什么又是装饰器呢?</p>

<pre><code>A decorator is a function that modifies other functions.
</code></pre>

<p>现在让我们开始扩充装饰器的定义, 以一段必要的解释作为开头.</p>

<h3>
<a name="first-class-objects" class="anchor" href="#first-class-objects"><span class="mini-icon mini-icon-link"></span></a>函数是第一级对象(first class objects)</h3>

<p>在python中, 一切皆为对象. 这就意味着函数可以被变量指向, 可以像其他对象一样传递. 比如:</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">traveling_function</span><span class="p">():</span>
    <span class="k">print</span> <span class="s">"Here I am!"</span>

<span class="n">function_dict</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"func"</span><span class="p">:</span> <span class="n">traveling_function</span>
<span class="p">}</span>

<span class="n">trav_func</span> <span class="o">=</span> <span class="n">function_dict</span><span class="p">[</span><span class="s">'func'</span><span class="p">]</span>
<span class="n">trav_func</span><span class="p">()</span>
<span class="c"># &gt;&gt; Here I am!</span>
</pre></div>

<p><code>function_dict</code> 的 <code>func</code> 值指向了<code>traveling_function</code>, 并且<code>traveling_function</code> 还可以像通常那样被调用</p>

<h3>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>第一级函数可以被上级函数访问</h3>

<p>我们完全可以像传递其他对象一样传递函数. 我们可以把他们当做dict的值去传递, 或者把他们放到list里面, 或者指派他们为对象的属性. 所以难道我们还不能把他们当做另一个函数的参数传递过去吗? 当然可以! 一个函数可以通过参数的方式接收其他函数, 也可以返回另一个参数给调用他的上级函数.</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">self_absorbed_function</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">"I'm an amazing function!"</span>


<span class="k">def</span> <span class="nf">printer</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
    <span class="k">print</span> <span class="s">"The function passed to me says: "</span> <span class="o">+</span> <span class="n">func</span><span class="p">()</span>

<span class="c"># Call `printer` and give it `self_absorbed_function` as an argument</span>
<span class="n">printer</span><span class="p">(</span><span class="n">self_absorbed_function</span><span class="p">)</span>
<span class="c"># &gt;&gt; The function passed to me says: I'm an amazing function!</span>
</pre></div>

<p>正如上面你所看到的, 一个函数可以当做参数传递给其他函数, 并且函数还可以调用这个传递进来的函数. 这就意味着我们可以创建一些有趣的函数, 比如装饰器!</p>

<h3>
<a name="-1" class="anchor" href="#-1"><span class="mini-icon mini-icon-link"></span></a>装饰器的基础</h3>

<p>我认为, 一个装饰器只是一个函数, 只不过他可以从参数拿到另一个函数. 在很多情况下, 他们返回一个经过修改并且被藏在内部的函数. 让我们找一找最简单的但又能帮助我们理解他全部工作原理的装饰器 - 身份装饰器</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">identity_decorator</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">wrapper</span><span class="p">():</span>
        <span class="n">func</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">wrapper</span>

<span class="k">def</span> <span class="nf">a_function</span><span class="p">():</span>
    <span class="k">print</span> <span class="s">"I'm a normal function."</span>

<span class="c"># `decorated_function` is the function that `identity_decorator` returns, which</span>
<span class="c"># is the nested function, `wrapper`</span>
<span class="n">decorated_function</span> <span class="o">=</span> <span class="n">identity_decorator</span><span class="p">(</span><span class="n">a_function</span><span class="p">)</span>

<span class="c"># This calls the function that `identity_decorator` returned</span>
<span class="n">decorated_function</span><span class="p">()</span>
<span class="c"># &gt;&gt; I'm a normal function</span>
</pre></div>

<p>这里, 总的来说<code>identity_decorator</code>并没有修改他内置的函数. 他只是简单的返回一个函数(<code>wrapper</code>), 当他被调用的时候, 会调用<code>identity_decorator</code>最开始接收到的的函数(译者注: <code>a_function</code>). 呵呵, 其实这个装饰器一点用处都没有.</p>

<p>有个有趣的地方, 看看<code>identity_decorator</code>, <code>wrapper</code>并没有被传递任何参数, 但是竟然还能够访问到<code>func</code>. 这个嘛, 要归功于闭包.</p>

<h3>
<a name="-2" class="anchor" href="#-2"><span class="mini-icon mini-icon-link"></span></a>闭包</h3>

<pre><code>Closure is a fancy term meaning that when a function is declared, it maintains a reference to the lexical environment in which it was declared.
</code></pre>

<p>在上个例子中, 当<code>wrapper</code>被定义后, 他可以在他的作用域内访问变量<code>func</code>. 这意味着在整个<code>wrapper</code>的生命周期(被返回并且指向了变量<code>decorated_function</code>之后)内, 他可以访问到变量<code>func</code>. 一旦<code>identity_decorator</code>返回了, 要访问<code>func</code>的方式只能通过<code>decorated_function</code>. <code>func</code> 只是以变量的形式存在于<code>decorated_function</code>的闭包环境.</p>

<h3>
<a name="-3" class="anchor" href="#-3"><span class="mini-icon mini-icon-link"></span></a>一个简单的装饰器</h3>

<p>接下来让我们写一个稍微有点用处的装饰器吧. 整个装饰器的用处是记录这个被修改的函数被访问的次数.</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">logging_decorator</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">wrapper</span><span class="p">():</span>
        <span class="n">wrapper</span><span class="o">.</span><span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">print</span> <span class="s">"The function I modify has been called {0} times(s)."</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
              <span class="n">wrapper</span><span class="o">.</span><span class="n">count</span><span class="p">)</span>
        <span class="n">func</span><span class="p">()</span>
    <span class="n">wrapper</span><span class="o">.</span><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">return</span> <span class="n">wrapper</span>

<span class="k">def</span> <span class="nf">a_function</span><span class="p">():</span>
    <span class="k">print</span> <span class="s">"I'm a normal function."</span>

<span class="n">modified_function</span> <span class="o">=</span> <span class="n">logging_decorator</span><span class="p">(</span><span class="n">a_function</span><span class="p">)</span>

<span class="n">modified_function</span><span class="p">()</span>
<span class="c"># &gt;&gt; The function I modify has been called 1 time(s).</span>
<span class="c"># &gt;&gt; I'm a normal function.</span>

<span class="n">modified_function</span><span class="p">()</span>
<span class="c"># &gt;&gt; The function I modify has been called 2 time(s).</span>
<span class="c"># &gt;&gt; I'm a normal function.</span>
</pre></div>

<p>我们通常说一个装饰器修改了一个函数, 这个有利于我们顺着装饰器的思路去思考. 但是正如我们的例子你所看到的, <code>logging_decorator</code> 只是返回一个新的函数, 这个函数和 <code>a_function</code>很相近, 只不过加上了日志的功能.</p>

<p>在这里例子中, <code>logging_decorator</code> 不仅仅是接收一个函数参数, 他还返回一个函数, <code>wrapper</code>. 当<code>logging_decorator</code>每次被调用的时候, 它会递增<code>wrapper.count</code>, 并且打印出来, 实际上调用<code>logging_decorator</code>实际上是包装过的.</p>

<p>你应该有个疑问, 为什么我们的计数器是<code>wrapper</code>的属性, 而不是一个常规的变量? 不能在<code>wrapper</code>提供的闭包环境直接声明变量吗? 是的, 但是有一个问题. 在Python里, 一个闭包提供在函数的作用域内所有变量的读权限, 对于写权限, 只有可变对象(mutable objects)例如list, dict, 等等才有. 一个整型在python里面算是不可变对象(immutable objects), 所以我们不能在<code>wrapper</code>里面递增他的值. 作为解决方案, 我们把计数器当做是<code>wrapper</code>的一个属性, 一个可变对象, 所以后来我们可以随意的增加他的值了.</p>

<h3>
<a name="-4" class="anchor" href="#-4"><span class="mini-icon mini-icon-link"></span></a>装饰器的语法</h3>

<p>在上一个例子中, 我们可以知道一个装饰器可以使用传递给他的函数参数, 经过'包装'之后, 函数变为了装饰器函数. 然而, Python还提供一个语法特性, 让装饰器更加的直观和易读.</p>

<div class="highlight"><pre><span class="c"># In the previous example, we used our decorator function by passing the</span>
<span class="c"># function we wanted to modify to it, and assigning the result to a variable</span>

<span class="k">def</span> <span class="nf">some_function</span><span class="p">():</span>
    <span class="k">print</span> <span class="s">"I'm happiest when decorated."</span>
</pre></div>

<div class="highlight"><pre><span class="c"># Here we will make the assigned variable the same name as the wrapped function</span>
<span class="n">some_function</span> <span class="o">=</span> <span class="n">logging_decorator</span><span class="p">(</span><span class="n">some_function</span><span class="p">)</span>
<span class="c"># We can achieve the exact same thing with this syntax:</span>

<span class="nd">@logging_decorator</span>
<span class="k">def</span> <span class="nf">some_function</span><span class="p">():</span>
    <span class="k">print</span> <span class="s">"I'm happiest when decorated."</span>
</pre></div>

<p>只用装饰器的语法之后, 我们可以从鸟瞰的角度看看发生了什么事情:</p>

<p><strong>翻译未完, 续待</strong></p>]]></content:encoded>
		</item>
		
		<item>
		<title>产品与项目</title>	
		<pubDate>2013-01-03 15:30:00 +0000 UTC</pubDate>
		<link>http://chenye.org/product-and-project.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这是个很泛的题目, 对于程序员来说, 这是个选择.</p>

<p>在我看来, 公司分两种, 一种是做产品的, 一种是接项目的(可能还有一种皮包公司不属于我讲的范围)</p>

<p>无可厚非, 做产品要比接项目成就感来的快些, 或者说实在些.就好比在玩游戏中的练级(升级), 见证了产品的一步步成长.</p>

<p>接项目貌似赚钱要直接的多, 但是做完的东西, 做完就跟这个没关系了(可能有一部分需要维护), 拿游戏来类比的话可能类似于做任务.</p>

<p>就开发的过程来说, 专业的项目公司肯定会积累一定的解决方案, 看到可以塞进去的就塞(这里既无褒义也无贬义), 快速完成一个任务交差以便接手下一个, 对于产品的反馈, 大多来自于客户而不是用户.好处是可以接触各式各样的项目, 可能项目的经验会非常丰富, 各方面的解决方案都可以信手拈来.对于产品的定型, 由客户说了算.对于产品, 可能就有不一样的局面, 自己的产品总想着精益求精, 时间相对比较自由, 和项目不同的是可能一年下来都是在做这个产品, 质和量肯定不是项目所能比拟, 产品反馈是直接接触用户获得, 但是用户反馈相应过多过杂, 需要取舍.</p>

<p>在我最近面试的过程中, 其实很多是或者曾经是项目公司, 如果遵循进化论的话只能说纯粹的产品公司太容易挂了.这个可能和中国的市场和上面的一些东西有关.所以, 我遇到一些公司都是从项目接起, 然后等到各方面有所积累, 再做自己的产品.这是一种非常保险的做法, 产品挂了, 最多继续做项目, 继续积累, 再来一局.有一些则是直接拿投资, 直接做产品, 但是在中国, 付费意识不是很好, 就拿我灵敏短信来说, 3块钱, 可能还是觉得很贵, 就连我也觉得蛮贵的, 可是现在3块钱在现实生活中能弄什么, 连给我买一包山楂饼都不够. </p>

<p>所以我觉得, 如果要直接做产品的话, 并且要相对稳健的走的话, 也不是不可以, 需要做好对产品各个阶段进行转型的准备, 如果一开始按照最终形态去开发, 估计死在半路上是很容易的, 这个就好比dota出装备, 如果一开始抱着出蝴蝶的想法去玩, 过渡装备都不买的话, 肯定会经常蹲在血池...我觉得的话, 除了平台型产品, 可以考虑先通过付费的方式推广.这一步其实是很重要的, 如果这一推, 还有人付费使用的话, 一方面, 多多少少有点收入, 另一方面才是重要的, 证明这个产品有着某一人群所期望的特性, 才有可能付费使用. 接下来针对这部分用户再做优化, 建立一定的口碑和用户使用的优越感(因为是付费使用的正版).嗯, 其实忘了说, 第一步的形态, 应该是针对有付费习惯的用户, 对于没付费习惯的用户其实等放到最后再说吧, 虽然用户基数大. 如果第一步不行, 并不是说这个产品不行, 只是代表后面走的会很有风险. 然后再慢慢转型成刚开始预期的那样.当然, 说的是挺容易的.嘿嘿</p>

<p>对于自身发展来说, 做产品会有利于造就一批自以为懂产品的程序员. 不懂产品的程序员如同如今火影里面的十尾一般. leon说过没有想法的程序员和机器人是没有什么两样的, 我是完全赞同的.幸好的是, 我见过很多都是胸怀理想的, 由心的热爱这一行业.</p>

<p>对于我个人来说, 我是更倾向于做产品的, 尽管我明白很多项目公司都有做产品的欲望, 只是在曲线救国, 先占领农村, 再包围城市, 但要我选, 我肯定会选择已经占领城市了的. 对于项目公司, 我依旧怀着敬意, 都是一群有理想又为之奋斗的人们啊....</p>]]></content:encoded>
		</item>
		
		<item>
		<title>关于Python的参数默认值</title>	
		<pubDate>2012-11-07 16:06:45 +0000 UTC</pubDate>
		<link>http://chenye.org/python-params-default-value.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>最近相继遇到几个python的坑...贴一段有意思的代码</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">a</span><span class="p">(</span><span class="n">b</span><span class="o">=</span><span class="p">[]):</span>
    <span class="n">b</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">b</span>
<span class="k">print</span> <span class="n">a</span><span class="p">()</span>
<span class="k">print</span> <span class="n">a</span><span class="p">()</span>
</pre></div>

<p>输出是什么?</p>

<div class="highlight"><pre><span class="o">&gt;&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</pre></div>

<p>我对python没系统的了解过, 大概只能猜到函数在调用前应该已经生成了这个对象, 而且直接返回指针, 如果不知道的话很容易撞坑上</p>

<div class="highlight"><pre><span class="k">def</span> <span class="nf">a</span><span class="p">(</span><span class="n">b</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">b</span><span class="p">:</span>
        <span class="n">b</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">b</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">b</span>
</pre></div>

<p>a正常应该这样写, 不过这个特性或许可以利用..
比如,
好吧没想到.
不过传入一个初始化的对象的话不会有这个问题。。</p>]]></content:encoded>
		</item>
		
		<item>
		<title>个人总结加吐糟</title>	
		<pubDate>2012-10-21 16:35:23 +0000 UTC</pubDate>
		<link>http://chenye.org/no-no-no.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>好久没写过生活的文章了，只是一直觉得自己闲不下来，技术的文章也只是草草得带过，可见这段时间过得一点都不闲暇。</p>

<p>其实博客是用来总结自己的，有人这么说，写写博客，可以将自己写回原点，即使获得天大的成就，写一写，这一页就算翻过去了，重新开始，这个颇有让自己stay stupid, stay foolish的意思。当然我要求没那么高，发泄发泄一下而已～</p>

<p>从大三上来一直在填坑，前面挖的坑太多，灵敏短信花了我大概快一年的心血，由于魅族使用了android4.0并再度定制为flyme os，相对之前成型还没这么清晰的android2.3，改变相对还是有，特别是短信这块做得更死，再加上我对一些功能估计有误，不知道有变动，一拖再拖，灵敏短信一直拖了三个多月才勉强出了一个针对flyme的版本，但实际的效果却完全不及2.3那会，真的对我的用户不住。</p>

<p>灵敏短信的维护大概持续了一年，也就是说我接触安卓也快1年时间，收获是有的，我整理出了一套框架，针对android开发的一系列不方便做了一些抽象。面对java这鸡巴虽说还是挺讨厌的，但不得不说，从java我确实学到了更多的封装技巧。</p>

<p>对于学习，最近喜欢上看英文书，主要是我那蹩脚的英语确实应该磨练一下，二来，苹果方面的书籍如果想看与现在最接近的还是只有英文的。刚好要接触这方面的东西，顺便检验一下自己的学习能力把。实际上英文的技术书籍不难看，大概的词汇就那几个，我看了200多页基本是没问题的，不查字典也能勉强看懂，不过我有个毛病，在电脑上看不专心，有时转到ipad上看也不错，如果你也对英文有恐惧感的话，先通过看英文技术书籍来培养自信吧～</p>

<p>然后不得不说的是要夸一下我们学校，为了保护同学们不要太早社会化，大三上学期强制学生只能留在学校，不能出去实习，当然有一些因为之前和学校签合同的公司就拿他们没办法了，虽说大三没内容上了，不过可以上自习～对了！出去之前千万要交保险费，不然～嘿嘿</p>

<p>对于今后，我打算现在广州发展一年看看吧，本来是打算回汕头，后来一想，不对啊，出来读书，平时也是宅宿舍，就这样回去了，那不是跟没出来一样，况且汕头要找我中意的公司是比较难的，自己也没什么门路，所以不如在广州游荡一番，开开眼界。我还是挺想多认识一些牛båi哄哄的人的^_^</p>]]></content:encoded>
		</item>
		
		<item>
		<title>eclipse开发android下，提示Cannot connect to VM</title>	
		<pubDate>2012-10-04 03:12:32 +0000 UTC</pubDate>
		<link>http://chenye.org/solve-eclipse-android-cannot-connect-to-vm.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>先说起因，由于我在照搬网上hello world的时候不小心把main函数也抄进来了, 所以一直提示cannot connect to VM.</p>

<p>看似是编译完成后就提示，还没将apk传送到手机端。后来把main函数删除也好，整个class删除也好，都不能解决，甚至，删除工程重新建一个同名的工程也不行..一度很郁闷，我是跳过java直接写android，对java很多东西也不是很了解，上网上查，无非是winsock被替换了，只不过我是mac，这不可能。</p>

<p>后来研究了一下发生原理，由于提供了main函数导致eclipse在编译后自动运行这个类，而不是生成到手机，删除了类之后也不能解决， 因为在项目设置的"Run/Debug Settings"里面还存在设置导致eclipse编译后自动运行这个类，所以删除这里就行了</p>]]></content:encoded>
		</item>
		
		<item>
		<title>windows下putty生成的rsa转成mac下的openssh</title>	
		<pubDate>2012-09-11 02:05:00 +0000 UTC</pubDate>
		<link>http://chenye.org/putty-key-to-openssh.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>之前一直在windows下开发，现在换到mac，发现在windows下生成的<code>private key</code>无法使用，应该说不知道怎么用
我在windows下是使用hg，然后通过pageant来载入key，载入之前要填写一次密码
到了mac下之后，每个用户文件夹里面都有一个.ssh文件夹，将rsa添加进去就行了，terminal下输入
ssh-add key-file-name
就行（key-file-name是名称），假设我的ppk的文件名是key.ppk，我输入ssh-add key.ppk，然后密码一直错误，后来发现两者使用的加密方式不是同一种类型的，然后找到了这篇文章 <code>http://www.handaoliang.com/article_106.html</code>
大致步骤如下</p>

<div class="highlight"><pre>wget http://putty.very.rulez.org/latest/putty-0.60.tar.gz
tar xzvf putty-0.60.tar.gz
<span class="nb">cd </span>putty-0.60/unix
./configure
make
</pre></div>

<p>编译完成后开始转换</p>

<pre><code>./puttygen key.ppk -O private-openssh -o my_openssh_key.ssh
</code></pre>

<p>然后添加到key里面</p>

<pre><code>ssh-add my_openssh_key.ssh 
</code></pre>

<p>输入密码， 搞定</p>]]></content:encoded>
		</item>
		
		<item>
		<title>mac app store无法购买软件</title>	
		<pubDate>2012-09-09 10:31:58 +0000 UTC</pubDate>
		<link>http://chenye.org/mac-app-store-unable-buy.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>想买trine2但是当按下buy app的时候， 提示
<code>It may be damaged or was not signed</code>
但是购买其他则没问题。
然后搜到了一个答案， </p>

<pre><code>I had the same problem on a MacBook Air that ships with Lion

This is how you fix it

Close Every App (Safari, iTunes, AppStore, etc)
Launch Finder
Press CMD+SHIFT+G (or click on Go then Go To Folder)
Type the following /var/folders
Open up Console (Spotlight Console and launch it)
Open The AppStore
Try to buy something free and you will see this message "The product distribution file could not be verified. It may be damaged or was not signed."
Switch to Console and look at the error message
</code></pre>

<p>然后我查看log， 发现是yy这个文件夹， 删除即可</p>

<pre><code>FRPurchaseManager: Preflight operation for 483381002 failed with error: Error Domain=com.apple.appstore Code=0 "The product distribution file could not be verified. It may be damaged or was not signed." UserInfo=0x7f8093a8ccb0 {NSUnderlyingError=0x7f80958129a0 "The requested URL was not found on this server.", NSLocalizedFailureReason=Cannot create PKProduct from "file://localhost/var/folders/yy/34ybh2150q7bttr7zygr_jn00000gn/C/com.apple.appstore/483381002/preflight.pfpkg" Error Domain=NSURLErrorDomain Code=-1100 "The requested URL was not found on this server." UserInfo=0x7f80958bbac0 {NSUnderlyingError=0x7f8095e0ba40 "The requested URL was not found on this server.", NSErrorFailingURLStringKey=file:///var/folders/yy/34ybh2150q7bttr7zygr_jn00000gn/C/com.apple.appstore/483381002/preflight.pfpkg/index.sproduct, NSErrorFailingURLKey=file:///var/folders/yy/34ybh2150q7bttr7zygr_jn00000gn/C/com.apple.appstore/483381002/preflight.pfpkg/index.sproduct, NSLocalizedDescription=The requested URL was not found on this server.}, NSLocalizedDescription=The product distribution file could not be verified. It may be damaged or was not signed.}
</code></pre>]]></content:encoded>
		</item>
		
		<item>
		<title>关于js压缩</title>	
		<pubDate>2012-09-07 15:26:16 +0000 UTC</pubDate>
		<link>http://chenye.org/about-js-compress.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>关于js压缩
今天无聊， 突然想起来搞一个下载漫画的脚本， 毒手又伸向了imanhua.com
我以前写过一个php版的， 其中他对js的加密对我影响不大， 我只要知道他包含漫画所有文件名list的那个文件名就行了
这次我用python版写， 总体的思路是，抓取到该集漫画的所有图片，然后下载下来， 对于其中js就需要我手动去解析， 然后就碰到了下面这样的js压缩代码</p>

<div class="highlight"><pre><span class="nb">eval</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="s1">''</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^/</span><span class="p">,</span><span class="nb">String</span><span class="p">)){</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="o">--</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="p">[</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]}];</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s1">'\\w+'</span><span class="p">};</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;};</span><span class="k">while</span><span class="p">(</span><span class="nx">c</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s1">'\\b'</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s1">'\\b'</span><span class="p">,</span><span class="s1">'g'</span><span class="p">),</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">p</span><span class="p">;}(</span><span class="s1">'5 11=15;5 12=["/3/2/1/0/14.4","/3/2/1/0/13.4","/3/2/1/0/10.4","/3/2/1/0/7.4","/3/2/1/0/6.4","/3/2/1/0/9.4","/3/2/1/0/8.4","/3/2/1/0/22.4","/3/2/1/0/21.4","/3/2/1/0/24.4","/3/2/1/0/23.4","/3/2/1/0/20.4","/3/2/1/0/17.4","/3/2/1/0/16.4","/3/2/1/0/19.4"];5 18=0;'</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="s1">'72363|54|Images|Files|png|var|imanhua_005|imanhua_004|imanhua_007|imanhua_006|imanhua_003|len|pic|imanhua_002|imanhua_001||imanhua_014|imanhua_013|sid|imanhua_015|imanhua_012|imanhua_009|imanhua_008|imanhua_011|imanhua_010'</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">'|'</span><span class="p">),</span><span class="mi">0</span><span class="p">,{}))</span>
</pre></div>

<p>人为的格式化的话， 大致结构是这样</p>

<div class="highlight"><pre><span class="nb">eval</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span>
    <span class="c1">//...</span>
<span class="p">}(</span><span class="nx">arg1</span><span class="p">,</span> <span class="nx">arg2</span><span class="p">,</span> <span class="nx">arg3</span><span class="p">,</span> <span class="nx">arg4</span><span class="p">,</span> <span class="nx">arg5</span><span class="p">,</span> <span class="nx">arg6</span><span class="p">))</span>
</pre></div>

<p>那先来看第一个参数arg1(我精简了list部分)</p>

<div class="highlight"><pre><span class="s1">'5 11=15;5 12=["/3/2/1/0/14.4","/3/2/1/0/13.4"];5 18=0;'</span>
</pre></div>

<p>这个实际上就是压缩后的js代码， 按分号分的话就是</p>

<div class="highlight"><pre><span class="mi">5</span> <span class="mi">11</span><span class="o">=</span><span class="mi">15</span><span class="p">;</span>
<span class="mi">5</span> <span class="mi">12</span><span class="o">=</span><span class="p">[</span><span class="s2">"/3/2/1/0/14.4"</span><span class="p">,</span><span class="s2">"/3/2/1/0/13.4"</span><span class="p">]</span>
<span class="mi">5</span> <span class="mi">18</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</pre></div>

<p>这个挺像密码的～ 解密需要钥匙， 钥匙是第四个参数</p>

<div class="highlight"><pre><span class="s1">'72363|54|Images|Files|png|var|imanhua_005|imanhua_004|imanhua_007|imanhua_006|imanhua_003|len|pic|imanhua_002|imanhua_001||imanhua_014|imanhua_013|sid|imanhua_015|imanhua_012|imanhua_009|imanhua_008|imanhua_011|imanhua_010'</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">'|'</span><span class="p">)</span>
</pre></div>

<p>一看就知道这是个大list， split将通过｜分成一个list， 按照这里的位置给上面js代码填空。
5 是 var（从0开始），11 是 len， 15是空。
那第一行就是</p>

<div class="highlight"><pre><span class="kd">var</span> <span class="nx">len</span> <span class="o">=</span><span class="p">;</span>
</pre></div>

<p>这句肯定是错的。在进行替换的时候没有想到冲突的问题， 如果js代码里面有个值是1， 那是不是也会被替换掉， 那怎么避免？就是例子中15的情况， 当为空是， 不替换， 所以第一行应该是</p>

<div class="highlight"><pre><span class="kd">var</span> <span class="nx">len</span><span class="o">=</span><span class="mi">15</span><span class="p">;</span>
</pre></div>

<p>下面的应该就不难了， 还有一个地方会被忽略的就是不能使用单纯的replace去替换， 因为有可能替换进去的字符串又含有数字，但我们已经不想要再替换了， 所以我暂时的办法是通过字符便利来实现替换</p>]]></content:encoded>
		</item>
		
		<item>
		<title>在校园网下建立wifi热点上网</title>	
		<pubDate>2012-09-03 16:21:28 +0000 UTC</pubDate>
		<link>http://chenye.org/create-wift-host-in-ruijie.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>首先, 交代一下背景<br>
我现在的设备有windows主机一台, macbook, 和21.5寸显示器一个, 在学校需要建立一个wifi热点, 让macbook, 手机上网.<br>
由于学校的特殊原因, 没办法使用一般的无线路由器拨号锐捷上网(如果无线路由器不带锐捷拨号功能的话).然后电脑如果通过没有锐捷拨号的无线路由器上网没办法正常拨号成功.<br>
还有一个思路是买一个无线路由器, 给windows主机插上, windows主机使用锐捷拨号后通过connectify建立wifi热点.正常来说到这里应该都很顺利.  </p>

<p>然后macbook现在是我的主用电脑, 想把macbook插上显示器上使用, 但是我只有一个, 于是让windows开机后自动创建热点便可以省去windows的显示屏, 但通过mac远程windows的时候(mac通过微软提供的remote desktop connection远程) wifi会断开, 因为原本的用户被注销导致无法远程windows<br>
解决方法有两个, 第一个是采用第三方远程控制软件, 但是一般没有微软本身的顺, 第二个就是让win7和2003这些服务器版本一样能够多用户同时登陆. 网上有一些补丁可以办到(win7rdc), 然后要再新建一个用户, 远程登陆就使用这个账号即可.<br>
如果有时候想使用到网银盾需要用到windows, 可以直接再windows插上U盾, 远程win7, 就能搞定, 不用虚拟机了.  </p>

<p>这样就能满足一般的需求了, 既能建立wifi热点, 把windows当服务器用~_~  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>mac下安装python-mysql</title>	
		<pubDate>2012-07-30 09:37:11 +0000 UTC</pubDate>
		<link>http://chenye.org/install-python-mysql-in-mac.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>mac下安装mysql和ubuntu下不一样,所以有必要写一篇文章来记录下
<code>http://dev.mysql.com/downloads/mysql/</code>
首先到这里下载mysql,我下载的是tar.gz安装包, 参考<a href="http://blog.csdn.net/mr_von/article/details/6169396">这里</a>的方法,顺利安装了<code>mysql</code></p>

<div class="highlight"><pre><span class="nv">$ </span>sudo mv mysql-5.1.45-osx10.6-x86_64 /usr/local/mysql
<span class="nv">$ </span><span class="nb">cd</span> /usr/local
<span class="nv">$ </span>sudo chown -R mysql:mysql mysql
<span class="nv">$ </span><span class="nb">cd </span>mysql
<span class="nv">$ </span>scripts/mysql_install_db --user<span class="o">=</span>mysql
</pre></div>

<p>当然读<code>INSTALL-BINARY</code>也可以</p>

<p>之后安装<code>mysql-python</code>.</p>

<p>下载mysql-python, 因为下载之后还要修改文件,所以还是下载下来吧,不用easy_install了.
试试</p>

<div class="highlight"><pre><span class="nv">$ </span>sudo python setup.py build
</pre></div>

<p>提示</p>

<div class="highlight"><pre>mysql_config not found
</pre></div>

<p>如果根据上面将mysql目录移到了<code>/usr/local/mysql</code>,那么就直接新建一个link吧</p>

<div class="highlight"><pre><span class="nv">$ </span>sudo ln -s /usr/local/mysql/bin/mysql_config /usr/bin/mysql_config
</pre></div>

<p>然后还会遇到一个错误</p>

<div class="highlight"><pre><span class="nb">command</span> <span class="s1">'llvm-gcc-4.2'</span> failed with <span class="nb">exit </span>status 1
</pre></div>

<p>这个就需要下载xcode.到app store下载吧<br>
下载完成后,然后还不行,进入<code>xcode</code> -&gt; <code>preferences</code> -&gt; <code>downloads</code>,下载<code>command line tools</code>.<br>
接下来应该就行了...
然后在<code>python</code>载入<code>mysqldb</code>的时候还会提示</p>

<pre><code>Reason: image not found
</code></pre>

<p>这是一个环境变量就能解决(it work for me)</p>

<pre><code>export DYLD_LIBRARY_PATH=/usr/local/mysql/lib/
</code></pre>

<p>但是这种办法不能够全局通用.仅限于当前进程
可以将这段文字加入</p>

<div class="highlight"><pre><span class="nv">$ </span>sudo nano /etc/profile
</pre></div>

<p>参考<a href="http://elf8848.iteye.com/blog/1582137">这里</a></p>

<p>sublime下会发现import MySQLdb会出现image not found的情况</p>

<div class="highlight"><pre><span class="nv">$ </span>sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>我的理想</title>	
		<pubDate>2012-06-19 15:31:59 +0000 UTC</pubDate>
		<link>http://chenye.org/my-dream.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>我记得小学的时候经常写这种题目,一年级的时候就写过,还记得那时候还什么都没想,也不知道做什么。
但是，小学的作文大概就是选择题，总有那么几个热门职业，什么警察啊，balabala啊(好吧我就记得警察了)不提也罢.
基本上，我上初中后目标就很明确了，我以后要做计算机相关的工作。（很多人很喜欢说IT行业，我有点反感，是不是凡事沾上IT就高科技一点？）
第一次感觉有点不一样的时候，大概是高二，老师说，你们要想想以后要做什么了，不要整天发呆。我就纳闷，咦？原来你们没想过以后要干什么。
即使这样，我选专业的时候也迷茫了，发现其实没有一个专业是我特别想要的（专科），计算机的专业也有很多，至于为什么会选信息管理专业，完全是贪图新鲜吧。</p>

<p>好吧，前言结束来点正经的。
画家靠画画为生，音乐家靠作曲为生，实际上这是客观事实，但不准确，他们不是为了为生而画画或作曲，所以，我想换换说法
“画家画画，快乐得生存。音乐家作曲，愉快得生活”
程序员应该像艺术家一般，程序员写一个程序应该能赚钱（有人要的话），我很喜欢这种生活，哦不，应该是向往，还没过过呢。
所以我也设想过这样的场景，在路边摆摆摊，卖卖软件，吆喝招揽客户，躲避城管，躲不掉软件还给破解了，还被踢几脚，最后我只能怨念得说，我写个软件诅咒你。
说不定在卖软件的时候还有竞争对手，不打不相识，道同谋和，合作，做出来更复杂的东西，找个嗓门大的，吆喝几声，估计这片市场就能被我们占领了（软件好的话）。赚了钱，买了监控，城管来了就可以提前预知了哈哈</p>

<p>当然，这只是调侃。我的理想有二，参与一个团队去做出（起码）一个可以（稍微）改善现代人（哪怕是一点）生活习惯的产品，自身又是自由软件人，闲暇时写写程序卖卖萌（换成钱也合适），心情好还套上GPL发布出去。
我不会销售不会卖保险不会向别人信誓旦旦得讲一些连我自己都看不上的东西。</p>

<p>第一个理想我感觉我还是能达到的，我不贪薪资，不贪待遇，我喜欢有趣的产品，现在又年轻，哪里闯荡都无所谓。而且现在做的一个美食的app又是很喜欢，所以这个我不愁
至于写写软件卖卖钱，在中国貌似行不通。在中国的理想消费是要我出钱买虚拟的东西没门。我们喜欢笑里藏刀，很多软件号称永久免费，用户却不知后面有把小刀在偷偷割下你一点一点的肉。
中国有真君子，真小人，伪君子，套在软件上， 
免费软件是真君子，收费软件是真小人，“号称”免费软件是伪君子
对号入座吧，各有各喜爱</p>

<p>所以可以看到那些免费大厂商没怎么从用户那里拿钱照样成为了某大公司，但是这是个生态圈，钱也是循环的，钱从哪来？这我就不深究了，自己想，不行也可以理解成不知不觉就来了。
相比之下，真小人就真小人了，起码知道你是怎么死的
所以现在写程序，除了业余无聊小把戏尝尝鲜，主要还是在想，这东西到底有多少人用，在中国有中国的做法，我甚至可以发布真小人版和伪君子版，这都不是问题。</p>

<p>说实话我很反感帮企业做一些无聊的东西，你才是码农呢，你们全家都是码农。</p>]]></content:encoded>
		</item>
		
		<item>
		<title>谈计算机系的功利</title>	
		<pubDate>2012-03-27 04:49:55 +0000 UTC</pubDate>
		<link>http://chenye.org/talking-about-money-and-fame-in-ittech.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>以下均为吐糟，针对计算机系，有些事是最近才明理了,也只是针对我眼前所见，不具备代表性。
项目这个词，是在大学才第一次听到。原话大概是部长跟我说，"推荐你去找陈老师吧，他可以给你一些项目做。"项目？说得这么文艺，实际上就是被剥削几层的外包。由于我起步较早，大一便有了独自接项目的能力，这都是我引以为豪的，渐渐地，我开始以利益为目的选择性得做一些项目。对于学校领导层的一些网站项目，我有点不屑一顾了，钱又少，事又多。
嗯，我们系的主页被搁置一段时间了，系上面和我们部长都想让我做，老实说，我有点不情愿，第一没工资，第二费事，系主页后台语言还是老得不行的asp，被我一搁再搁也就烂尾楼了。总的来说，大一一整年我都是引以为豪得接项目，做项目，对网页，也算是熟门熟路了。当然，也还是要感谢那位陈老师.</p>

<p>这大概就是计算机系的的一生了，无怨无悔得接项目做项目。但是，发现了没？少了一样东西？对生活的触觉！接项目是不用动脑袋的，客户要求什么，就做什么，也是不允许你自己动小脑袋的，作为程序员 ，或许这习以为常，但程序员是啥，是新时代的农民工，谁想当？程序员这双手 ，生来是给别人实现愿望的？no；是用来实现自己愿望的，但是如果你对生活失去了触觉 ，失去了主动去幻想改造他这种欲望，谈何愿望呢？
学校犯了两个错误，第一，教会了人太早用金钱去衡量价值，或许不是故意，但也潜移默化，接项目有钱那是明摆着的，学生需要钱也是明摆着的，不知不觉我用利益来判断一个项目，但这没错，只是有些东西是不能用钱去衡量的。</p>

<p>第二，铺天盖地的项目使人丧失了自身去寻找可以通过技术去改善的生活方式，反正我不用动脑，会做项目就行。有项目找我我就做 ，没有就闲着。演变成现在系里面，是由老师想idea，学生来实现，这看了不禁有点讽刺，最富朝气的学生，竟然没有idea？！尽管学校也接受学生自发idea的东东 ，只是，这就像从笼子里放出老掉牙的老猴，告诉他们，你们自由了，可以走了。
亲身经历，这两种思想都出现在我身上。一味的被动等待项目，唯利是图，却没有生活的触觉，苦逼的码农，将会苦逼一生。</p>

<p>后来我发现，是项目盖住了我的眼睛，除了项目还有所谓的校领导关注的项目，这学校还有太多的东西是空白的，无关利益，即使是做个校内的4号平台，成就感也是很多的，即使没有利益参杂，相信动力十足，因为校内没人做，我第一个做了，而且对全校的学生都有帮助，要想这随随便便就能做出一个用户量上万的软件啊！只是我太早得得到了功利 ，一直到现在才懂得这些。程序员应该有的动力源泉应该是成就感而不是金钱，金钱驱动的事一般会愈发变味，每一个学生接的项目基本都是烂尾楼</p>

<p>对于我自身，当初学编程不是因为能赚钱，而是因为我喜欢有成就感，我喜欢实现想法，到现在，这意念也是不能变，钱这东西只要自己做得好，自然就会来，根本不必担心，不要成为金钱的奴隶，或许我还未接触社会，思想有些幼稚，人总是有缺钱的活法和不缺钱的活法不是吗？这够实际够不幼稚了吧，总不能让清高饿了肚子
如果你有幸当一名程序员 ，请无怨无悔接受上级给的指示，默默无闻得过一生，这才能使有梦想有触觉又有技术的人自居高处，心生安慰得说一句，那就是苦逼的码农啊
对于学生参加比赛，我持保留意见，要看什么比赛，而且，比赛只是假想中社会，作品能在比赛生存 ，不一定能在社会生存 ，而且无助于你更了解社会。反正我高中便拿过省一等 ，真的没什么，一个自己都不用的时间管理软件，主要是要合那群老家伙的口味罢了。至于算法比赛，呃，这世上还是需要数学家的，只是你自信能和名牌大学产的比吗？</p>

<p>如果能重新选择大一的活法 ，我会放弃一切项目，放弃一切比赛，做个校内4号平台，推广 ，维护，多发现校内缺少哪些文化；或许还能创造出新活法也说不定，比赛只是纸上谈兵，不如亲手将软件砸向市场，这可比比赛刺激多了。做了灵敏短信之后，确实感觉太刺激了。</p>

<p>结语，不是说学校项目不能接，领导项目不能做。要多想想为什么，不要老想着钱(如果不缺钱的话)，关键在于，做出的成品，会不会让这个世界更加美好，还有就是，不要忘了去挑剔这个世界。</p>]]></content:encoded>
		</item>
		
		<item>
		<title>Julia安装笔记 for Ubuntu</title>	
		<pubDate>2012-03-02 08:29:55 +0000 UTC</pubDate>
		<link>http://chenye.org/julia-install-notes.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>大部分教程在这里面有
    <a href="https://github.com/JuliaLang/julia">GitHub</a>
如果在make的时候出现这个错误</p>

<pre><code>[lapack_install] Error 127
</code></pre>

<p>主要是没有安装<code>libncurses5-dev</code>, <code>gfortran</code>,直接apt-get就行了.
还需要安装m4, </p>

<div class="highlight"><pre>sudo apt-get install m4
</pre></div>

<p>过程中需要安装llvm3.0,如果连接比较慢的话,可以先翻墙下载后,将文件cp到<code>./julia/external/llvm-3.0.tar.gz</code>,然后再继续make就行了.<br>
我试着自己安装llvm后发现make julia还是要再安装一遍...所以就不要自己安装了.<br>
如果你恰好已经安装了..可以把解压后的llvm-3.0文件夹也一同复制进<code>./external</code>  </p>

<p>如果根据git上的教程,如果你是ubuntu 11.10,将修改Make.inc中USE_SYSTEM_READLINE值为1.然后出现</p>

<pre><code>/usr/local/lib/libreadline.so: undefined reference to `PC'
/usr/local/lib/libreadline.so: undefined reference to `tgetflag'
/usr/local/lib/libreadline.so: undefined reference to `tgetent'
/usr/local/lib/libreadline.so: undefined reference to `UP'
/usr/local/lib/libreadline.so: undefined reference to `tputs'
/usr/local/lib/libreadline.so: undefined reference to `tgoto'
/usr/local/lib/libreadline.so: undefined reference to `tgetnum'
/usr/local/lib/libreadline.so: undefined reference to `BC'
/usr/local/lib/libreadline.so: undefined reference to `tgetstr' 
</code></pre>

<p>这是因为readline没有正确安装的缘故.改回0让julia自己下载安装就行.</p>]]></content:encoded>
		</item>
		
		<item>
		<title>python命令行预处理实例[ssh远程连接]</title>	
		<pubDate>2012-02-14 03:52:12 +0000 UTC</pubDate>
		<link>http://chenye.org/python-pexpect.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<div class="highlight"><pre><span class="kn">import</span> <span class="nn">pexpect</span>
<span class="n">ssh</span> <span class="o">=</span> <span class="n">pexpect</span><span class="o">.</span><span class="n">spawn</span><span class="p">(</span><span class="s">'ssh localhost'</span><span class="p">)</span> <span class="c">#建立新线程,执行"通过ssh连接本地"</span>
<span class="n">ssh</span><span class="o">.</span><span class="n">expect</span><span class="p">(</span><span class="s">'.*password:'</span><span class="p">)</span> <span class="c">#正则匹配输入密码提示,匹配才继续执行</span>
<span class="n">ssh</span><span class="o">.</span><span class="n">sendline</span><span class="p">(</span><span class="s">"123456"</span><span class="p">)</span> <span class="c">#输入密码</span>
<span class="n">ssh</span><span class="o">.</span><span class="n">interact</span><span class="p">()</span> <span class="c">#执行</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>大学生涯 – 大二（上）</title>	
		<pubDate>2012-02-09 17:17:28 +0000 UTC</pubDate>
		<link>http://chenye.org/collage-ii-part-one.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>上篇说这篇要写大二的（耶，完美完成上下文相呼应）大二，经过暑假的经历让我对学校的事情避而远之，哥有时间，宁愿自己独自闯荡。要说拿的出手的东西，那就是灵敏短信了。</p>

<p>灵敏短信是我为魅族M9做的软件，作为M9平台第一款短信拦截软件，上架当天卖出140个，大概是420左右。但是由于做的匆忙，还有对android的不了解（接触大概1个月左右）BUG很多，一开始评价很不好，我还建了个群，用于接收用户反馈，这才感觉众口难调，各有各需求，分身乏术啊。然后各种诡异的用不了，各种假死（我的大过），因为涉及从系统短信移出来放入灵敏，然后中间假死导致短信都没了，这对用户来说就是犯了天条，那时真想一度放弃，遭来各种骂声。幸好群里面有人也在安慰我，要我加油，于是，我开始筹备2.0的开发。后来，过了一个月，我还没更新，就有人在评论里面骂我骗钱了什么什么的，我无视了，哥做到这里已经不是为了赚钱了，为了名誉，为了群里那帮挺我的家伙。</p>

<p>2.0的灵敏短信，可以说完全重写了，一方面完善辅助函数，一方面重新设计界面，重新设计拦截算法，又想出新的短信加密方法，旧的方法暂且不用，原来的代码由于时间紧写得很乱，很难修改，我就直接重构，删掉重写，注重格式，规范，本来想做短信清理，结果一算，时间不够，等下个版本。在结构方面重新规划，适合我以后再添加功能，一方面向外放消息说该版本改动较大，请耐心等待。我还记得2.0发布的时间是12月11号，我跟群里人说最晚那天完成，最后果真那晚上11点就完成了，但缺乏测试。不管，放出去了，大不了被骂。结果呢，骂的人住嘴了，开始有好评了，各种得我看好你，嗯嗯，哥欣慰了，但是，短信拦截出了个bug，导致排除联系人会拦截不了全部短信。我没发现，所以来说还是失败的作品。几个好评之后清一色的无法拦截。寒假在家，趁过年有时间，宅在家做2.5版。找到了上述的bug，后来惊奇得发现，原来我一直用错拦截方式了，我以为要删除短信才能不让系统提示...这里改进了，再给短信加密加点自定义功能，加小型的短信清理功能，然后是大量的调试测试，确保耐用，找了andrex帮我测试，然后终于在年初八..大概是2月初左右上架。总的来说，除了短信加密有时导致死机，其他方面都挺满意，短信加密的死机还不是有规律的，这样我很郁闷。而andrex说没遇到，好，没遇到就放上去吧，说不定遇到的几率小呢。上架的时候反应很好，基本都是4星5星评价，我也渐渐知道怎么去做一款产品，写程序的，不就希望自己能做出一款帮助世人改变世人的产品么，不仅如此，我也对我的一些封装和重构洋洋得意，虽说我讨厌java，但是我很高兴。对了，2.5没出期间，商城出现了一款短信加来电拦截软件，我也在微博上表示惊奇了一下。他还说之所以会开发是因为没有遇到一款他合眼的短信拦截软件，嗯，这算对我宣战了吧?虽说行事一向低调，面对技术，我也是谦虚的，但是实在没脸被你超越，对于实打实做产品我觉得有信心超过任何人。灵敏的事情先谈到这里。</p>

<p>再说学习生活，这半年我过的很逍遥很自在，上课不听，自个儿做自个儿的事，作业不交，期末还是7，8十分，真是酷毙了。学校教的东西都弱爆了，哥不碰微软的东西的。</p>

<p>新生力量，说的是新一届学生，总得说，技术上弱爆了，没让我眼前一亮的，甚至超越我的，失望。我的上一届怎么说也有一个和我一样编程6年的...这一届就接不上了，按照我的一个老师的说法，要是像我这种能力的人多一点就好了。是啊，多几个宅男，马路上就不会那么挤了。</p>

<p>咦，还有东西想写，不过困了，睡觉</p>]]></content:encoded>
		</item>
		
		<item>
		<title>大学生涯 – 大一</title>	
		<pubDate>2012-02-08 18:10:12 +0000 UTC</pubDate>
		<link>http://chenye.org/collage-i.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>我已经可以感觉到我大学生涯的结束了，好吧，才过了一半。这一年半载（真的刚好是一年半载）这么一走过来，也算是有点收获。好吧，谈一谈我的大学生涯，一般来说后面没有什么事迹了，现在都脱离人事浮夸了。</p>

<p>我确定我真的是骨灰级码农了，单凭着代码真能给我自娱自乐，然后导致我越来越不喜欢说话，越来越有反人类倾向...（美女除外 哈哈）</p>

<pre><code>I like coding everyday
</code></pre>

<p>在大学初期，我有加入一个志愿修电脑团队，当然我不是一个喜欢帮助别人的人（别忘了我有反人类倾向），纯粹是觉得好玩，觉得可以炫耀...后来退出了，原因是在我写网页有bug的时候分配任务让我去修电脑!!!天呐，哥不是给你们这么使唤的啊，哥是程序员不是修电脑的啊。后来一想，不好玩，而且也没必要炫耀了（貌似在那之前我参加了校内一个网页比赛得了一等奖就有点出名了，没办法，在烂学校就是这样，后面会谈这个比赛的）</p>

<p>然后就退了...之后phoetry跟我说修电脑可以泡女生，我才恍然大悟起来，大呼年少无知...依稀想起，貌似有女生跟我要电话我不给来着...还有一次在女生宿舍修电脑顺便在那吃饭~碰上她们要参加厨艺比赛...   </p>

<p>嗯，大一上学期我是个很活跃的小伙，参加部门面试的时候，搬上我6年编程经验（现在7年啦）再加做过论坛，又拿过省一等，去那些技术型部门简直是任挑，好吧，系里面就两个有技术含量的部门，一个是上一段写的，IT志愿队，另一个是科技部，我都进了。接下来说科技部，别看名字很牛X，实际上呢，也牛x，为啥?有我在嘛!!!我包办了所有ppt制作，后来我在疑惑，为什么我要加进来做这种我四年级就做过的东西呢??好吧，当初加部门s是为了认识多点老师，然后就可以给我一点发挥的地方，后来确实如愿了。尽管我行事一向很低调（高调的低调，这才是最爽的炫耀，比如a跟我说哇你好厉害啊，我说，啊?这就算厉害啦?）我依旧在大一就认定我在这系里是最牛x的，嗯，这是我那时的瓶颈...ok..再回到科技部，我的ppt在很多公开大型场合展出~好自豪啊..只是我大公无私的都没加我名字，最大型的要是系内的欢送晚会了，哥美工兼技术都妥妥的~</p>

<p>接下来要说的是网页比赛!真难为出题人了，我与共青团齐成长，什么狗屁，班长跟我说每个班要出一个，我们班就我会，一定要我做，我也内心痒痒的，找帮手~我想到一个设计学院的MM，想让她设计我实现，然后，被无情得一口回绝.T_T搭讪失败，自个儿做，动态网页那时我已经做得很熟了，想想，刚学jquery，不如就全做静态前端吧。终于是做好了，参赛了，进决赛（八个组）了，一点都不出意料，只是呢，人家都是大二且3人一组，我大一1人一组会不会太嚣张了（我太喜欢用这一点炫耀了.先让我得瑟下）决赛是要现场答辩加评委的，我就叫之前那位MM去看我拿一等奖，呃，其实我是胆小的，上台这种事最害怕了，更何况对着400号人。中间有插曲是把作品亮出来投票，其实投票这种东西在中国是最假的，都是人情票，我从一开始最多，沦落到倒数第二，我呢，最见不得做作，让我去拉票是不可能的。（如果我拿第一肯定会说中国人最民主什么的...这叫逢景生情）终于到比赛那天，每队上去都是有亲友团口号...尼玛我最见不惯啊，我的不喊!正是因为不喊然后才获得华丽的出场，哥只追求唯一。起初观众有发出咦咦的声音，意思是我为什么没口号，然后我上台才说希望所有观众都是我的亲友团，口号就是掌声~输人不输阵，落入俗套更是我的大忌，这才符合我的风格。上台后我虽然怕怕，但我依旧想表现的自信满满，毫无疑问，我的技术在所有参赛选手中肯定是最好的，他们3个也顶不上我一个，正因为有这样的心态，我才敢说出"带给大家专业级别的网站"，事实上我成功了，成功忽悠了在座所有人。最后就拿了一等奖咯~比赛的事就这样结束了。等等，那MM呢?!没来，后来qq一说，她们外教请吃饭，我就被无视了。听说我拿了一等奖，要送我她种的芦荟（实际上是她没地方放 -。-）很不幸，暑假被我放室内枯死了，默哀，毕竟是我弄坏人家的东西。</p>

<p>貌似大一就这样结束了。<br>
大一暑假，我跟一位老师做高校杯项目，组内4人，其他三人是大二，我做得是一肚子火，准备不充分，4个人都无能组织起来，外加两个被叫去兼职（搞不懂老师怎么想的）前半段我还在迷茫用什么语言写，php，python都写了一遍中央服务器的程序，甚至是demo我都独自一人做出来（因此被其他人和老师说独断，没错 ，我从不依靠他人，我反人类，反人际，不会沟通）我以为做出demo就可以按我想法继续坐下去，谁知两个星期后老师说要用java写，尼玛我不会java啊，你叫我来这么久又不给我用武之地，最后让我做c#，靠，早说我就不来了（嗯，我对用微软开发有偏见，不屑于用微软任何开发软件，现在依旧）后来呢，我还是忍了。要说这个项目我学到了什么，那就是忍!年青气盛会坏事，要说技术，我在这期间认识了socket，restful，java和android，还有c#...c#上课有教但我从没听，弄两节课觉得没意思就做网页了，没想到这么快就适应了，最后，结果，项目失败。<br>
然后就是大二生涯了~下篇文章再说   </p>]]></content:encoded>
		</item>
		
		<item>
		<title>decoder zip not available</title>	
		<pubDate>2011-12-01 11:04:08 +0000 UTC</pubDate>
		<link>http://chenye.org/decoder-zip-not-available.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这个问题困扰了我近1个月(当然中途对继续编码没多大影响就没去理他)<br>
环境:<code>python in ubuntu server</code><br>
PIL是python下一个图片处理工具.可以随意对图片进行尺寸伸缩,加水印等操作.<br>
但是默认PIL是没有安装jpeg和png的库的,需要单独安装.<br>
由于是64位系统,系统用apt-get安装的文件会和32位系统不同,导致PIL安装的时候找不到这两个库  </p>

<ul>
<li><a href="http://www.foxhop.net/ubuntu-python-easy_install-pil-does-not-install-zlib-support">帮助一</a></li>
<li><a href="http://pkarl.com/articles/freetype-jpeg-zlib-and-python-imaging-library-osx-/">帮助二</a></li>
</ul><p>这两个网址基本能解决上述问题.
装完之后Jpeg一直正常,png就一直不正常.
但是检测的时候是提示都正常的!
后来在<a href="http://old.nabble.com/IOError%3A-decoder-zip-not-available-td30617803.html">这里</a>上发现一个和我情况完全一模一样的情况(-.-)
万能的评论帮助了我</p>

<pre><code>The setup output looks fine, so my guess is that your script isn't
picking up the same build as the one you get when you run the test
script. Running the following command in your PIL build directory and
your script directory will tell you what files Python are using:
</code></pre>

<div class="highlight"><pre>python -c <span class="s2">"import _imaging; print _imaging.__file__"</span>
</pre></div>

<p>上面的鸟文看不懂?没事,执行最下面的一行就行了.
得到路径...</p>

<pre><code>/usr/local/lib/python2.7/dist-packages/PIL-1.1.7-py2.7-linux-x86_64.egg/_imaging.so
</code></pre>

<p>貌似真正的路径在</p>

<pre><code>/usr/local/lib/python2.7/dist-packages/PIL/_imaging.so
</code></pre>

<p>这下就知道了...</p>

<div class="highlight"><pre>sudo nano /usr/local/lib/python2.7/dist-packages/pil.pth
</pre></div>

<p>修改Image类的位置,在另起一行加上<code>PIL-1.1.7-py2.7-linux-x86_64.egg</code>, 这下就OK了.</p>]]></content:encoded>
		</item>
		
		<item>
		<title>让你像写代码般写css</title>	
		<pubDate>2011-11-25 12:51:24 +0000 UTC</pubDate>
		<link>http://chenye.org/write-css-with-lesscss.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>写惯了各种代码,到了css,你会不会觉得<code>copy</code>/<code>paste</code>的操作特别多呢?会不会发现一修改配色就要来一次"全部替换"?   </p>

<p>前段时间我老大呢介绍了国外一神器,lesscss,不过主页被墙...有身高优势的童鞋可以翻过去<code>http://lesscss.org/</code>
先从使用方法上说吧,
可以使用变量.把颜色什么的用变量代替,Like</p>

<div class="highlight"><pre><span class="k">@tastyColor</span><span class="o">:</span> <span class="nf">#21A6CE</span><span class="p">;</span>
<span class="nc">.a</span><span class="p">{</span><span class="k">color</span><span class="o">:@</span><span class="n">tastyColor</span><span class="p">}</span>
</pre></div>

<p>这样都行?嗯,好处是你可以不用"全部替换"法来解决配色问题.
有变量,也要有函数了~</p>

<div class="highlight"><pre><span class="nc">.high-light</span> <span class="o">(</span><span class="k">@weight</span><span class="o">:</span> <span class="nt">1px</span><span class="o">)</span><span class="p">{</span>
    <span class="nt">border</span><span class="o">:</span><span class="k">@weight</span> <span class="nt">solid</span> <span class="nf">#000</span>
<span class="err">}</span>
</pre></div>

<p>这是"函数",我们可以看到还有参数,参数还带默认值(java无法设默认值的飘过),在其他地方可以调用了</p>

<div class="highlight"><pre><span class="nc">.button</span><span class="p">{</span>
    <span class="o">.</span><span class="k">high</span><span class="o">-</span><span class="n">light</span>
<span class="p">}</span>
<span class="nc">.button-weight</span><span class="p">{</span>
    <span class="o">.</span><span class="k">high</span><span class="o">-</span><span class="n">light</span><span class="p">(</span><span class="m">2px</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

<p>是不是很简单?
嵌套
有没有写下面代码的经历?</p>

<div class="highlight"><pre><span class="nf">#header</span><span class="p">{</span><span class="o">...</span><span class="p">}</span>
<span class="nf">#header</span> <span class="nc">.id</span> <span class="p">{</span><span class="o">...</span><span class="p">}</span>
<span class="nf">#header</span> <span class="nc">.search</span> <span class="p">{</span><span class="o">...</span><span class="p">}</span>
<span class="nf">#header</span> <span class="nc">.search</span> <span class="nt">button</span><span class="p">{</span><span class="o">...</span><span class="p">}</span>
</pre></div>

<p>到lesscss可以这样写</p>

<div class="highlight"><pre><span class="nf">#header</span><span class="p">{</span>
    <span class="o">...</span> <span class="c">/*header的css代码*/</span>
    <span class="o">.</span><span class="n">id</span> <span class="err">{</span>
        <span class="o">...</span> <span class="c">/*#header .id 的代码*/</span>
    <span class="p">}</span>
    <span class="nc">.search</span><span class="p">{</span>
        <span class="o">...</span> <span class="c">/*#header .search 的代码*/</span>
        <span class="n">button</span> <span class="err">{</span>
            <span class="o">...</span> <span class="c">/*#header .search button的代码*/</span>
        <span class="p">}</span>
    <span class="err">}</span>
<span class="err">}</span>
</pre></div>

<p>好了,关于语法就不再说,还有其他的,自己去google
关于lesscss的工作原理,lesscss有两种工作方式,
第一种,下载他的js文件,在网页中加载less文件和他那个less.js(less文件是写上文所说的简洁写法)
第二种靠谱点,直接用程序将less文件转换为css文件,与其说转换,不如说是翻译.
我是更倾向于用第二种,第二种只要在你修改的时候生成一遍css,第一种则是在用户看你网页的时候再进行翻译,可能效果的加载会比较慢
怎么生成呢,在ubuntu下很简单
先下载安装, </p>

<div class="highlight"><pre>sudo apt-get install libnode-less
</pre></div>

<p>然后执行</p>

<pre><code>lessc style.less style.css
</code></pre>

<p>就可以把less风格的代码翻译成真正css风格的代码</p>]]></content:encoded>
		</item>
		
		<item>
		<title>提示command ‘gcc’ failed with exit status 1的解决方法</title>	
		<pubDate>2011-11-04 04:30:45 +0000 UTC</pubDate>
		<link>http://chenye.org/command-gcc-failed-with-exit-status-1.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>备忘
在执行</p>

<div class="highlight"><pre>sudo easy_install mysql-python
</pre></div>

<p>的时候提示这个</p>

<div class="highlight"><pre><span class="nb">command</span> <span class="s1">'gcc'</span> failed with <span class="nb">exit </span>status 1
</pre></div>

<p>解决方法，</p>

<div class="highlight"><pre>sudo apt-get install python-dev
sudo apt-get install build-essential
sudo apt-get install libevent-dev
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>电脑连接virtualBox虚拟机ubuntu server</title>	
		<pubDate>2011-11-04 02:21:28 +0000 UTC</pubDate>
		<link>http://chenye.org/ping-virtualbox-ubuntu-server.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p><code>virtualbox</code>默认配置是虚拟机能访问到物理机，而物理机没办法访问到虚拟机，要解决这个问题就要配置双网卡，
选择网卡2，设置为<code>host-only</code>
进入<code>ubuntu</code>，首先，第二块网卡的连接名是<code>eth1</code>，目前还没有连接，特征是<code>ifconfig</code>里面看不到，而如果加上-a参数就能看得到eth1但没有IP地址。
先配置他自动启动</p>

<div class="highlight"><pre><span class="nb">cd</span> /etc/network
sudo nano interfaces
</pre></div>

<p>最后加上</p>

<div class="highlight"><pre>auto eth1
iface eth1 inet dhcp
</pre></div>

<p>保存
刷新设置</p>

<pre><code>sudo /etc/init.d/networking restart
</code></pre>

<p>就行了</p>]]></content:encoded>
		</item>
		
		<item>
		<title>ubuntu下配置tornado框架本地调试环境</title>	
		<pubDate>2011-10-14 05:40:09 +0000 UTC</pubDate>
		<link>http://chenye.org/ubuntu-tornado-debug.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这阵子花费了大概半个月做了一个M9平台的短信拦截软件，已经申请在魅族软件商城上架，今天魅族寄得合同今天已经收到，过几天再寄回去就能上架了。</p>

<p>最近又回到学python的行列，只不过接触的是网页编程，有高人指点确实少走了不少弯路。但依旧需要自己去一步一步摸索，这才是乐趣所在，哈哈</p>

<p>由于win下用python会出现诸多问题，很多提示找不到库，安装tornado会出现找不到库的情况，就只能转战ubuntu。python版本为2.6
现在需要做的是在虚拟机里面装上MYSQL，tornado，由于我电脑上已经配置好服务器环境，只要在虚拟机里面装好MySQLdb(连接MYSQL和Python的库)，远程连接我电脑上的MYSQL就行，如果你想在虚拟机里面也能看到结果，就要安装apache了，如果不需要，可以省略不装</p>

<div class="highlight"><pre>sudo apt-get install ssh
sudo apt-get install apache2
</pre></div>

<p>安装MYSQL</p>

<div class="highlight"><pre>sudo apt-get install mysql-server-5.0
</pre></div>

<p>然后到网上下载tornado，安装,PS:tornado的主页被墙，可以到这里<a href="http://www.tornadoweb.cn/">http://www.tornadoweb.cn/</a>
进入tornado的目录</p>

<div class="highlight"><pre>sudo python setup.py build
</pre></div>

<p>编译完成后执行安装</p>

<div class="highlight"><pre>sudo python setup.py install
</pre></div>

<p>然后解决连接MYSQL的问题，需要安装python-dev，setuptools</p>

<div class="highlight"><pre>sudo sudo apt-get install python-dev
</pre></div>

<p>到这里下载<a href="http://pypi.python.org/pypi/setuptools">setuptools</a>
下载好后进入那个目录，还是执行这两条</p>

<div class="highlight"><pre>sudo python setup.py build
sudo python setup.py install
</pre></div>

<p>由于通过apt-get方式下载到的mysql是不带mysql_config的，需要你去下载</p>

<div class="highlight"><pre>sudo apt-get install libmysqlclient-dev
</pre></div>

<p>准备工作到此结束，要开始安装<a href="http://sourceforge.net/projects/mysql-python/">MySQLdb</a>
找到site.cfg,添加一行</p>

<div class="highlight"><pre><span class="na">mysql_config</span> <span class="o">=</span> <span class="s">/usr/bin/mysql_config</span>
</pre></div>

<p>因为我的<code>mysql_config</code>是放在<code>/usr/bin/mysql_config</code>，所以指定这里，如果你不确定<code>mysql_config</code>，可以使用<code>whereis mysql_config</code>看在哪里
然后进入mysqldb的目录，</p>

<div class="highlight"><pre>sudo python setup.py install
</pre></div>

<p>一般到这里便结束了。
怎么调试？
官网上有一个helloworld,程序，复制下来，运行，你可以看到源文件上监听的是8888端口，如果你装了apache，可以在本地直接浏览器<code>127.0.0.1:8888</code>
如果没装，而且你的本机可以访问到虚拟机的地址，那就是那地址再加上端口号便可以<br>
tornado里面有一些demo，有个blog的demo可以测试mysql成功了没有，注意改里面的用户名和密码哦</p>]]></content:encoded>
		</item>
		
		<item>
		<title>某页面在IE8下无法AJAX获取的问题</title>	
		<pubDate>2011-09-21 08:31:05 +0000 UTC</pubDate>
		<link>http://chenye.org/ajax-doesnot-work-at-ie8.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>最近在弄一个新皮，发现一个问题。
在IE8下，jquery的版本是1.6.2，通过POST发送数据时总是无法正常调用回调函数。
数据确实是正常发送过去了，后来加了一个error方法，则执行了error这个方法。但是在Chrome，FF下却是正常的！
后来发现，换成其他页面(也是接收AJAX的)则正常。原来，我在PHP页面多加了这一句</p>

<div class="highlight"><pre><span class="nx">header</span><span class="p">(</span><span class="s1">'Content-Type:text/html;charset=UTF8'</span><span class="p">);</span>
</pre></div>

<p>这个是用来说明该页面的编码为UTF8的，在IE8下竟然无法正常判断是否成功并执行回调函数
将这一句去掉则正常。再仔细一看，原来是charset的问题，改成<code>charset=UTF-8</code>（多了一个-），也解决问题了</p>

<div class="highlight"><pre><span class="c1">//正确的做法</span>
<span class="nx">header</span><span class="p">(</span><span class="s1">'Content-Type:text/html;charset=UTF-8'</span><span class="p">);</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>远程桌面被自动断开的解决方法</title>	
		<pubDate>2011-09-19 11:54:03 +0000 UTC</pubDate>
		<link>http://chenye.org/control-auto-offline.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>自上学期开始，这个问题一直困扰着我。在机房上课的时候，总要远程控制自己宿舍的电脑，干点不正经的事...
悲剧的是每次连上没几分钟就会自动断开，提示是有另外一个用户强制登陆把我给T下来了。我有设密码，所以比可能被其他人T的，而且无论在哪里，用哪台机子都出现这样的情况！</p>

<p>因为我经常通过远程写代码的，所以这种不爽应该能够体会得到，早上4节课下来没重连个50次是不可能的。 </p>

<p>上网找了很多Google，都没有遇见这种情况的！</p>

<p>后来我受不了了，装了个64位的WIN7。用WIN7优化大师简单配置一下，到学校机房，还是一样？！老是自动断开。
突然我想到了可能是我设置自动登录的问题！对于新装的系统，我只是简单配置了一下，开机时自动登录，并且注销后也会自动登录。这么一想就想通了</p>

<p>打开WIN7优化大师，还是让他自动登录，只不过取消了注销后自动登录，就行了...</p>]]></content:encoded>
		</item>
		
		<item>
		<title>魅族,快让我的软件上架吧</title>	
		<pubDate>2011-09-15 11:18:18 +0000 UTC</pubDate>
		<link>http://chenye.org/my-software-update.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>还记得我说暑假仅剩的10天用来学android.手握M9,不做做看到时有点说不过去.其实我从高三那年就想帮手机做点小软件,可是苦于moto e6的系统是linux,MOTO不肯放出SDK,linux又不会,交叉编译啥啥都不会.就此作罢</p>

<p>再说说android,10天学完收获蛮大,已经能够用图片来美化整个界面.做成我理想的效果了.我的第一个手机软件,项目随手划,在9月7号申请在魅族软件商场上架.程序的用途主要是用于任务计划.灵感来源于我做项目的时候,会把今天要做的功能全部写出来,然后如果做完了打钩.这个软件就可以实现这样的效果.可以按项目分类,可以安排到任何一天完成.</p>

<p>提交给魅族软件商店,说最多7天完成评估.结果还真是第7天给我结果了.审核通过,现在进入了测试阶段</p>

<p>因为是为M9适配,分辨率太大问题.不好意思放出来了.</p>]]></content:encoded>
		</item>
		
		<item>
		<title>学校论坛升级心得</title>	
		<pubDate>2011-09-12 14:57:04 +0000 UTC</pubDate>
		<link>http://chenye.org/discuz-update.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>我接了一个学校论坛后台管理员的活，会接是因为认识上一届跟我说只要几天备份一次数据库就可以每月赚30，这等好事岂能不做…学校用的是discuz7.1,这个学期他们突然想升级到X2，当然只有我来做。  </p>

<p>学校从dvbbs论坛转DZ的，7.2之前插件机制还没改，所以整个文件目录超乱，所以我不选择覆盖升级了，直接新装论坛，在转换数据库。论坛数据转成sql语句要500M,用phpmyadmin导出，幸好最新版的phpmyadmin可以断点导入，就一直点点到500m文件导入到我的电脑本地的环境，出于保险起见当然要在本地试试啦…   </p>

<p>接下来把旧程序换目录，把x2放进来，新安装一遍，和原论坛同一个数据库，不同前缀.开始转换数据库到x2，但官方只有7.2到x2的.后来想想7.1和7.2没什么区别，直接上，途中发现缺一个表和两个表缺一个字段，从7.2中提取出来（我同时又装了7.2）经历半个小时，终于转换完成.现在是将旧版的数据复制成x2的数据。可以把旧版的数据删了。再根据转换程序最后的提示做，放附件进目录，这样就完成了  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>评论页面更新啦</title>	
		<pubDate>2011-09-09 06:15:24 +0000 UTC</pubDate>
		<link>http://chenye.org/comment-page-update.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>由于接触WP不久，WP的工作机制都还不清楚，只好照着twenty ten的模板一点一点改。
他在子评论这里是通过添加<code>&lt;li class="chindren"&gt;&lt;/li&gt;</code>将子评论<code>marginRight</code>，但我的HTML模板是通过左边添加一个DIV，宽度决定子评论的级数。
简单地说，就是twenty ten的排版方式不适于我。本来想自己写评论的读取的，但是感觉挺麻烦的，就用现成的wp_list_comments这个函数。
蛋疼的是这个函数会为自己添加上述的<code>&lt;li class="chindren"&gt;&lt;/li&gt;</code>...折腾了我好久，只能用简陋的方法啦....
style.css添加</p>

<div class="highlight"><pre><span class="nc">.children</span><span class="p">{</span><span class="k">padding</span><span class="o">:</span><span class="m">0</span><span class="p">;</span><span class="k">margin-top</span><span class="o">:</span><span class="m">0px</span><span class="p">;</span><span class="k">margin-bottom</span><span class="o">:</span><span class="m">0px</span><span class="p">;}</span>
</pre></div>

<p>这下不marginRight了，然后再手动marginRight吧~~~
这里应该先说明一下WP评论的数据库结构，像树吧..
每行评论数据都有一个comment_parent字段来表示他的父级是谁，如果是顶级评论那他没有父级这个值就为0.
然后如果你想读取某个顶级评论下的所有子评论，需要先指定读取某个顶级评论,获取他的ID，再根据他的ID搜索comment_parent等于这个ID的评论，再遍历这些评论，逐个逐个搜索comment_parent等于这些ID的子子评论。
看，费了这么多口舌，也就讲到第三层子评论...
这个就是我直接用wp_list_comments函数的原因...
我实现marginRight的方法：</p>

<div class="highlight"><pre><span class="nx">global</span> <span class="nx">$temp_comment_data</span><span class="p">;</span>
<span class="cm">/**</span>
<span class="cm">* 要GLOBAL一个变量，因为他是一遍一遍得调用我那个函数，没GLOBAL的话每次调用都会变成一个新变量，所以必须把它给全局了</span>
<span class="cm">* 顺藤摸瓜..按照他设计的思路，</span>
<span class="cm">* $temp_comment_data[ID]代表ID为XX的评论需要marginRight多少。</span>
<span class="cm">*/</span>
<span class="nx">$temp_comment_data</span><span class="p">[</span><span class="nx">$comment</span><span class="o">-&gt;</span><span class="nx">comment_ID</span><span class="p">]</span> <span class="o">=</span> <span class="nx">$temp_comment_data</span><span class="p">[</span><span class="nx">$comment</span><span class="o">-&gt;</span><span class="nx">comment_parent</span><span class="p">]</span> <span class="o">+</span> <span class="mi">25</span><span class="p">;</span>
<span class="c1">//翻译成中文就是 子评论的marginRight值等于父级的marginRight值再加25；</span>
</pre></div>

<p>然后就OK啦</p>]]></content:encoded>
		</item>
		
		<item>
		<title>无题</title>	
		<pubDate>2011-09-07 11:37:49 +0000 UTC</pubDate>
		<link>http://chenye.org/non-title.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>不知不觉我的网站已经很久没更新了，主要是没什么新发现，在广州做项目，刚开始是用python写socket服务器端，再用php写网页端和本地的socket连接，后来又写c#，感觉也是没什么好写，后来回到家，用暑假余下的10天来学android.然后就很忙了，开学回来又说学校论坛要升级，又忙了一阵，又是高校杯那项目还没完成，总归就是忙了。<br>
最近还是有目标的，给博客换个新皮，和峰子弄个双人技术博，旨在合作接网页项目，深层研究discuzx2的代码，感觉是时候看他的代码了，看还能学到些什么。<br>
最近为m9做了一个项目管理软件，可以为某个项目添加任务，然后完成可以打勾的，也可以安排时间做，暂时够我现在用了<br>
不知不觉貌似我pr2了...  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>做项目应该注意的事</title>	
		<pubDate>2011-08-07 14:31:22 +0000 UTC</pubDate>
		<link>http://chenye.org/what-to-do-in-project.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>往往项目最开始是写一些公用函数或类.最开始会感觉一整天忙下来没有什么进展,但要忍下来,公用函数写好了,接下来的进度就快了.<br>
要先计划当天要做什么功能.否则就会产生这个功能做一半又跑去做另外一个功能.(如果是顺着整个流程走,很容易这样),然后做着做着就不知道自己要做什么了.<br>
边写边整理代码,如果一开始对实现某个功能还没有底,就让你按工工整整的格式写肯定是不干的.但是让代码看起来工整对以后调试查错扩展都是有帮助的,所以这也是必须的,所以,当开始写某个功能时,可以无视代码工整,先把功能写出来,写完了,再修改,改进算法也好,修修补补也罢,顺便写下文档.<br>
项目分工时,要先完成分工间通信的API文档.把通信的格式先列出来.<br>
以后如果还有感会再补上  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>征服漫画网站(盗链+采集+优化阅读方式)</title>	
		<pubDate>2011-07-31 14:04:31 +0000 UTC</pubDate>
		<link>http://chenye.org/challenge-comic-website.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>最近突然喜欢看漫画,baidu一下,找到了www.imanhua.com这个网站,发现里面漫画挺多.还不错.但是蛋疼的事情就是太麻烦了.有兴趣的可以去体验下.<br>
每一张漫画都要手动按一下下一页才可以继续看,然后看到最后还没有下一篇的连接,要记住这个第几话了,然后会目录再找第几+1话...而且广告的密度也不多说.<br>
虽说会自动加载下一页漫画图片缓存下来,待到打开下一个页面时就不用等待图片下载了,但是还是看得不爽.<br>
然后心头突然涌现一个想法..采集他的图片下来,做成自己想要的方式..哈哈.有技术的人就是有优势.<br>
接下来会介绍我逐步研究的步骤..最后还会附上我的作品..所谓的采集也不是名副其实的采集.进入正题..<br>
随便找部漫画,比如火影,找到第一集,用火狐打开,然后按ctr+shift+k打开XX工具.然后打开网页,从一大堆数据中隐约能找到</p>

<pre><code>[20:59:56.052] GET http://61.147.109.2:89/Files/Images/54/45998/imanhua_001_185520120.jpg [HTTP/1.1 302 Redirect 29ms]
</code></pre>

<p>这个就是具体的图片了.归根到底我们就只需要这个图片而已.新窗口打开这个图片,发现万恶的防盗链.根据我的理解,防盗链的原理应该是根据发送请求信息的域名来判断是不是外界,这样,我们就确确实实要在<code>imanhua.com</code>域名下打开我自己的网页咯.按理说我们打开<code>imanhua.com</code>会解析到他们自己的ip地址,但是我们可以修改<code>c:/windows/system32/drivers/etc/hosts</code>这个文件,将<code>imanhua.com</code>解析到我们指定的IP地址就行了.博主们的空间应该可以绑定多个子网站,上传到上面,建立<code>imanhua.com</code>这个子站点,然后修改hosts这个文件将<code>imanhua.com</code>解析到自己空间的ip,然后浏览器访问<code>imanhua.com</code>就会访问到你自己的空间上面去.而且,如果在上面引用上面得到的图片地址,是不会被防盗链的呦!!!这就是要大费周章的原因.而且.不知注意到没有,用<code>imanhua.com</code>和<code>www.imanhua.com</code>都可以访问这个网站.这正好帮了一个忙.将<code>imanhua.com</code>解析成我们的IP,而<code>www.imanhua.com</code>可以不理(必须),因为还需要通过它来获取目录信息,以便自动加载.</p>

<h3>
<a name="ok" class="anchor" href="#ok"><span class="mini-icon mini-icon-link"></span></a>OK,接下来是网页篇...</h3>

<p>本来想抓住图片地址的规律,发现<code>/imanhua_001_185520120.jpg</code>,后面这一串185520120是随机的.翻开网页源代码(你问我怎么打开源代码?网页禁止右键了?用Chrome打开<code>view-source:http://www.imanhua.com/comic/54/list_45998.html</code>试试),找到了一段比较长的压缩加密的js代码,eval(function(p,a,c,k,e,d){...(省略),解压加密得.....一个包含本集所有图片地址数组....是不是很简单...把这个拉出来,放到我们的网页上,当成js运行.就可以自动加载了...(过程省略,我没那么多的口水用),然后是采集目录,他是一个ul包括起li,用正则<code>preg_replace_callback</code>截取出来保存成数组的形式.和写代码高亮相比,这简直是小巫...
最后优化成的理想阅读效果是,当看到最后一张图片时,自动加载下一页,当这一集看完时,自动加载下一集的第一页,然后一直这样下去.直到这部漫画完.而且加入页面跳转.可以跳转到本集的任意一页.右下角有个输入框,输入数字按回车就行.
chrome下完美通过...兼容性我就懒得顾及了,反正这是写给我自己用的.
然后啊,你只要用滚轮一直滑滑滑滑到这部漫画剧终...当然,按空格可以滑动到下一页图片到屏幕顶端,这样更可以方便阅读.按F11全屏,这种阅读方式和看PDF一样爽.我就这样看完了3部漫画..
如果想试效果,可以把</p>

<pre lang="hosts"><code>174.37.169.17   imanhua.com
</code></pre>

<p>加入你的hosts文件,这是我上传到我空间的demo.就可以用这个域名看了.第一次打开目录可能会比较慢,毕竟这是国外的空间.要往返很多次...
如果要看其他漫画,需要在imanhua.com找到他的ID,比如火影的地址是<code>http://www.imanhua.com/comic/54/</code>,那他的ID是54,访问<code>imanhua.com/?id=54</code>看到的就是火影的目录了
最后是源代码,因为代码写的很急,用了一个半小时,所以..
版权没有,修改自由,后果自负..耶
虽然本文某网址出现的频率颇高...但这不是软文....</p>]]></content:encoded>
		</item>
		
		<item>
		<title>C#不同线程的相互访问</title>	
		<pubDate>2011-07-27 16:10:11 +0000 UTC</pubDate>
		<link>http://chenye.org/c-sharp-applications-visit.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>本来是不想碰C#这蛋疼的家伙的.但没办法,项目中突然要我负责餐厅服务器,把我从东墙扔到了西墙.只好硬着头皮干了.<br>
当前和中央服务器的连接还是采用socket的方式,要有像QQ一眼的在线状态判断功能.这也就意味这要定时向中央服务器发送心跳包~告诉他我还活着...<br>
然后还要负责监听来自中央服务器的消息.监听就意味着单线程要处于堵塞状态(死循环,无法进行其他操作了),而且,发送心跳包的频率是每秒1次,监听则是1ms一次,所以就要采用多线程来解决.然后多线程中状态的互交是必须的.然而C#为了安全不同线程是不允许相互访问其内容的.然后便有了此文.  </p>

<h4>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>目标:</h4>

<p>用另外一个线程控制主窗口的lb_name(textbox控件)的内容显示<br>
PS:其实我说了,我对C#不熟,代码是baidu(为什么不是google呢,因为他刚好间接性挂了.)来的(修改了一点).怕忘记加了一点理解<br>
首先申明一个委托方法   </p>

<div class="highlight"><pre><span class="k">public</span> <span class="k">delegate</span> <span class="k">void</span> <span class="nf">SetText</span><span class="p">(</span><span class="kt">string</span> <span class="n">text</span><span class="p">);</span>
<span class="c1">//加入方法</span>

<span class="k">private</span> <span class="k">void</span> <span class="nf">SetLbText</span><span class="p">(</span><span class="kt">string</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 如果返回 True ，则访问控件的线程不是创建控件的线程</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">lb_Name</span><span class="p">.</span><span class="n">InvokeRequired</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// 实例一个委托，匿名方法，</span>
        <span class="n">SetText</span> <span class="n">st</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SetText</span><span class="p">(</span><span class="k">delegate</span><span class="p">(</span><span class="kt">string</span> <span class="n">text</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 改变 Label 的 Text</span>
            <span class="n">lb_Name</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">text</span><span class="p">;</span>
        <span class="p">});</span>

        <span class="c1">// 把调用权交给创建控件的线程，带上参数</span>
        <span class="n">lb_Name</span><span class="p">.</span><span class="n">Invoke</span><span class="p">(</span><span class="n">st</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">lb_Name</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">str</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>然后任何线程都可以通过<code>setlbtext("内容")</code>来改变lb_name的内容.
通过代码我能理解的就是,实际对<code>lb_name</code>进行内容改变的还是他自己所在的进程,因为其他进程是没办法访问到<code>lb_name</code>的.
而委托函数(SetText)大概是能委托<code>lb_name</code>所在线程对<code>lb_name</code>进行操作.
哎,这就是码农的悲哀.竟然硬把我拉去写C#...</p>]]></content:encoded>
		</item>
		
		<item>
		<title>带来自动发天气预报给手机</title>	
		<pubDate>2011-07-06 11:21:31 +0000 UTC</pubDate>
		<link>http://chenye.org/seng-weather-aut.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>hi,guys,我貌似很久没来了,今天终于是放假了.当然这不意味着我没来的这段时间很忙,相反,我一直处于游魂状态...整天无所事事.两个星期的实训让我一天就给搞定了.然后闲闲的坐了两个星期.呵呵<br>
貌似我每隔一段时间都会有这种状况,很不想再做下去了.无所事事,也不知道要干什么,也什么都不想干.<br>
OK,废话不说,前几天老师跟我说PHP也可以用飞信发短信.这个功能其实很早一段时间就在研究,但无果.居然在code.google.com上找到了一个.测试后完美运行.是通过WAP方式提交,为的是避过验证码.<br>
当然本篇不想讲那些原理啊什么的.看标题,这次直接给实用的.一步一步带你实现自动给手机发天气预报.<br>
前提,你的空间的管理面板是cpanel,这样才能触发定时短信.  </p>

<ol>
<li>先确定天气预报的城市,比如我是佛山,我的PHP是引用weather.com.cn的天气数据的,所以需要城市代码,查询城市代码的方式很简单,上weather.com.cn在搜索中填入城市名,比如佛山,搜索,会跳转到页面<code>http://www.weather.com.cn/weather/101280800.shtml?</code> 那么我就知道了佛山的城市代码是<code>101280800</code>
</li>
<li>你要有一个飞信账号,而且要绑定手机的.理所当然你要发的目标手机要和你是好友关系,不解释.<br>
</li>
<li>下载发送手机的代码,我把获取数据和飞信代码封装在一起.<br>
</li>
</ol><p>打开,解压,进入sendweather文件夹,打开weather.php,<br>
找到  </p>

<div class="highlight"><pre><span class="nb">define</span><span class="p">(</span><span class="s1">'PHONE'</span><span class="p">,</span><span class="s1">'手机号码'</span><span class="p">);</span>
<span class="nb">define</span><span class="p">(</span><span class="s1">'PHONEPASW'</span><span class="p">,</span><span class="s1">'密码'</span><span class="p">);</span>
</pre></div>

<p>按内容修改成飞信的手机号码和密码.
还有一段</p>

<div class="highlight"><pre><span class="nx">$fetion</span><span class="o">-&gt;</span><span class="nx">send</span><span class="p">(</span><span class="s1">'手机号码'</span><span class="p">,</span> <span class="s1">'101280800'</span><span class="p">);</span>
</pre></div>

<p>这一段是发送天气预报的执行代码,第一个参数是要发送给哪个手机的手机号码,第二个参数是城市代码.(忘记是什么了?看你前面第一步拿得那一个).如果发送多个手机可加多一行,不够再加....
然后传到空间上面去.在根目录(注意是根目录,public_html再上一个目录)新建一个文件夹,可以是sendweather,这里我就比如根目录下sendweather/weather.php,接下来就是cpanel了
进入管理面板,高级-&gt;时钟守护作业,添加新计时程序作业,普通设置下拉框选择每天一次.命令就输入php /home/cpanel的登录账号/sendweather/weather.php,提交就OK了!</p>

<p>PS:注意时差!</p>

<p>附directadmin定时设置用法,来自独自流浪,他有详细的使用说明
命令不能直接使用php OOXX
而是要
/usr/local/bin/php /home/DA登录名/domains/网站域名/public_html/sendweather/weather.php
注:这个是放在网页目录下,为安全考虑,可以在sendweather下放一个空的index.php</p>]]></content:encoded>
		</item>
		
		<item>
		<title>关于自动获取新消息</title>	
		<pubDate>2011-06-26 15:56:40 +0000 UTC</pubDate>
		<link>http://chenye.org/read-message-auto.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这篇文章关系到前端和后台...本篇文章不涉及代码,只有思路..<br>
星期五晚上接到一个任务,关于我们学校的签到系统,说是做一个页面,自动展示今天已经签到的人员,并且要求一点是自动更新新签到的人员
很明显要用到AJAX,上阵子写主题写得正熟,5个小时便搞定界面后台与JS.<br>
类似于微博<br>
用过微博的一般都知道,当你打开首页,等得比较久的话,会出现一个有新消息,点击后就显示出来了.为什么他不自动显示呢?技术问题?当然不是,因为这样能够有效得减少资源的占用<br>
先说一下原理,在页面加载后,JS会每一段时间间隔向服务器发送一个搜索新消息的请求,然后服务器告诉他有or无.如果有,就显示出有新消  息,请查看!然后?然后JS就不用再去向服务器请求了.因为每次请求会给数据库带来一定的负担,而我的目标机子仅是一个1.8Ghz,256内存的虚拟机里面,4个表每个表数据都在6000+行以上,我在那个虚拟机上测试每次查询耗时是100+ms,而在我电脑上是20+,能省则省...<br>
OK,刚才说到哪了.显示出有新消息,让用户去点击,节省的就是检测到新消息到用户点击这段时间的资源.当用户点击的时候,再向服务器提交查询信息,得到数据显示出来,然后再回到该流程的第一步.<br>
大致的流程已经出来,再考虑细致的.  </p>

<ol>
<li>数据库查询,既然是查询今天的签到,就要给定一个时间范围,一般数据库中是以时间戳的方式储存时间,比如1308565124,意义是从1970年1月1日到现在的秒数.那时间的范围就是以今天0点0分为下限,现在的时间为上限.有一个方法可以获得今天0点0分的方法.先用date("Y-m-s",time())把现在时间的时间戳转换成我们熟悉的年月日格式,然后用strtotime()把文本格式的时间转换为时间戳.由于我们给strtotime没有包含哪个小时那分,所以默认是0点0分,刚好能达到今天的下限
由于同时查询了多个表,并且都是要获得姓名,部门,时间,为了降低资源开支,我使用了UNION把所有select语句都给串联起来,但UNION要求是字段名称要相同,而时间有的是交signtime,有的是sign,这时候就要使用别名了,直接 as time搞定
这样就通过一次查询就把所有的表都整合到一个数组当中.类别,是通过表的不同来辨别的,比如A表是公务签到,B表是留宿签到,整合到一起怎么区别呢,在selectA表的时候,在查询字段的地方可以加上 "1" as type,这样从A表读出的数据都会加上一个字段type并且值为1,其他的就类推</li>
<li>时间.
时间是一个重要的问题,时间弄不好会导致重复数据的产生.我的思路是,客户端网页在每次通过AJAX获取有没有新消息时,会自动带上上次查询不到信息的时间,服务器呢,查询数据的范围就是给的时间到当前服务器的时间,这样就将每次要查询的范围降到最小
我第一次的时候为了节省服务器资源,直接在本地用JS读取时间,在本地测试是没什么问题,可是放到服务器问题就出来了,时间不同步,因为JS读取的时间的客户端电脑的时间,而数据库查询的时间是服务器的时间,服务器的时间和客户端电脑的时间是不一致的,导致了显示出重复数据.</li>
</ol>]]></content:encoded>
		</item>
		
		<item>
		<title>让手机通过学校的校园网上网并拨通L2TP宽带</title>	
		<pubDate>2011-06-25 03:21:32 +0000 UTC</pubDate>
		<link>http://chenye.org/mobile-goto-ruijie-and-l2tp.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这几天跟老师借了一个公家的无线路由器,提到无线路由器你们就知道我想干嘛了,让手机WLAN上网.<br>
学校不必家里的宽带,只要输入用户密码就可以上网了.校园网一般通过锐捷的802.1X认证,通过了就能获得校园网的速度.<br>
现在支持802.1X协议的路由器有很多.随便找一个,还有一些是可以刷openwrt,然后可以理解为给路由器装了linux系统,想干嘛就干嘛,
不过我手头上得路由器不支持.先讲一下拨通校园网吧,等一下还有拨通L2TP宽带<br>
像我这种连接DHCP服务器来获取IP的情况,DHCP会根据你的MAC地址自动分配给你指定的IP,即每次内网IP都相同,所以第一步是克隆MAC地址,把路由器的MAC地址设成和你网卡的MAC地址一样,一般路由器有这样的功能的<br>
然后WAN口连接类型选为802.1X + 动态IP,他就会自动获取IP地址和DNS服务器了.输入校园网账户密码,登录即可.<br>
即使是校园网拨通了,也就11K/s的速度极限了.比EDGE还慢,我们学校还提供了校园网基础上的L2TP宽带,要先连上校园网之后,再为宽带拨号,就能得到50+kb/s左右的极限速度,但是路由器端不支持二次拨号,要么802.1X,要么L2TP,当然只能选802.1X,因为没校园网,宽带根本连不上.电脑端可以使用L2TP再拨号一次就可以,但是手机端就悲剧了.<br>
几经摸索,发现可以设置VPN虚拟网.以我的M9(android2.2)为例<br>
首先要找到VPN的服务器IP,在我电脑上的网络连接存在一个L2TP的连接,右键属性一看就看到了192.168.129.1<br>
设置,网络,VPN,添加虚拟专用网,添加VPN"L2TP",设置虚拟专用网服务器填192.168.129.1(刚才找的),保存.点击刚才创建的,输入用户密码,连接即可.  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>一周有感</title>	
		<pubDate>2011-06-24 16:05:58 +0000 UTC</pubDate>
		<link>http://chenye.org/something-to-write-in-this-week.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这周过的真不是人过的生活...<br>
哎...这周是会计的实训,金蝶ERP是我们计算机信息管理专业的特色.我当时选择这个专业貌似是从网上看到说现在ERP人才缺乏..<br>
没想到就是个会用财务软件的会计,早知道或许就不会报这个专业了.当时在选专业的时候确实很难选.虽说计算机专业是我从初中开始就为自己打算的路,如今也实现了,只是计算机真的有很多方面,我们学校就有软件,网络,计算机应用,计算机媒体,和计算机信息管理.要说软件吧,我会了,网络吧,我也会PHP,也算会了,计算机应用,就是个修电脑的,也会了,无视,计算机媒体,Flash我还是学过的.在PS之前我还经常用它来做图...但艺术方面我没细胞,略过...所以就剩下,计算机信息管理.本想学多点的.<br>
鬼知道这学期会计课就是DOTA课....他在上面讲我们在下面团战.ERP连个吊毛都没学到.过程也的确实属无聊,录入信息,还有...(说不来了),反正繁琐至极<br>
导致这星期ERP实训,我就只能上上网,玩玩手机,幸好他也不查.只要交实训报告,晚上去拷一份,PP图就完事...<br>
所以这周真不是人过的生活,上上网,玩玩手机就过关了...<br>
来,话题一转.<br>
找到昨晚11点多,终于找到一个python3以上的,在ubuntu和window下都能工作的连接MYSQL库了...叫pymysql,<br>
在这里还是要感谢code.google.com,python.org都没有的东西你都有..话说python.org废话一大堆...让我看鸟文也就算了,还是充满废话的鸟文.
最近已经有征兆了,google.com经常无法访问,python.org的下载页面也是无法访问,和code.google.com同个时间无法访问.<br>
互联网的2012即将到来.到时白名单一出,我这博客一关,2012就到来了..  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>python3就是个笑话..</title>	
		<pubDate>2011-06-23 14:44:39 +0000 UTC</pubDate>
		<link>http://chenye.org/python3-is-a-joke.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>昨天一口作气把服务器端的socket功能给做出来了.<br>
本以为python再加上MYSQL不是什么难事...结果找了整整一天都没个着落.<br>
MYSQLdb,mydbsql没一个能成功的,window,linux都弄不了.<br>
Python3出到现在都1年多了,连个正规的连接MYSQL库都没有,你个通用性有屌用!<br>
难道python3没落了?尼玛偏偏又用到你socketserver类,转到2.6又不支持.<br>
悲剧了我...  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>开始学python</title>	
		<pubDate>2011-06-22 12:24:57 +0000 UTC</pubDate>
		<link>http://chenye.org/start-to-learn-python.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>基于python的强大,我开始尝试着python,<br>
从昨天开始便看了很多关于介绍python的书,因为我不知道现在学python是不是有必要<br>
书里面把python吹得跟神一样,易用通用简洁易读灵活...<br>
鉴于我只学过AS,PHP,C,C#,VB,其中就属PHP最简易了,那我就拿PHP和python比较下.  </p>

<h4>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>易用:</h4>

<p>如果不从运行性能但从编程效率讲,PHP不用去记住一个个import的类名,而python要用哪个就要import进来哪个.<br>
PHP有非常神奇的魔术方法  </p>

<h4>
<a name="-1" class="anchor" href="#-1"><span class="mini-icon mini-icon-link"></span></a>通用:</h4>

<p>两个都能存在于多个系统,都能用于网页后台解析,都能于C/C++相结合,但如果作为系统编程,python功能要更强大.  </p>

<h4>
<a name="-2" class="anchor" href="#-2"><span class="mini-icon mini-icon-link"></span></a>简洁:</h4>

<p>于php相比,python抛弃了大括号将程序段包括起来的手段,而是使用了缩进.这确实是我第一次见到,虽说他支持用空格和TAB产生缩进,但是一个文件里面两种方式不能混用,要么全部TAB,要么全部用空格,我刚开始不知道,从网上抄得代码是用空格,而且我习惯用TAB,结果就是无论我写什么代码都报错...那叫一个郁闷,if不支持感叹号,但省去了两个括号,就无好坏之分了,习惯就好</p>

<h4>
<a name="-3" class="anchor" href="#-3"><span class="mini-icon mini-icon-link"></span></a>易读:</h4>

<p>暂时没感觉...看什么语言的代码都没这感觉</p>

<h4>
<a name="-4" class="anchor" href="#-4"><span class="mini-icon mini-icon-link"></span></a>灵活:</h4>

<p>书中说的灵活是变量类型的灵活,这也就是传说中的弱类型语言.一个变量,有时候想让他成INT就成int,想变成string就变成string,不需要去强制转换.这往往能提高变成效率,PHP,VB也都这样.这也是我喜欢的.而强类型语言一直让我很反感...<br>
以上是我的一点理解,由于对python接触还不深,说的对不对我就不知道了.要用批判的眼光看这篇文章.<br>
第一个练手的作品就从socket开始吧,这也是我学python的直接原因.动工...  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>Chrome还是有不足</title>	
		<pubDate>2011-06-21 05:33:30 +0000 UTC</pubDate>
		<link>http://chenye.org/chrome-is-not-perfect.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>首先,我第一次用Chrome记得还是高二的时候,版本号就忘了,那时候就发现一个BUG.<br>
当你打开一个带弹窗的网页时,Chrome会把他屏蔽.这是个好功能吧?<br>
嗯,实际上他并没有屏蔽,他只是把弹窗隐藏起来而已,在后台还是在加载那个网页的.<br>
好,眼不见为净.但是现在的弹窗都是1年前刚刚流行的网页游戏.全部都带有背景音乐,这就郁闷了.<br>
有时候打开一个网页.突然就发出了声音,网页一多就不知道是哪个网页发出了声音!!<br>
而且发现了,关闭还特别麻烦,要取消屏蔽再关闭...你说你屏蔽还有什么用,还增加了两个无效点击.<br>
然后Chrome的版本号不断飙升,这个问题都一直没有解决,13还是存在这个问题...<br>
chrome啊,这个小问题什么时候才能解决!!<br>
嗯,我今天比较闲  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>手机码文</title>	
		<pubDate>2011-06-20 20:34:10 +0000 UTC</pubDate>
		<link>http://chenye.org/type-by-m9.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>最近都没有时间回访各位博友了，抱歉抱歉，等我又有空一定会回访的.<br>
这个星期又是实训，搞得在宿舍待的时间很短，一个字就是忙，回到宿舍，又是开始研究socket，幸好，思路已经理出！并发性和扩展性兼备，demo已完成，大概是3个cmd窗口，分别代表手机端服务器端和餐厅客户端，餐厅客户端需要与服务器建立持久链接，一旦链接断开将不能执行查询操作，消息链方向大概是手机发送请求到服务器，服务器根据请求中的餐厅发送给餐厅查询信息，餐厅接受收到后返回给服务器，服务器再发给发出消息的手机端，一般来说，手机端和餐厅客户端是多个的，所以服务器必须要有并发性，可以类比为血红蛋白输送氧气，每走到一个地方，把你要给我的拿走，把我要给你的给你.当然我现在只是实现一个血红蛋白的功能，就这样啦。这可是纯m9码的，m9说用他看无冷，phoetry,和我的博客无压力</p>]]></content:encoded>
		</item>
		
		<item>
		<title>坑了一天的爹啊</title>	
		<pubDate>2011-06-19 12:42:27 +0000 UTC</pubDate>
		<link>http://chenye.org/i-cant-translate.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>好歹今天是父亲节,标题就带一点父亲节的色彩吧~<br>
这两天在研究socket连接PHP版...<br>
首先要建立socket服务端和客户端.目标是将这两个不同的进程连接起来,其实就是为了让两台服务器进行通信.<br>
虽说写了很多PHP但都没涉及过socket.和我平时写的PHP有点不同.<br>
作为服务器端,不能用web方式访问,因为要实时接受其他客户端发送过来的连接,而web方式是有超时时间的,一旦过了超时时间程序没响应,将会返回连接超时,从而程序中断!<br>
要让服务器端程序一直运行下去的方法只有建立一个死循环,显然在退出死循环之前程序不会有响应.,所以不能用web方式访问.要用CMD命令行!
很简单,php.exe程序所在目录+'php.exe'+空格+PHP文件 便可用CMD方式运行PHP文件,python也是和他一样.如果有把PHP的目录设进环境变量里面,就可以直接输入 php d:\a.php运行<br>
建立单连接是完成了,但是我们那个项目需要被连接多台客户端服务器,这就要用到并发了.将每个建立socket连接存入数组,每一次循环都读取每个socket连接中有没毒传递数据过来.这就是并发性了.<br>
当然我是参考<a href="http://blog.csdn.net/shagoo/archive/2011/05/05/6396089.aspx">这里</a>,研究两天也就研究出这点东西出来了.坑爹啊<br>
今天被鄙视了,某某老师说:"陈冶同学要多看看书"...<br>
因为我思路凌乱,心情烦躁.可能上面写的没几个人能看懂...就当做浮云,就当做灰机.该飞的飞,该飘的飘,我不管了...  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>裸考!!!!!</title>	
		<pubDate>2011-06-18 07:03:23 +0000 UTC</pubDate>
		<link>http://chenye.org/have-an-exam-without-anything.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>今天是一年两度的英语四级考试.<br>
我怀着我的一片赤子之心,还有一根2B铅笔上了考场.<br>
裸考,真的是裸考,裸到什么都没复习,收音机都没有带.2B铅笔是临时买的.<br>
收音机都没买就去考四级听起来很扯淡,但实际看来更扯淡.相当于不能听听力了.<br>
幸好我到那里跟老师说我走得太急了,收音机忘记带了,能不能找一个borrow me,老师人好,把唯一的一个借给我了,哈哈,这样就省了20块收音机半年折旧费的钱咯.<br>
题目还是难得要命,听力做完就不想做了.明年再来吧.然后就蒙了几个.完事.<br>
昨天我的M9也终于寄过来了,所以我昨天都没发博,直接在玩手机啦.<br>
感觉是非常顺畅.屏幕也很精细啊,看不到像素点了已经,就是发热有点严重.玩几下就感觉到烫了.后盖是塑料做的所以感觉不太结实.倒是拿在手上感觉很轻,比我原来那台E6轻很多.<br>
买的是翻新版但倒是没看出有什么使用过的痕迹.如果发热问题能解决的话那就是很完美了~<br>
至于死机我觉得对手机是很常见的事但到现在都还没死过<br>
作为玩机一族我感觉M9还是很耐玩的.玩透的话应该还有一个月的时间.  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>月食</title>	
		<pubDate>2011-06-16 07:51:51 +0000 UTC</pubDate>
		<link>http://chenye.org/moon-eat.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>听说昨晚是月食之夜,大概在凌晨4点开始看到,只是我12点就睡了,没办法证实是否发生过<br>
但我早上起来,能肯定昨晚确实发生过月食..因为月亮不见了..</p>]]></content:encoded>
		</item>
		
		<item>
		<title>不该揪着前端不放了</title>	
		<pubDate>2011-06-15 03:53:55 +0000 UTC</pubDate>
		<link>http://chenye.org/about-web-design.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>按照时间发展顺序我是先学网页后台,一直都不亦乐乎,<br>
不过貌似我最近都一直在做前台.自从有了JQ,前端都变得好容易,还记得那时候第一件见到<code>function (){}</code>我就纳闷了为啥函数没有名字.<br>
自我第一次参加网页设计大赛的纯静态版,到前阵子疯狂得做WP主题.做的网站都是前端都是前端.<br>
我有时候在想,不该再这样一直揪着前端不放了.再这样下去我会不伦不类的.前端和后台都是二把刀...<br>
我更希望的是自己写出功能强大的网页而不是华丽的网页.虽然两者可以兼容但是一个人在研究某方面的同时必将会忽视了另一方面.<br>
当初学前端,是为了自己能够做整站的需要,就算是公司招聘PHP程序员,很多都会写着"熟悉使用HTML和Javascript,Css等前端技术",我想我都熟悉了.<br>
以后的重点会放在后台,不单单是PHP,因为大型的网站都是多种语言一起用的.还要学python.打算好了,主学这两款语言<br>
PHP框架还是用Codeigniter方便,再了解一下WebService、Socket...毕竟这两个应用很广泛.<br>
一下子把未来一年要学的东西罗列了出来...嗯,好久没有写整站了.好久没赚M了.<br>
刚刚看到回忆路上上面关于《WordPress评论、留言QQ实时通知通知》,但是需要IM平台.个人还是不喜欢这种第三方非权威的平台.说挂就挂,而且自己没有主动权.,想了一下,用纯网页端很难保证QQ的实时性.因为网页基本可以理解为一个过程,运行完就没了,必须要有软件端给予配合,软件不同,软件可以理解为一个死循环,通过死循环来实现程序的实时性.这个思想在C++上体现得非常明显.<br>
等下研究看看MSN咋样~哈哈  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>玩机</title>	
		<pubDate>2011-06-14 22:55:48 +0000 UTC</pubDate>
		<link>http://chenye.org/playin.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这是我第一篇标题是两个字的文章了.<br>
热烈庆祝google收录上百,陈冶关键字排名第一,google真是每天都有更新啊....请无视我的baidu,<br>
当你想了解一台智能机.最好的方式是上论坛.上面有大量的积累.<br>
想我当时刚接触MOTO的E6的时候,就是上论坛看了很多资料.非主流的linux,只是苦于找不到SDK来开发软件.MOTO握得太紧了.  </p>

<p>引入结束.<br>
已经能够确定买meizuM9了.吸引我的原因有很多,国产的,我喜欢这种直板简洁的外观.简洁一向时我所追求的.性价比高.不再是烂大街的4个按钮,也不是烂大街的Android原版UI,还有就是从高三关注到现在了.那时候就说要出M9了.一直到现在.<br>
其他方面都是没有什么要求.性能绝对符合要求.<br>
有点担心的就是返修率,虽说售后服务不错但我可是忍受不了返厂期间的等待.<br>
虽说还没入手,但心中已经等不及上M9的各大论坛看帖了.又有点小激动了.<br>
看了视频确实感觉很流畅.<br>
暑假有一个项目是关于餐厅系统的,要用到服务器端和android端和网页端相结合.<br>
到时候就用M9练练手吧~~哈哈<br>
最近对WP做的事,无,过几天吧发布文章同步到微博的插件共享出来吧.这次就简单了.无须手工操作,打个勾勾,授下权就OK了.  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>又该发文章了</title>	
		<pubDate>2011-06-13 21:53:46 +0000 UTC</pubDate>
		<link>http://chenye.org/need-a-article-to.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>嗯,昨天经历了第一次一天里面都没发文章.,<br>
并不是没有时间,只是迷茫了,好像学一种新东西,但又不知道学什么,<br>
一天便经历了Google API,tortoiseSVN,vim,到植物大战僵尸,魔兽DOTA,冒险岛,拳皇,进乐团,还有一个双代会的PPT.还有生活大爆炸N集,貌似做了很多事,还完成了新浪腾讯微博的文章同步.<br>
今天便开始实训了.一整天都呆在机房,网络实训.让我们配置IP,配置路由器,其实也没什么好干的,我就上上网,远程我的电脑看看东西.一天就这样过去了.<br>
唯一有点价值的就是下载了M9的SDK,当然还是采用android的SDK,用我电脑运行起来卡的很...看来是四核3.1GHz不够用啊~~<br>
今天还有一件有意义的事就是到wordpress.org申请上传插件成功了(貌似是没有不过的),等下SVN上去..<br>
说起插件就郁闷了,没人会用或者懒得用...但无从下手啊~~<br>
回到第一句话,今天被google K了6页....该发文章了  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>Email留言插件发布</title>	
		<pubDate>2011-06-11 08:14:20 +0000 UTC</pubDate>
		<link>http://chenye.org/email-comment.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>关于该插件:<br>
本站可以做演示站点,就是留言的时候只需要输入Email便可以自动识别你的姓名啊网址啊什么的<br>
想了很久,都没有想出一个可以适用于全部主题的方法.<br>
于是我放下屠刀,将插件定位于提供API让AJAX调用.<br>
这种做法就意味着JQ知识为0的童鞋们在整合方面遇到的困难等于无穷大...<br>
基于这点.力不从心的童鞋可以联系我,我会根据你的主题和你的要求定制.当然,要收手续费.毕竟我的时间还算是很宝贵的.QQ107749121<br>
刚才说到API.嗯,没错,上次研究了新浪微博的API和腾讯微博的API,对他们的机制是有所了解.<br>
所以我就写了这个API,虽然不用复杂的OAuth认证.但依旧很安全,插件内部可以设置允许同个机器新用户注册的最短时间.并使用token作为创建新用户的依据,token只能用一次.用完便消失
数据库防注入的工作做得也很足...<br>
本插件为免费插件,可以自由传播,但不能用于商业用途(啥意思?不清楚.别人总是这样写的..)<br>
倒是欢迎大家随意传播这个插件.虽说貌似入手的门槛比较高.<br>
要说的人话就这么多,下面都不是人话..<br>
email-comment下载地址,把email-comment文件夹上传到wp-content/plugins目录下即可<br>
我已经发布到WP的插件平台上,可以直接搜comment email,第一个便是这个插件<br>
两个API说明的截图...用图片最方便了,图片是我截插件设置文件API说明文档,一定要看  </p>

<h2>
<a name="" class="anchor" href="#"><span class="mini-icon mini-icon-link"></span></a>调用的思路:</h2>

<p>首先要根据用户输入的email来判断这个email是有没有注册,如果没有注册,系统会发送一个token给你,如果已经注册,系统会发送姓名网址给你.判断有没有发送可以先读取status值.status=0为没有注册,status=1为已注册并读取到了信息<br>
status=2说明这个账号在你排除用这种方式登录的id号列表里面.<br>
如果没有注册,需要再进行下面一步就是注册.你要做的是讲用户填写的信息发到另外一个API(如果网址为:<code>www.chenye.org</code>,那API的地址就是<code>www.chenye.org/?action=registerUser&amp;token=xx</code>),需要用到上一步传给你的token,而且每个token只能注册一次,用完消失.
总的来说使用我这个插件还是不难的,关键在于将这个插件加入到你设想的布局当中.这就要涉及到JSON的处理,用JQ动态创建控件,AJAX的熟悉程度.好了各位~动工吧~~~</p>]]></content:encoded>
		</item>
		
		<item>
		<title>防止垃圾留言的思路</title>	
		<pubDate>2011-06-10 05:22:40 +0000 UTC</pubDate>
		<link>http://chenye.org/a-new-idea-for-prevent-rubbish.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>应该很多人遇到过鸟文的垃圾评论吧~
先说发垃圾留言的方法吧:</p>

<ol>
<li>手动发送.自己手动到N个博客上发..顺便脚本精灵录制,下次就用脚本精灵自动做.
有效地解决方法是验证码!内容过滤,这两个不矛盾可以叠加起来.但是用户体验伤不起啊~~这里便不多说.而且WP对垃圾留言内容的检测还是有的</li>
<li>上网上下载发帖机(留言机),输入内容和网址s然后让程序自动发送.一般是通过直接POST到wp-comments-post.php,也可以自己写一个网页端(一般会写这个就不会干这种事啦~~),利用ajax实现
嗯~这就好办多了,除非他专门针对你网站定制一个自动留言软件,不然一般可以躲避90%的攻击(根据你用的方法的非主流程度)</li>
</ol><p>本文主要讲得是应对第二种手法..
简单来说,我们只需修改发表评论的机制,就可以
我是听说过有小墙这一说法的,原理是在提交的from里面添加一个空白的且不可见的文本框,听说机器是会填上所有空白的文本框的,检测到这个空白的文本框有内容就直接~杀!
不足:如果留言机没有天上所有空白的文本框这个机制(多少种类就不清楚了,没用过),无效..
我自己也有几种思路:</p>

<ol>
<li>修改wp-comments-post.php这个文件名字为其他,同时更新那些包含这个名字的其他文件,这个能摆脱那些所谓的针对WP的留言软件(应该有吧~)</li>
<li>服务器在检测到有评论的页面时,会生成一个token,存入session.并且放入form里面,让他和评论一起post到wp-comments-post.php,当wp-comments-post.php接受到post过来的内容时,检查session中是否存在这个token,然后吧session中得token和post过来的token进行比较.相同则过,不同则杀.</li>
<li>这是我现在主题的做法.在用户填好资料之后,自动把资料发送到后台并存为COOKIE,wp-comments-post.php中则改为不接受POST过来的姓名邮箱网站,改为从COOKIE中读取,如果读取不到则~而我保存COOKIE的触发点就在用户填写email后,发送email到后台查询用户名和网址后,顺便写入COOKIE中.这也是我采用这种方法的原因.而且我重写了wp-comments-post.php并改名字了.原来的wp-comments-post.php也被我删除.这个方法还是挺有用的.从换主题到现在倒是没有收到垃圾留言了..或者是他们没发了</li>
</ol><p>呃...我只是简略的说明了一下思路,实际上我没写出来代码是XXX.但我觉得编程重在思想.思想有了,只需要再加一点语法知识就能做出来了.我想过做成插件.时间不足而已...</p>]]></content:encoded>
		</item>
		
		<item>
		<title>评论部分小改造</title>	
		<pubDate>2011-06-09 17:27:09 +0000 UTC</pubDate>
		<link>http://chenye.org/small-develop-comment.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>标题又是七个字?!<br>
主要是有人反映找不到评论框~~这会让人很郁闷的..<br>
改造的地方有:  </p>

<ol>
<li>修复提交错误导致的评论功能直接挂掉..(我忘记传另外一个文件上来了)</li>
<li>对评论框进行修饰~加了"评论框"三个字~~(这算修饰吧~~)</li>
<li>将评论框改为"幽灵形态"...默认评论框在评论的上面,便于评论,
对于习惯性拉到最底下进行评论的人,也有照顾哦~
JS直接判断滚动条达到最低层的某个区域就将评论框拉到最下面~</li>
<li>将围观改回"回复TA"..
都是一些小修小补,然后赶快把Email获取信息整理出来成大众版,用这个配合我的用从COOKIE读取用户信息防止垃圾评论的wp-comments-post.php是恰到好处...</li>
</ol>]]></content:encoded>
		</item>
		
		<item>
		<title>textarea根据内容自适应高度</title>	
		<pubDate>2011-06-09 09:55:41 +0000 UTC</pubDate>
		<link>http://chenye.org/textarea-auto-height.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>好久没发技术文了,这次发一个伪技术文吧<br>
写的是我博客里面的一个功能,textarea根据内容自适应高度<br>
如果你的textarea放在规规矩矩的方框里面就不要用了,会影响美观的<br>
如果是像我一样没有方框把它围住,使用这个功能会给用户带来方便<br>
原理很简单,textarea一般是由固定高度的,一旦内容超过这个固定高度就会产生滚动条事件<br>
这个事件就是我们的触发点,让它自增30高度吧~  </p>

<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">"textarea"</span><span class="p">).</span><span class="nx">scroll</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>  
    <span class="kd">var</span> <span class="nx">height</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span><span class="o">+</span><span class="mi">30</span><span class="p">;</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">height</span><span class="p">(</span><span class="nx">height</span><span class="p">);</span>
<span class="p">});</span>
</pre></div>

<p>木木说:再加一个自定义动画过渡更不错了,
他的代码,我测试是完全可行~</p>

<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">"textarea"</span><span class="p">).</span><span class="nx">scroll</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">stop</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span><span class="kc">true</span><span class="p">).</span><span class="nx">animate</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="s1">'+=30px'</span><span class="p">},{</span><span class="nx">queue</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="mi">300</span><span class="p">});</span>
<span class="p">});</span>
</pre></div>

<p>我之前也想过,但是发现scroll函数会一直被触发执行~那时我的代码应该是少了stop()吧</p>]]></content:encoded>
		</item>
		
		<item>
		<title>话说我也考试了</title>	
		<pubDate>2011-06-08 02:16:30 +0000 UTC</pubDate>
		<link>http://chenye.org/have-a-exam.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>昨天高三高考,今天轮到我期末考.难道这个星期就是传说中的黑色恶魔考试周?<br>
宿舍一帮人早就做好了规划如何在考试中偷天换日大规模集体性作弊.<br>
那就是我坐中间,其他人做两边,以我为中心,负责写和递送纸条...<br>
~...~<br>
可是今天考网络啊!我不会啊!<br>
不过也被将就用了...我再不会,貌似也比他们强,他们更不会...<br>
早上7点,没定闹钟居然全都醒了.为的是去霸位,占一个好位子,考试便无忧~<br>
去到教室,还算早,找一个不前不后的位子4人就坐刚刚好~<br>
然后关于座位的邻居问题...简直是一个黑奴瓜分市场啊~厉害的抢手的身边都被坐满了人.<br>
可笑的是最后老师进来,全部按学号坐~隔行坐~从第一排开始坐~同排俩人至少隔5个座位~(我们是像会议厅那种座位.用木头做的而已)<br>
顿时全部人无语,我还是规规矩矩做我的试卷吧~一般的难度..科是挂不了了  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>又是一年难过时</title>	
		<pubDate>2011-06-07 10:20:39 +0000 UTC</pubDate>
		<link>http://chenye.org/the-time-headly-to-gone-per-year.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>一年当中,今天就属高三生最难过<br>
试卷很难的话,做完心情肯定很糟糕,试卷容易时,又害怕自己犯了一点小错而别人没有<br>
话说陈某某去年也是经历这段时间的淫,最后以本A差1分为结局.,读上了大专,不管怎样,体验过了一次,人生阅历又增加了<br>
大专也不错啊,针对社会上实际的东西多一点,当本科生还在学C语言的时候我们C语言已经教完在教C#.<br>
当然如果我是本科生我就不会这么说啦~我会说大专那群小毛孩连站都没学好就学飞了<br>
人总是要站在自己的角度看问题为自己辩解求得是心理的舒畅<br>
高考咋样我也不说,幸好这不是决定人生的东西.不然我真就CUPER了.<br>
来到大学,专业方面老是有鹤立鸡群的感觉.从初一的VB史记载,学编程到现在有6年了吧,而这里,系里面和我一样长编程史的,就1个<br>
我高三的同桌跟我抱怨加炫耀说他华工那里一个个都强得不像人,个个兴趣多得数不清.真叫一个羡慕.<br>
人应该多看看强人来震慑自己要继续努力.不然就自大了...不想学了.卖弄了<br>
有时间玩游戏还不如多学点东西.这是我时常警示自己的,<br>
学更多的动态网页语言.我的目标是网页全能...  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>测试你的网页速度</title>	
		<pubDate>2011-06-06 18:31:53 +0000 UTC</pubDate>
		<link>http://chenye.org/text-your-page-speed.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>想知道你对网页的优化程度怎样吗?直接的效果就是网页速度!<br>
谷歌提供了一个测试工具,里面会教你怎么优化自己的网站,<br>
第一次去,评分竟然已经到了93...<a href="http://pagespeed.googlelabs.com">这个是链接</a><br>
哈哈哈,可能是跟我纯CSS+JS有关吧~基本没有图片<br>
还有我把出了JQ的JS文件都给压缩成一个文件,那速度~<br>
firefox下也有一个评分工具,叫YSlow,需要装插件,想了解点这里<br>
我的评分是A,<br>
其实这些什么分数啊都是浮云~关键在于主机.烂主机就算加载10K的东西也要等的蛋疼...<br>
我对我现在主机的速度表示不满意....  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>该写一篇新文章</title>	
		<pubDate>2011-06-06 04:19:40 +0000 UTC</pubDate>
		<link>http://chenye.org/it-need-to-write-a-article.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>今天把我前两天赶的新主题给放来了~<br>
大家感觉如何呢?<br>
好想买M9啊.可是米不够~~<br>
开始接单啦~插件定制主题定制全部都接~有意者联系QQ107749121<br>
整站项目做过3个,全部纯手打.技术摆在眼前...<br>
对了,新主题的名字叫rhythm I.韵律~为啥叫韵律呢,大家自己意会吧.<br>
rhythm本身带有节奏的韵味,而我的主题看起来像是参差不齐,木木说,风格统一很难.<br>
确实,太统一则显得单调,太不统一又显得杂乱无章.我这算不算风格统一呢~呵呵~<br>
当然,此次更新不只是风格统一,色调采用#88c701和#6a9b00两个绿色相结合,背景#eee为主<br>
兼容性...蛋疼的东西,Chrome 13,Firefox 5.0,IE9 全支持~依旧向下兼容至IE8,IE7还能看,IE6我没看~分辨率还是在1024*768下满屏~<br>
字体变大了~文章字体达到18px,看了不眼疼了<br>
暂时首页不会加入AJAX无限调用评论的功能.原因是找不到合适的过渡方式,暂且搁置一下.而且貌似也没什么大用途<br>
评论:评论还是采用原来的式样~太有感觉了这个<br>
呃.首页介绍完,介绍文章页<br>
文章页还是采用和首页相同的风格,不同的是没有AJAX读取文章列表,还是没有分页的评论.我觉得是没必要.<br>
我去掉了腾讯微博登陆功能~夏星辰说留言这东西,自由最重要<br>
而我理解的自由,就是方便.于是我产生了一个想法,wiki听过有木有?那个就是自由<br>
博客首创通过输入e-mail自动辨别身份.只要在我这个网站留言过一次并且填写信息,下次来.没有COOKIE?没关系,输入email地址,后台自动查找这个e-mail的名字和网址!<br>
如果找不到的话就让你填写名字和网址咯~都必填..之前在我博客留言的盆友我已经写了个PHP自动把信息保存到表中.不必再填写了<br>
但目前不支持改名,就是填写了,以后就不能改了,如果你想改的话留言给我吧~哈哈<br>
安全问题,一般email是保密的.能不能输入正确看你本事,而且.我们应该多向维基百科学习!把自由留给用户<br>
为了跟风.我也自己做了个AJAX评论.也不管别人怎么实现了,我自己能实现就好~<br>
话说这几天我博客上终于有人来发垃圾留言了.是喜还是忧呢?<br>
但不怕,配合我这个主题,我重写了一遍wp-comments-post.php.把它改成支持AJAX留言,而且对留言方式做了改进<br>
传统的方式是把内容用户名email网址都给POST过去.因为我前面已经做了根据email自动读取用户信息,把用户名email网址都存入了COOKIE.<br>
所以在wp-comments-post.php里根本不需要POST用户名email网址过去!直接从COOKIE里面读!读不到?那这肯定不是普通用户所为~杀!<br>
这种方法能够躲避很多"留言机"的骚扰.<br>
哈哈哈~垃圾留言休想骚扰有技术的站长~  </p>]]></content:encoded>
		</item>
		
		<item>
		<title>cookie session失效的情况下身份验证方法</title>	
		<pubDate>2011-06-06 03:34:59 +0000 UTC</pubDate>
		<link>http://chenye.org/how-to-do-when-cookie-invalid.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>好吧,session和cookie是网站常用的身份验证方法。但是有一天他失效了，该怎么办
uploadify是一个用户界面端的一个异步上传插件,JQUERY和FLASH结合实现异步上传功能
这个确实是一个好功能,在IE下毫无BUG，但是在firefox下，就会出现提交到目标页面后无法读取到COOKIE的情况。
然而我这个网站是需要登录后才有上传的权限的，矛盾。
在codeigniter的用户论坛上，看到一个管理员的回帖
一般情况下，因为诸如uploadify,swfupload采用的都是flash客户端，这样它们产生的useragent与用户使用浏览器的user-agent必然不同。所以，虽然用户登录了你的系统产生了一个session，但是当触发上传程序时会产生另一个session（在上述useragent选项开启的情况下）。
所以，不是session丢失了，而是当你上传文件时，CI为uploadify另外创建了一个session。
解决方案：</p>

<ol>
<li>将$config['sess_match_useragent']设置成FALSE，重试。</li>
<li>（建议）为了安全起见，不建议使用第1条解决方案，而是使用另外的验证方法，比如在每次上传时，在url中附加一个token与服务器端的token比对（比如这个token可以是用户名的hash值）。</li>
</ol><p>解释下，useragent是浏览器标识，token是用来形容那种一次性变量(个人理解)，也可以理解为临时变量
这里我提供一个检测useragent的方法，但需要在CodeIgniter框架下</p>

<div class="highlight"><pre><span class="k">if</span> <span class="p">(</span><span class="nx">$this</span><span class="o">-&gt;</span><span class="nx">agent</span><span class="o">-&gt;</span><span class="nx">is_browser</span><span class="p">()){</span>
    <span class="nx">echo</span> <span class="nx">$agent</span> <span class="o">=</span> <span class="nx">$this</span><span class="o">-&gt;</span><span class="nx">agent</span><span class="o">-&gt;</span><span class="nx">browser</span><span class="p">();</span>
<span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nx">echo</span> <span class="s1">'未知浏览器'</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<p>我把他加在文件头，在读取得到cookie的页面显示的是chrome，对话框里面显示的是在传输成功后服务器端返回的源代码,可见，在文件头显示的是未知浏览器
图片</p>

<p>看了确实有点启发，在cookie暂时实现的情况下，生成特别token也能具有验证效果</p>

<ol>
<li>加密与解密，将用户名和密码加密然后发送到服务器端再进行解密，服务器端可以利用解密后的用户名密码对数据库进行匹配。Codeigniter提供一个encrypt类，只需要提供一个key, 就有加密解密功能，感觉还是比较安全的</li>
<li>只加密，服务器端只负责用同样的手法进行加密在与接受到的值匹配
这种方法其实很普遍，举一个最普遍的用法，在用户注册的时候，会把密码进行MD5加密，这样即使在后台看见了用户的密码，也是加密后的密码。可是系统是怎么实现验证登陆的呢，很简单，在用户输入登陆信息后，用同样的方法对密码进行MD5加密，然后和数据库对比。</li>
</ol><p>或许可以借鉴这种方法，对用户名和密码结合并加密然后发送到服务器端，服务器需要将用户名和密码加密然后比对，但是服务器端要选择哪个用户名和密码呢，毕竟数据库储存大量的用户信息，不可能列出所有用户信息一个一个匹配吧？所以必须再传递一个变量告诉服务器你要和哪个用户进行配对。</p>

<p>但是还有一个小问题，一旦用户得到了这个token(可以从网站源代码中找到，异步传输注定数据会被暴露，我们能做的仅仅是保证被暴露的信息越少越好或者越少人会用越好)，以后只需使用这个token便可直接通过非网页访问方式上传文件(比如直接做一个软件，定时上传，还弄不死你的服务器？)，所以我们需要加一个时间轴，和用户密码结合再加密，这样生成的token就具有了时效性。
相比方案1，方案2多了一个时效性，时效性的周期不能太短不能太长，实在令人有点纠结。</p>

<p>好吧，思路到此，可以开工了</p>]]></content:encoded>
		</item>
		
		<item>
		<title>Javascript获得URL的GET参数</title>	
		<pubDate>2011-06-06 03:17:23 +0000 UTC</pubDate>
		<link>http://chenye.org/javascript-get-url-get.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>其实原理挺简单的，只是我之前都不知道JS能获得当前网址...</p>

<div class="highlight"><pre><span class="c1">//取get变量的值 Val 为要取的变量名称</span>
<span class="kd">function</span> <span class="nx">getParameter</span><span class="p">(</span> <span class="nx">val</span> <span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">re</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span> <span class="p">(</span><span class="nx">val</span> <span class="o">+</span> <span class="s2">"=([^&amp;#]*)"</span><span class="p">,</span><span class="s2">"i"</span><span class="p">)</span>
    <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">re</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(</span> <span class="nx">a</span> <span class="o">==</span> <span class="kc">null</span> <span class="p">)</span>
        <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
    <span class="k">return</span> <span class="nb">decodeURI</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
<span class="p">};</span>
<span class="kd">var</span> <span class="nx">info</span> <span class="o">=</span> <span class="nx">getParameter</span><span class="p">(</span><span class="s2">"info"</span><span class="p">);</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">info</span><span class="p">);</span>
</pre></div>

<p>解释，原理是使用正则表达式匹配出变量的字符串。
在<code>getparameter</code>函数中val是要取的变量名， <code>(val + "=([^&amp;#]*)","i")</code> 表示匹配有等于号加上任意非&amp;且非#字符，"i"表示不区分大小写,a最后得到的是匹配到的括号(表达式的)里面的字符串
页面编码建议用UTF-8，否则会出现乱码
javascript中用于转码的函数有三个，但是各有区别
<code>escape</code>, <code>encodeURI</code>, <code>encodeURIComponent</code>,对应的，他们的解码函数<code>unescape</code>, <code>decodeURI</code>, <code>decodeURIComponent</code>
下面是他们的区别</p>

<ul>
<li>escape不编码字符有69个：*, +, -, ., /, @, _, 0-9, a-z, A-Z</li>
<li>encodeURI不编码字符有82个：! ,# ,$ ,&amp; ,' ,( ,) ,* ,+ ,, ,- ,. ,/ ,: ,; ,= ,? ,@ ,_ ,~ ,0-9 ,a-z ,A-Z</li>
<li>
<p>encodeURIComponent不编码字符有71个：! ,' ,( ,) ,* ,- ,. ,_ ,~ ,0-9 ,a-z ,A-Z</p>

<p>encodeURIComponent比encodeURI多编码了# ?</p>
</li>
<li><p>escape和encodeURI(Component)的编码方式是不同的.同样是中文"中文"</p></li>
<li><p>encodeURI -------- %E4%B8%AD%E6%96%87 ------ 是以UTF-8编码的形式(从每个字符占用3字节看出来)，叫统一资源标示码(URI),从URL读取的字符请用它</p></li>
<li><p>escape　 -------- %u4E2D%u6587 ------ Unicode格式，以后补充，目前没遇到
用途：通过添加标签来弥补使用AJAX造成的无法后退前进的问题，JS可以根据标签来执行操作</p></li>
</ul>]]></content:encoded>
		</item>
		
		<item>
		<title>改进Gravatar头像的获取方法</title>	
		<pubDate>2011-06-05 07:54:18 +0000 UTC</pubDate>
		<link>http://chenye.org/improve-gavatar.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>今天调试主题的时候,Gravatar服务器真是不给力啊
读取了快4-5秒才读完一个30*30的头像...
貌似之前Gravatar是被墙了吧?我那时候还么真正弄WP,所以还不清楚.
貌似上次在phoetry那里看到《Gravatar被墙的三个解决方法》,有兴趣的童鞋可以去看下
我呢,提供一下我自己方法(我专门去确认了我的方法和他的方法是不是相同的...幸好,不同的方法,我可以发博文啦~)
总体思路还是将头像缓存到本地服务器,,如果怕服务器流量超支则慎用!</p>

<p>我的思路~
写一个页面当成Gravatar服务器那样~不懂?
其实PHP很强大的,可以把自己模拟成图片,可以通过img控件直接显示图片.又不懂?
原谅我那拙劣的表达能力...我用代码来说吧...
在img中直接设置src为 <code>/?action=getimg&amp;mail=me@chenye.org</code>, 即</p>

<div class="highlight"><pre><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"/?action=getimg&amp;mail=me@chenye.org"</span> <span class="nt">/&gt;</span>
</pre></div>

<p>在index.php中,如果检测到 <code>$_GET['action']="getimg”</code> 就开工~
先判断文件是否已经被缓存 (<code>fopen</code>)?不存在就从官网上获取(<code>file_get_contents</code>)并缓存,存在的话就从自己的路径读取(<code>header</code>)</p>

<div class="highlight"><pre><span class="nv">$mail</span> <span class="o">=</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'mail'</span><span class="p">])</span> <span class="o">?</span> <span class="nb">md5</span><span class="p">(</span><span class="nx">strtolower</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'mail'</span><span class="p">]))</span> <span class="o">:</span> <span class="s2">""</span><span class="p">;</span>
</pre></div>

<p>判断是否输入了email,因为程序需要从email得到(转换)成读取Gravatar头像的token.如果怕在此泄露用户Email又已经在哪里弄到读取Gravatar头像的token的话可以将这里的 <code>md5(strtolower($_GET['mail’]))</code> 改成$mail,就可以把token直接传入到mail中(例:<code>/?action=getimg&amp;mail=d48cd4d6ded95a9cb5912a32e18f658b</code>)</p>

<div class="highlight"><pre><span class="k">if</span> <span class="p">(</span><span class="nv">$mail</span> <span class="o">==</span> <span class="s2">""</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">header</span><span class="p">(</span><span class="s2">"Location:./avatar/1.png"</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>

<p>如果没有输入email就直接读取默认头像,放在跟目录下/avatar/1.png的文件</p>

<div class="highlight"><pre><span class="k">if</span> <span class="p">(</span> <span class="o">@</span> <span class="nv">$fp</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="s1">'./avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s2">".png"</span><span class="p">,</span> <span class="s2">"r"</span><span class="p">)){</span>
<span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nv">$content</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="s1">'http://1.gravatar.com/avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s1">'?s=30&amp;d=http://www.chenye.org/avatar/1.png&amp;r=g'</span><span class="p">);</span>
    <span class="nb">file_put_contents</span><span class="p">(</span><span class="s1">'./avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s2">".png"</span><span class="p">,</span> <span class="nv">$content</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

<p>如果读取不到本地有缓存该头像,就缓存下来到avatar并以读取Gravatar头像的token为名字加上png后缀名</p>

<div class="highlight"><pre><span class="nx">header</span><span class="p">(</span><span class="s1">'Location:./avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s2">".png"</span><span class="p">);</span>
</pre></div>

<p>既然已经完成了缓存就直接跳转到该图片地址啦~
到这里貌似完美~没有考虑到头像更新的问题~
我们的程序里面应该加一个强制刷新的选项, 即以后想要强制从gravatar读取新图片的话,使用这个url <code>/?action=getimg&amp;mail=me@chenye.org&amp;refresh=1</code> 和前面相比多了一个refresh=1<br>
需要修改的就是在前面判断是否读取的if语句条件</p>

<div class="highlight"><pre><span class="k">if</span> <span class="p">(</span> <span class="o">@</span> <span class="nv">$fp</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="s1">'./avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s2">".png"</span><span class="p">,</span> <span class="s2">"r"</span><span class="p">)){</span>
</pre></div>

<p>改为</p>

<div class="highlight"><pre><span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">'refresh'</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="o">@</span> <span class="nv">$fp</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="s1">'./avatar/'</span><span class="o">.</span><span class="nv">$mail</span><span class="o">.</span><span class="s2">".png"</span><span class="p">,</span> <span class="s2">"r"</span><span class="p">)){</span>
</pre></div>

<p>到这里,貌似是OK~但真的是OK了!起码我认为是OK了!</p>

<p>理论讲完了,给点实际的吧,我把PHP都给写好了~根据时间来自动更新头像,而不是想我上面的想法.因为非插件实在很难找到插入点更新头像,自己的主题就不一样啦.插入点可以自己写的.
PHP中有使用方法,这里也贴出来
将解压后的getgravatar.php放到当前用的主题目录里面 <code>getgravatar</code>,
自动缓存gravatar头像到本地, 请确认在主题的index.php前面加上这段代码引用此文件</p>

<div class="highlight"><pre><span class="nb">define</span><span class="p">(</span><span class="s2">"PATH"</span><span class="p">,</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">"/\/[^\/]*?$/"</span><span class="p">,</span> <span class="s2">""</span><span class="p">,</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s2">"</span><span class="se">\\</span><span class="s2">"</span><span class="p">,</span><span class="s2">"/"</span><span class="p">,</span><span class="k">__FILE__</span><span class="p">)));</span>
<span class="k">include</span> <span class="nx">PATH</span><span class="o">.</span><span class="s1">'/'</span><span class="o">.</span><span class="s2">"getgravatar.php"</span><span class="p">;</span>
</pre></div>

<p>请将默认头像上传到 <code>avatar/</code> 目录并命名为 <code>1.png</code>
使用方法~
将主题中获取头像的语句</p>

<div class="highlight"><pre><span class="o">&lt;</span> <span class="o">?</span><span class="nx">php</span> <span class="k">echo</span> <span class="nx">get_avatar</span><span class="p">(</span> <span class="nv">$comment</span><span class="p">,</span> <span class="mi">40</span> <span class="p">);</span> <span class="cp">?&gt;</span><span class="x"></span>
</pre></div>

<p>改成</p>

<div class="highlight"><pre><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"&lt;? bloginfo('url');?/&gt;/?action=getimg&amp;mail=&lt; ?echo md5(strtolower($comment-&gt;comment_author_email));?&gt;"</span> <span class="na">class=</span><span class="s">"avatar avatar-32 photo"</span> <span class="nt">&gt;</span>
</pre></div>

<p>自己根据需要修改尺寸咯</p>]]></content:encoded>
		</item>
		
		<item>
		<title>话说,我在傲游下悲剧了</title>	
		<pubDate>2011-06-03 10:11:11 +0000 UTC</pubDate>
		<link>http://chenye.org/cup-in-maxthon.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这几天突然发现,原来我在傲游的IE模式下,整个网站变得面目全非
首页的文章列表和文章内容块混在一起,文章页评论参差不齐.</p>在傲游的带领下突破我的CSS又变得猖狂起来~
傲游,你能不坑爹吗?人家正儿八经的IE都没事,你这个伪IE竟然给我不兼容..
好吧,傲游,我承认这阵子我忽略了你,在上大学之前,当我还在用我那破电脑的时候,我一直是用在你的.自从你下面加了哈哈笑话~每次都让我在写网页的时候不由自主得去点他
这极大地降低我的工作效率.到后来你还在里面插播广告..后来,我觉得我应该用一款更简洁的浏览器,chrome.
不过,还是不能忽视傲游..但旧的主题我已经不想改了,所以
人总是喜新厌旧的.既然旧主题不能用了那就不用了.而且旧主题我看得有点厌烦了..看到人家木木改,人家无冷也改,我也想改,听起来有点像军备竞赛~我汗
我打算设计一款新皮肤,我会优化用户UI(包括那蛋疼的submit!),新皮将会用#88c701为主色调,不夹杂#00baff.I call him Rhythm I~中文名叫韵律 第一版
这次会兼容各大浏览器,IE6就尽量达到可以看的程度吧~
目前PS版已经完成,HTM版做了一半,做完就可以改成皮肤了.估计端午节后能做好吧.]]></content:encoded>
		</item>
		
		<item>
		<title>ie,jquery,fancybox大结合</title>	
		<pubDate>2011-06-02 11:06:14 +0000 UTC</pubDate>
		<link>http://chenye.org/ie-jquery-fancybox-join.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>该篇文章理论上是专门IE所做，因为FF和chrome根本没有这些问题，一切正常！在这里先鄙视一下IE各个版本(包括IE10)
由于某种原因，我需要用到图片展示插件，几经测试，发现fancybox1.3.4最好用，但是，在IE下(所有版本)，fancyBOX和jquery1.6不兼容会导致IE即开即死，chrome和FF就正常，刚开始不知道的时候没有用IE测试一直以为很正常。后来换了JQUERY1.5.2才正常
fancybox创建图片展示很简单，创建一个</p>

<div class="highlight"><pre><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{$图片URL}"</span> <span class="na">rel=</span><span class="s">"fancybox"</span><span class="nt">&gt;&lt;/a&gt;</span>
</pre></div>

<p>标签，然后用JQ的选择器选择这些A标签(可多个，就成了画廊，我要的就是着这种效果),执行.fancybox()方法就行
多个图片展示组，就是同一个页面，比如想让图片1-10为一个展示组，11-20为另外一个展示组，只需将1-10的A标签的rel属性设置设置成相同，11-20的A标签设置成另外一个rel值，还有一点要注意的是，同一个rel，不同时间注册fancybox方法， 还是会进入同一个展示组的。最佳方法：</p>

<p>展示组1的rel设置成<code>fancybox_1</code>,展示组2的rel设置成<code>fancybox_2</code>,绑定事件时只需用
$(a[rel*=fancybox]).fancybox就可绑定所有的图片并且自动分组
同类型的图片展示插件也有，但是只能执行一次，执行第二次就出错，而对于AJAX动态创建产生的控件是没有被绑定的，也就是点击不会有图片展示的效果，而fancybox就可以。
于是我就想，就自定义创建一个</p>

<div class="highlight"><pre><span class="nt">&lt;gallery</span> <span class="na">pic=</span><span class="s">'pic1.jpg;pic2.jpg'</span><span class="nt">&gt;&lt;/gallery&gt;</span>
</pre></div>

<p>控件，然后用JQ从这个控件获取要加载的图片数目，再动态创建出A标签，再执行fancybox。但是可能是因为自定义的缘故，在chrome和ff下正常append进入，在IE加就不能添加了，报错！而且JQ1.5.2在IE下不能通过直接文本创建控件，比如</p>

<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s1">'body'</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s1">'&lt;a href="javascript:;"&gt;超链接&lt;/a&gt;'</span><span class="p">);</span>
</pre></div>

<p>这行代码在IE(任何版本)下报错，但在Chrome和ff下正常...，只能麻烦一点</p>

<div class="highlight"><pre><span class="kd">var</span>  <span class="nx">a</span> <span class="o">=</span> <span class="p">[]</span> <span class="p">;</span><span class="c1">//定义一个对象</span>
<span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'&lt;a href="javascript:;"&gt;超链接&lt;/a&gt;'</span><span class="p">;</span><span class="c1">//向a的添加一个A标签，可重复添加</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'body'</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">''</span><span class="p">));</span><span class="c1">//a.join('')代表将a的每个子对象用无字符(单引号内的字符)连接起来成字符串</span>
</pre></div>

<p>这样就能兼容了，但是在IE下，对于gallery这个自定义控件，上述方法仍然报错！无奈只能用after添加在后面。</p>]]></content:encoded>
		</item>
		
		<item>
		<title>字体的兼容性</title>	
		<pubDate>2011-06-02 00:31:32 +0000 UTC</pubDate>
		<link>http://chenye.org/fonts-compatible.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>经测试，在chrome下最小的字体是12px，而IE下没有这个限制，所以如果把字体设为低于12px的话，会照成浏览器不兼容的现象...
中文(雅黑字体)在11px显示已经不成样了(1920*1080分辨率)，但英文的底线还可以到10px
我们可以在body标签内加上webkit特有的 <code>-webkit-text-size-adjust:none;</code>
如</p>

<div class="highlight"><pre><span class="nt">body</span> <span class="p">{</span>
    <span class="o">-</span><span class="n">webkie</span><span class="o">-</span><span class="k">text</span><span class="o">-</span><span class="k">size</span><span class="o">-</span><span class="n">adjust</span><span class="o">:</span><span class="k">none</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<p>还有，字体的单位常用的有px,em,%，浏览器默认的字体大小是16px，即<code>1em=16px,100%=16px;</code>
需要强调的是em，em表示当前容器字体大小的比例，相对的，如果多层嵌套div，比如第一层div的字体大小是<code>0.5em</code>,第二层div的字体大小是<code>0.5em</code>,那么第二层div的字体大小将为<code>16*0.5*0.5=4px</code></p>]]></content:encoded>
		</item>
		
		<item>
		<title>有人回复时邮件通知我</title>	
		<pubDate>2011-05-31 05:29:47 +0000 UTC</pubDate>
		<link>http://chenye.org/mail-when-reply.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>继ctrl+enter之后的又一个博客必备功能
其功能可译为，告诉那个人，我回复你了，快来我网站看我吧....
插件名称：comment-reply-notification
配合这个插件的，我还装了 Configure SMTP，来配置WP的邮件系统
在小张的主机，这个功能一直好好的。但是前几天，突然连接不了SMTP服务器了(可能仅仅是我这个服务器的问题吧).
qq的不行,gmail的也不行.
提示是超时吧然后每次提交评论都会卡很久，因为他发邮件的触发事件是post_comment，每次都要等到检测到超时了才继续。
好吧，这个功能我暂时关了吧
今天.上了localhost的cpanel.</p>

<p>手动配置了一个电子邮件账户.然后在SMTP服务器上填上localhost测试邮件时提示，
data not <a href="mailto:accepted.me@chenye.org">accepted.me@chenye.org</a>
<a href="mailto:me@chenye.org">me@chenye.org</a>是我的邮箱
几经周折（这个过程就不讲述），发现里面有一个Sender e-mail(通俗讲就是假名)，我设置了一个非发送邮件的地址，改成和发送邮件地址一致就行了（SMTP username）
故事一般到这里是划上了一个完美的句号..</p>

<p>呃.未完.
这种方法无法发送邮件到QQ企业邮局创建的chenye.org结尾的邮箱.
这种做法导致我一个域名解析到两个
我猜原因是。
localhost端邮局检测到chenye.org的邮箱是绑定在他那里的，但是在他那里找不到这个邮箱，所以回执找不到，或者他根本没发，检测不到内置有这个账号就直接回执，或许他发了就送到QQ邮局这边来了.
幸好，测试其他用QQ邮局的邮箱还正常！如果问题只针对这个域名的邮箱的话，我还是无所谓的，总比不能发强。
解决方法：无</p>]]></content:encoded>
		</item>
		
		<item>
		<title>谈ctrl+enter提交那些事</title>	
		<pubDate>2011-05-30 20:52:37 +0000 UTC</pubDate>
		<link>http://chenye.org/talking-about-ctrl-enter.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>最近逛了很多博客，发现都有Ctrl+Enter提交评论功能...你也有吧？
小弟OUT啦，没有！
想当初，第一次遇到这功能的是在QQ2000上看见的吧，一直用得挺习惯的。秉承着自己动手，丰衣足食的意念，我就亲手添加这个小功能吧。
我的思路是，当ctrl键keydown时,变量a=1,当ctrl键keyup时，变量a=0;当enter键keypress时，且a==1时，submit!
然后开工，测得ctrl的keycode为17，enter的keycode为13,然后就.........未完！</p>

<p>好吧，其实真正上没有这么麻烦..我承认我又OUT了，在我同时按下ctrl+enter键时，竟然发现keycode=10 !! 按ASCII码算是\r ?!
不理了，绕了一圈，直接</p>

<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">"textarea"</span><span class="p">).</span><span class="nx">keypress</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="mi">10</span><span class="p">)</span> <span class="nx">submit</span><span class="p">();</span><span class="c1">//提交</span>
<span class="p">})</span>
</pre></div>

<p>我OUT啦，我OUT啦
感谢phoetry兄的指点。上面的效果仅仅是chrome和ie有效，而当时我也仅仅刚刚好测试了chrome和ie...ff和opera不兼容。
新代码新代码...</p>

<div class="highlight"><pre><span class="nx">$</span><span class="p">(</span><span class="s2">"textarea"</span><span class="p">).</span><span class="nx">keypress</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">ctrlKey</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">which</span> <span class="o">==</span> <span class="mi">13</span> <span class="o">||</span> <span class="nx">e</span><span class="p">.</span><span class="nx">which</span> <span class="o">==</span> <span class="mi">10</span><span class="p">)</span> <span class="nx">submit</span><span class="p">();</span> <span class="c1">//提交</span>
<span class="p">})</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>呃…网页打开速度的研究</title>	
		<pubDate>2011-05-30 12:53:07 +0000 UTC</pubDate>
		<link>http://chenye.org/open-speed-study.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>观点：如果加载JS,CSS文件过多，会拖慢网页打开的速度</p>

<p>这个是加载很多JS文件的请求列表，耗时1.3秒</p>

<p>这个是把所有JS文件合并一起读取的请求列表，耗时0.878秒
以上文件读取JS的文件大小都相同，也证明了加载JS文件太多会影响到速度
浏览器读取网页时是先读取目标文件，然后解析，这时候页面已经显示出来了，此时按照源代码里面指向的JS或CSS或图片文件，再一个一个下载执行。</p>]]></content:encoded>
		</item>
		
		<item>
		<title>关于TAGS的自动提取</title>	
		<pubDate>2011-05-28 17:13:22 +0000 UTC</pubDate>
		<link>http://chenye.org/pick-up-tags-auto.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>以前用过DISCUZ，对他里面的自动获取TAGS(关键词)表示有点神奇，难道他是通过语法来匹配的吗？我感觉不太可能，可能是我对中文的语法不熟悉吧(English too)，或许别人可行，细心的盆友会发现,在Chrome下,双击汉字会自动选中一个词哦~比如刚才那句话,你在"汉字"中间处或者"汉"上面和"字"上面点击,都会自动选中"汉字"姑且作为一种方案的,而"会"字无论你在哪点都只会选中"会".这个功能在IE下可是没有的,不信去试试~
wordpress貌似没有自动获取标签的功能~有没有插件我就不清楚了,一堆鸟文也懒得看了</p>

<p>然后在网上搜了一下，发现一种比较蠢得方法，就是把一些可能出现的关键词先集成到JS文件里面，然后就计算一些权重啊什么的再列出来，确实可以下一个定义，任何需要手工完成的方法都称为蠢方法。不过可以借鉴的是他里面对关键词的算法,不过顺着这个思路，可以把这个方法进行改进。
可以把关键词库的添加任务交给用户，怎么说，思路是这样，程序负责从数据库读取关键词列表然后用JS进行统计，要是找不到用户期待的关键词用户可能会手动自己添加，程序要做的就是把用户手动添加的关键词加入数据库，当然需要做一些保留字的过滤，这样下次其他用户如果文章里面有这个关键词就可以自动识别出来。</p>

<p>当然,提出这个问题也仅仅是讨论而已,博客程序这种东西是不需要自动获取TAG的.只是我上段时间写的一个项目需要用到关键词的功能.却没办法让他更加智能化.智能化的网页才是以后用户真正需要的吧</p>

<p>话题一转~话说今天忙了一整天,新主题的外观已经完成,并且已经整合到WP当中.剩下的就是一些功能的整合.不变的是创意与个性~还有AJAX文章调用~rhythm(韵律)这个名字不是白叫的哦...</p>

<p>今天端午节放假的第一天,祝大家有粽子吃~呵呵</p>]]></content:encoded>
		</item>
		
		<item>
		<title>PHP字符串截取-正则版</title>	
		<pubDate>2011-05-28 10:58:23 +0000 UTC</pubDate>
		<link>http://chenye.org/php-substr-preg.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>网页编码有多种...
导致字符串截取需要针对不同编码进行截取
以前总是用GBK,后来发现,GBK编码通用性不强,FLASH和Javascript都使用UTF8，用GBK就需要不断的转换编码，感觉挺麻烦的，
所以,以后就改用UTF8吧！
SO，就只摘录了UTF8截取函数。
PS：一个UTF8字符占用3个字符...用strlen时显示的数目是预期值的3倍,切记切记!</p>

<div class="highlight"><pre><span class="kd">function</span> <span class="nx">bsubstr</span><span class="p">(</span><span class="nx">$str</span><span class="p">,</span> <span class="nx">$len</span><span class="p">,</span> <span class="nx">$from</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
<span class="k">return</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s1">'#^(?:[\x00-\x7F]|[\xC0-\xFF][\x80-\xBF]+){0,'</span><span class="p">.</span><span class="nx">$from</span><span class="p">.</span><span class="s1">'}'</span><span class="p">.</span>
<span class="s1">'((?:[\x00-\x7F]|[\xC0-\xFF][\x80-\xBF]+){0,'</span><span class="p">.</span><span class="nx">$len</span><span class="p">.</span><span class="s1">'}).*#s'</span><span class="p">,</span>
<span class="s1">'$1'</span><span class="p">,</span><span class="nx">$str</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

<p>码采用正则表达式替换。感觉看了这么多正则，连这个也没看懂，惭愧啊，有空再来研究研究，目前忙，呵呵</p>

<h3>
<a name="201144" class="anchor" href="#201144"><span class="mini-icon mini-icon-link"></span></a>2011/4/4</h3>

<p><code>[x00-x7F]|[xC0-xFF][x80-xBF]</code>三个代表的是一个UTF8字符,也就是所谓的占用3个字符.
<code>(?:[x00-x7F]|[xC0-xFF][x80-xBF]+)</code> 是断言语句,表示要找到的字符串需要<code>[x00-x7F]|[xC0-xFF][x80-xBF]</code>开头,也就是所谓的从第N个字符截取,So,<code>{0,'.$from.'}</code>可以理解为要跳过N个字符,整句连起来,<code>^(?:[x00-x7F]|[xC0-xFF][x80-xBF]+){0,'.$from.'}'</code>就要先找到从开头开始计算,连续N个UTF8字符,注意 符合 (?:)  断言语句的字符串是不列入捕捉的.后面同理啦
还有,一般我使用的是用  "//"(不包含括号)来讲正则表达式包含起来,而这里是用##,并且不能改成//,我猜这是使用 <code>[x00-x7F]|[xC0-xFF][x80-xBF]</code> 这些匹配符有关吧.具体也说不出有什么名堂.因为今天又要用到这个函数,所以...就来补充一下</p>]]></content:encoded>
		</item>
		
		<item>
		<title>网页编程的一些建议</title>	
		<pubDate>2011-05-28 09:27:18 +0000 UTC</pubDate>
		<link>http://chenye.org/advise-for-web-programme.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>以下是我总结最近用到的一些工具，仅仅建议，因为我就是这样做的:</p>

<ul>
<li>IDE：Notepad ++</li>
<li>windows下Apache+PHP+MYSQL环境搭建：APMserv</li>
<li>调试用的浏览器：越多越好，推荐，chrome(firefox4.0同左，但带有硬件加速，就可能出现FF不卡而用其他浏览器(chrome)卡的情况)</li>
<li><p>Javascript框架：JQUERY(公认的)</p></li>
<li><p>PHP框架：Codeigniter（简称CI）</p></li>
<li><p>上传文件用插件：uploadify(前提是有用到jquery)</p></li>
<li><p>网页编辑器：CKeditor</p></li>
<li><p>PHP缓存机制：memcache</p></li>
<li><p>文档转换用软件：FLASHPAPER，(兼容性超差，但别无选择)</p></li>
<li><p>文档阅读：flexpaper(仅适用于用pdf2swf转换成的文档)</p></li>
<li><p>图片展示JS：fancybox（理由：用于大图片查看，而且可以动态对图片进行展示处理-shadowbox效果同上，但无法处理JS动态创建的新空间）</p></li>
</ul><p>好了，暂时就想到这么多</p>]]></content:encoded>
		</item>
		
		<item>
		<title>解决一个使用AMPServ建立虚拟主机的session权限问题</title>	
		<pubDate>2011-05-28 08:50:15 +0000 UTC</pubDate>
		<link>http://chenye.org/ampserv-session-power.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>面对一个电脑上的多个网页,建立虚拟主机是一个很好的归类方法
一般为了方便,我是使用APMSERV建立虚拟主机的,但是在建立phpmyadmin的虚拟主机时,无法正常运行,而是显示</p>

<pre><code>    Warning: session_start() [function.session-start]: open_basedir restriction in effect. File(C:\WINDOWS\TEMP) is not within the
    allowed path(s): ….
</code></pre>

<p>警告说明,是session_start()这个函数执行出现异常,原因是文件不允许被写入C:\WINDOWS\TEMP
设置允许写入文件的路径是open_basedir参数
找到apache目录下的conf/apmserv/vhost.conf,配置虚拟主机信息
找到open_basedir在后面加上C:\WINDOWS\TEMP</p>

<p>如
PS:我的设置的域名是fd.cn,目录在D:/Site/www/htdocs/fl_document，</p>

<div class="highlight"><pre><span class="nt">&lt;VirtualHost</span> <span class="err">*:80</span><span class="nt">&gt;</span>
ServerName fd.cn
DocumentRoot "D:/Site/www/htdocs/fl_document"
<span class="nt">&lt;Directory</span> <span class="err">"D:/Site/www/htdocs/fl_document"</span><span class="nt">&gt;</span>
Options FollowSymLinks IncludesNOEXEC Indexes
DirectoryIndex index.html index.htm default.htm index.php default.php index.cgi default.cgi index.shtml index.aspx default.aspx
AllowOverride None
Order Deny,Allow
Allow from all
php_admin_value open_basedir "D:/Site/www/htdocs/fl_document/;D:/Site/tmp/uploadtemp/;C:\WINDOWS\TEMP;"
<span class="nt">&lt;/Directory&gt;</span>
<span class="nt">&lt;/VirtualHost&gt;</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>网页设计大赛-前奏</title>	
		<pubDate>2011-05-28 08:46:48 +0000 UTC</pubDate>
		<link>http://chenye.org/before-website-design-games.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这个是比赛作品的投票网站的banner</p>

<p>我PS的图还是缺乏创意...哎,失意啊失意</p>

<p>顺便插一句,这个比赛我也参加了，主要是不想参加了，只是被威逼利诱了几下就...
比赛分专业组和非专业组，专业组就是所谓的动态网页，非专业组就是静态的。</p>

<p>做网站也一两年了，其实静态和动态是结合在一起的，出色的前台和强大的后台的同样重要的，
我参加了非专业组，听说计算机系是不给参加非专业组的，然后我例外了，再然后我就成了计算机系唯一一个上非专业组决赛的人了</p>

<p>不参加专业组主要是怕麻烦，不想浪费太多的精力，毕竟这仅仅是校级的比赛，更夸张的说是计算机系的比赛，因为专业组进决赛的都是计算机系的，然后我就不去凑热闹了，呵呵</p>]]></content:encoded>
		</item>
		
		<item>
		<title>用JQuery执行JS代码</title>	
		<pubDate>2011-05-28 08:39:18 +0000 UTC</pubDate>
		<link>http://chenye.org/jquery-exec-jscode.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>JQ全名jquery,一个javascript的框架.
JQ内部集成了一个可以执行文本形式的JS代码,但是没有在API中列出来
于是,此篇文章变为了,备忘录</p>

<div class="highlight"><pre><span class="kd">var</span> <span class="nx">code</span><span class="o">=</span><span class="s2">"alert('JS代码在这里')"</span><span class="p">;</span>
<span class="nx">jQuery</span><span class="p">.</span><span class="nx">globalEval</span><span class="p">(</span><span class="nx">code</span><span class="p">)</span> <span class="c1">//将会弹出对话框</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>Uploadify即开即用DEMO</title>	
		<pubDate>2011-05-08 17:46:10 +0000 UTC</pubDate>
		<link>http://chenye.org/uploadify-simpledemo.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>在网上找了很久都没有找到可以现套现用的DEMO,官方提供下载的ZIP里面却没有示例,无奈,只能从官网上找到DEMO,一步一步精简</p>

<div class="highlight"><pre><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"uploadify/style.css"</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">media=</span><span class="s">"screen"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"uploadify/jquery.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"uploadify/swfobject.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"uploadify/jquery.uploadify.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;body</span> <span class="nt">&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"basic-demo"</span> <span class="na">class=</span><span class="s">"demo"</span><span class="nt">&gt;</span>

<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
<span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">'#file_upload'</span><span class="p">).</span><span class="nx">uploadify</span><span class="p">({</span>
        <span class="s1">'uploader'</span> <span class="o">:</span> <span class="s1">'uploadify/uploadify.swf'</span><span class="p">,</span>
        <span class="s1">'script'</span> <span class="o">:</span> <span class="s1">'uploadify/uploadify.php'</span><span class="p">,</span>
        <span class="s1">'cancelImg'</span> <span class="o">:</span> <span class="s1">'uploadify/cancel.png'</span><span class="p">,</span>
    <span class="p">});</span>
<span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"demo-box"</span><span class="nt">&gt;</span>
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"file_upload"</span> <span class="na">type=</span><span class="s">"file"</span> <span class="na">name=</span><span class="s">"Filedata"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;p&gt;&lt;a</span> <span class="na">href=</span><span class="s">"javascript:$('#file_upload').uploadifyUpload()"</span><span class="nt">&gt;</span>Upload Files<span class="nt">&lt;/a&gt;&lt;/p&gt;</span> 
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>

<p>将下载的东东放到uploadify目录就行了
还缺一个style.css</p>

<div class="highlight"><pre><span class="nf">#basic-demo</span> <span class="nc">.uploadifyQueueItem</span> <span class="p">{</span>
    <span class="k">background-color</span><span class="o">:</span> <span class="m">#F5F5F5</span><span class="p">;</span>
    <span class="k">border</span><span class="o">:</span> <span class="m">2px</span> <span class="k">solid</span> <span class="m">#E5E5E5</span><span class="p">;</span>
    <span class="k">font</span><span class="o">:</span> <span class="m">11px</span> <span class="n">Verdana</span><span class="o">,</span> <span class="n">Geneva</span><span class="o">,</span> <span class="k">sans-serif</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
    <span class="k">padding</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
    <span class="k">width</span><span class="o">:</span> <span class="m">350px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#basic-demo</span> <span class="nc">.uploadifyError</span> <span class="p">{</span>
    <span class="k">background-color</span><span class="o">:</span> <span class="m">#FDE5DD</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="k">border</span><span class="o">:</span> <span class="m">2px</span> <span class="k">solid</span> <span class="m">#FBCBBC</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#basic-demo</span> <span class="nc">.uploadifyQueueItem</span> <span class="nc">.cancel</span> <span class="p">{</span>
    <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#basic-demo</span> <span class="nc">.uploadifyQueue</span> <span class="nc">.completed</span> <span class="p">{</span>
    <span class="k">background-color</span><span class="o">:</span> <span class="m">#E5E5E5</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#basic-demo</span> <span class="nc">.uploadifyProgress</span> <span class="p">{</span>
    <span class="k">background-color</span><span class="o">:</span> <span class="m">#E5E5E5</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
    <span class="k">width</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
<span class="p">}</span>

<span class="nf">#basic-demo</span> <span class="nc">.uploadifyProgressBar</span> <span class="p">{</span>
    <span class="k">background-color</span><span class="o">:</span> <span class="m">#0099FF</span><span class="p">;</span>
    <span class="k">height</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
    <span class="k">width</span><span class="o">:</span> <span class="m">1px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>PHP的检查文件存在问题</title>	
		<pubDate>2011-05-08 17:45:27 +0000 UTC</pubDate>
		<link>http://chenye.org/php-files-exists.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>这个问题确实折腾了我近一个小时,有必要说一说,以免以后忘了。健忘啊健忘</p>

<p>PHP中检查文件存在的方法有多种，一种的file_exists,还有一种是fopen</p>

<p>file_exists只是单纯也仅仅判断文件是否存在.仅返回布尔值</p>

<p>而fopen这个函数在很多编程语言里面都能遇到,直接读取文件的资源信息</p>

<p>我遇到的问题就是,用PDF2SWF转换文件之后,用file_exists判断文件是否存在时提示不存在,而事实上存在</p>

<p>同样,用fopen($path,"r")同样的事实返回同样的结果,但是如果判断文件语句和PDF2SWF不同时执行的话,则返回存在</p>

<p>如果fopen($path,"a")的话就能返回真了了,但是这个的意思是,如果检查文件是否存在,不存在就尝试创建新文件...</p>]]></content:encoded>
		</item>
		
		<item>
		<title>关于Javascript的return false;</title>	
		<pubDate>2011-05-08 09:44:33 +0000 UTC</pubDate>
		<link>http://chenye.org/js-return-false.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>由于时间紧急，先进入重点</p>

<p>当多层DIV层叠时，如果点击重叠处，发现ONCLICK事件会穿透所有层，也就是每一层的ONCLICK事件都会执行一遍。执行的顺序跟使用JQUERY绑定ONCLICK事件的顺序无关，执行的顺序始终从最上层往下。</p>

<p>问题来了，当只想让最上层的DIV接受ONCLICK而下层接收不到ONCLICK该怎么办。俗称把ONCLICK事件吃掉。没想到用return false可以达到这个效果，就这样，续待....</p>]]></content:encoded>
		</item>
		
		<item>
		<title>Codeigniter的模板函数</title>	
		<pubDate>2011-05-04 15:59:26 +0000 UTC</pubDate>
		<link>http://chenye.org/codeigniter-template.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>写策划写数据库结构写公共类写了一天，codeigniter的框架总体还不错，只是没有把htm代码和php代码分开是一大失误，框架类产品本身的价值在于统一了格式，方便统一代码而适合多人合作写代码，而php代码与htm代码分开则避免网页美工和后台程序代码堆在一起，有利于他人修改和阅读，discuz就是采用这种模式，如果要分开，必须实现htm文件能执行php代码，看上去是不可能，但其实很简单，于是，我为codeigniter写了一个template函数，思路为，先读取模板文件(htm)的内容，存入变量，用正则将特定格式的代码替换成真正的php代码，并另存为php代码文件并include进来，就是说，把我们原本应该亲手做的事推给代码做，我们只需写html代码，这个函数已写完!当然，此思路参考自discuz,哈哈­</p>

<p>codeigniter官方说，PHP伪代码会带来性能的下降，与CI的快捷简便原理想冲突，我想，当把template的文件有效期限设置长一点，因为本身大型的网站修改不是很频繁，</p>

<div class="highlight"><pre><span class="c1">// --------------------------------------------------------------------</span>

<span class="cm">/**</span>
<span class="cm"> * 模板机制</span>
<span class="cm"> *</span>
<span class="cm"> * 该函数可以先将htm模板文件转换成PHP的文件</span>
<span class="cm"> *</span>
<span class="cm"> */</span> 
<span class="c1">// --------------------------------------------------------------------</span>
<span class="kd">function</span> <span class="nx">template</span><span class="p">(</span><span class="nx">$file</span><span class="p">){</span>
    <span class="nx">$views_folder</span> <span class="o">=</span> <span class="s2">"views"</span><span class="p">;</span>
    <span class="nx">$template_folder</span> <span class="o">=</span> <span class="s2">"template"</span><span class="p">;</span>
    <span class="nx">$cachetime</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
    <span class="nx">$tplfile</span><span class="o">=</span><span class="nx">$file</span><span class="p">;</span>
    <span class="c1">//------------------------------------------------路径处理</span>
    <span class="c1">//自动加上后缀名</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">basename</span><span class="p">(</span><span class="nx">$file</span><span class="p">)</span> <span class="o">==</span> <span class="nx">basename</span><span class="p">(</span><span class="nx">$file</span><span class="p">,</span> <span class="s1">'.htm'</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">$tplfile</span><span class="p">.</span><span class="o">=</span><span class="s2">".htm"</span><span class="p">;</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="nx">$file</span> <span class="o">=</span> <span class="nx">basename</span><span class="p">(</span><span class="nx">$tplfile</span><span class="p">,</span><span class="s1">'.htm'</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">//如果根目录不存在该文件则到common文件夹下查找!方便引用common内的文件</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="err">@</span><span class="nx">$fp</span> <span class="o">=</span> <span class="nx">fopen</span><span class="p">(</span><span class="nx">APPPATH</span><span class="p">.</span><span class="nx">$views_folder</span><span class="p">.</span><span class="s2">"/"</span><span class="p">.</span><span class="nx">$template_folder</span><span class="p">.</span><span class="s2">"/"</span><span class="p">.</span><span class="nx">$tplfile</span><span class="p">,</span><span class="s2">"r"</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">$file</span><span class="o">=</span><span class="s1">'common/'</span><span class="p">.</span><span class="nx">$file</span><span class="p">;</span>
        <span class="nx">$tplfile</span><span class="o">=</span><span class="s1">'common/'</span><span class="p">.</span><span class="nx">$tplfile</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">$cachefile</span> <span class="o">=</span> <span class="nx">BASEPATH</span><span class="p">.</span><span class="s2">"template/"</span><span class="p">.</span><span class="nx">str_replace</span><span class="p">(</span><span class="s2">"/"</span><span class="p">,</span><span class="s2">"_"</span><span class="p">,</span><span class="nx">$file</span><span class="p">).</span><span class="s2">".tpl.php"</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="err">@</span><span class="nx">$fp</span> <span class="o">=</span> <span class="nx">fopen</span><span class="p">(</span><span class="nx">$cachefile</span><span class="p">,</span><span class="s2">"r"</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">time</span><span class="p">()</span> <span class="o">-</span> <span class="nx">filemtime</span><span class="p">(</span><span class="nx">$cachefile</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nx">$cachetime</span><span class="p">){</span><span class="c1">//已经存在了,并且时间未过,包括进来</span>

    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="c1">//----------------------如果缓存文件不存在或者过期则写入新文件 </span>
        <span class="nx">$tplfile</span><span class="o">=</span><span class="nx">APPPATH</span><span class="p">.</span><span class="nx">$views_folder</span><span class="p">.</span><span class="s2">"/"</span><span class="p">.</span><span class="nx">$template_folder</span><span class="p">.</span><span class="s2">"/"</span><span class="p">.</span><span class="nx">$tplfile</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="err">@</span><span class="nx">$fp</span> <span class="o">=</span> <span class="nx">fopen</span><span class="p">(</span><span class="nx">$tplfile</span><span class="p">,</span><span class="s2">"r"</span><span class="p">)){</span>
            <span class="nx">echo</span> <span class="s2">"Cannot open template file \"{$tplfile}\" , by [system/libraries/loader.php]"</span><span class="p">;</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="err">@</span><span class="nx">fread</span><span class="p">(</span><span class="nx">$fp</span><span class="p">,</span> <span class="nx">filesize</span><span class="p">(</span><span class="nx">$tplfile</span><span class="p">));</span>
        <span class="nx">fclose</span><span class="p">(</span><span class="nx">$fp</span><span class="p">);</span>
        <span class="c1">//处理文件</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{loop\\s+?(\\$\\S*)\\s+?(\\$\\S*)\\s*?}.*\\n/"</span><span class="p">,</span><span class="s2">"&lt; ?if(is_array(\\1)){foreach (\\1 as \\2){?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{loop\\s+?(\\$\\S*)\\s+?(\\$\\S*)\\s+?(\\$\\S*)\\s*?}.*\\n/"</span><span class="p">,</span><span class="s2">"&lt; ?if(is_array(\\1)){foreach (\\1 as \\2 =&gt; \\3){?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{\/loop}/"</span><span class="p">,</span><span class="s2">"&lt; ?}}?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{template\\b\\s+(.*)\\b\\s*?}/"</span><span class="p">,</span><span class="s1">'&lt; ?include $this-&gt;load-&gt;template("\\1");?&gt;'</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{eval\\s+(.*?)}/"</span><span class="p">,</span><span class="s1">'&lt; ?\\1;?&gt;'</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{(\\$\S+?)}/"</span><span class="p">,</span><span class="s2">"&lt; ?=\\1?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{if\\s+(.*?)\\s*?}/"</span><span class="p">,</span><span class="s2">"&lt; ?if (\\1) {?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span> 
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{elseif\\s+(.*?)\\s*?}/"</span><span class="p">,</span><span class="s2">"&lt; ?}elseif (\\1) {?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{else}/"</span><span class="p">,</span><span class="s2">"&lt; ?}else{?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="nx">$template</span> <span class="o">=</span> <span class="nx">preg_replace</span><span class="p">(</span><span class="s2">"/{\/if}/"</span><span class="p">,</span><span class="s2">"&lt; ?}?&gt;"</span><span class="p">,</span><span class="nx">$template</span><span class="p">);</span>
        <span class="c1">//处理文件结束</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="err">@</span><span class="nx">$fp</span> <span class="o">=</span> <span class="nx">fopen</span><span class="p">(</span><span class="nx">$cachefile</span><span class="p">,</span> <span class="s1">'w'</span><span class="p">))</span> <span class="p">{</span>
            <span class="nx">echo</span> <span class="s2">"Cannot write template file \"{$cachefile}\" , by [system/libraries/loader.php]"</span><span class="p">;</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">flock</span><span class="p">(</span><span class="nx">$fp</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
        <span class="nx">$template</span><span class="o">=</span><span class="s2">"&lt; ?if(!defined('BASEPATH'))exit('No direct script access allowed');?&gt;"</span><span class="p">.</span><span class="nx">$template</span><span class="p">;</span>
        <span class="nx">fwrite</span><span class="p">(</span><span class="nx">$fp</span><span class="p">,</span> <span class="nx">$template</span><span class="p">);</span>
        <span class="nx">fclose</span><span class="p">(</span><span class="nx">$fp</span><span class="p">);</span>
    <span class="p">}</span> 
    <span class="k">return</span> <span class="nx">$cachefile</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>]]></content:encoded>
		</item>
		
		<item>
		<title>PHP中JSON使用的方法</title>	
		<pubDate>2011-04-26 14:13:23 +0000 UTC</pubDate>
		<link>http://chenye.org/php-how-to-use-json.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>话说JSON真是无处不在啊，AS3用他，JS用他，PHP也可以用他，所以说，掌握JSON还是有必要的</p>

<div class="highlight"><pre><span class="c1">//编码函数</span>
<span class="nx">json_encode</span><span class="p">()</span>

<span class="c1">//解码函数 </span>
<span class="nx">json_decode</span><span class="p">()</span>
</pre></div>

<p>解码后返回的是一个对象,需要用"-&gt;"访问
可以强制转换成数组 在前面加上<code>(array)</code>
如果文件编码不是UTF-8,一般都是GBK,就需要对内容进行编码转换
一般用</p>

<div class="highlight"><pre><span class="nx">iconv</span><span class="p">(</span><span class="s2">"原编码"</span><span class="p">,</span><span class="s2">"要转换成的编码"</span><span class="p">,</span><span class="s2">"变量名"</span><span class="p">)</span>
</pre></div>

<p>或者 </p>

<div class="highlight"><pre><span class="nx">mb_convert_encoding</span><span class="p">(</span><span class="s2">"变量名"</span><span class="p">,</span><span class="s2">"要转换成的编码"</span><span class="p">,</span><span class="s2">"原编码"</span><span class="p">)</span>
</pre></div>

<p>可以发现....两个相同函数的参数顺序是相反的..看来是故意整蛊我们这些写代码的人呐</p>]]></content:encoded>
		</item>
		
		<item>
		<title>PHP时间时区问题</title>	
		<pubDate>2011-04-26 13:28:13 +0000 UTC</pubDate>
		<link>http://chenye.org/php-timezone.html</link>
		<dc:creator>cheney</dc:creator>
		<content:encoded><![CDATA[<p>用<code>time()</code>获取系统时间的时候，又会有发现有时候和电脑的时间相差8小时呢？其实这个是时区设置的问题</p>

<div class="highlight"><pre><span class="nx">date_default_timezone_set</span><span class="p">(</span><span class="s1">'PRC'</span><span class="p">);</span>
</pre></div>

<p>我们只需要在PHP页面前面加上
便可将时区设置为东八区</p>]]></content:encoded>
		</item>
		
		


</channel>

</rss>

